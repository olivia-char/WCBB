{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"webpackHotUpdate(0,{279:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _videoReact = __webpack_require__(755);\\n\\n__webpack_require__(46);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar About = function (_Component) {\\n  _inherits(About, _Component);\\n\\n  function About(props) {\\n    _classCallCheck(this, About);\\n\\n    return _possibleConstructorReturn(this, (About.__proto__ || Object.getPrototypeOf(About)).call(this, props));\\n  }\\n\\n  _createClass(About, [{\\n    key: \\'render\\',\\n    value: function render() {\\n      return _react2.default.createElement(\\n        \\'div\\',\\n        { className: \\'container-fluid\\', style: styles.Background },\\n        _react2.default.createElement(\\n          \\'div\\',\\n          { className: \\'row\\' },\\n          _react2.default.createElement(\\n            \\'div\\',\\n            { className: \\'col-sm-12 col-md-12 col-lg-12\\' },\\n            _react2.default.createElement(\\n              \\'h4\\',\\n              { style: styles.Header },\\n              \\'WCBB Anniversary Event\\'\\n            ),\\n            _react2.default.createElement(\\n              \\'h2\\',\\n              { style: styles.Title },\\n              \\'\"Precious Day for Priceless People\"\\'\\n            )\\n          ),\\n          _react2.default.createElement(\\'div\\', { className: \\'col-lg-8\\' }),\\n          _react2.default.createElement(\\n            \\'div\\',\\n            { className: \\'col-sm-8 offset-sm-2 col-md-8 offset-md-2 col-lg-8 offset-lg-2\\', style: styles.Body },\\n            _react2.default.createElement(\\n              \\'p\\',\\n              null,\\n              \\'This is an event to feature Survivor musicians and bands as well as other local artists and neighbors who are celebrating our collective recovery by finding and recreating some of the missing pieces of our lives.\\'\\n            ),\\n            _react2.default.createElement(\\n              \\'p\\',\\n              null,\\n              \\'Expect great cuisine and fantastic, special entertainment, and presentations of the precious items to the priceless people and their families.\\'\\n            ),\\n            _react2.default.createElement(\\n              \\'p\\',\\n              null,\\n              \\'We can accommodate 150 guests, so be sure to get tickets early.\\'\\n            )\\n          )\\n        )\\n      );\\n    }\\n  }]);\\n\\n  return About;\\n}(_react.Component);\\n\\nexports.default = About;\\n\\n\\nvar styles = {\\n  Background: {\\n    backgroundColor: \"#4ECDC4\",\\n    color: \"#F7FFF7\"\\n  },\\n  Header: {\\n    marginTop: \"5%\",\\n    textAlign: \"center\",\\n    fontFamily: \"primaryFont\"\\n  },\\n  Title: {\\n    marginTop: \"2%\",\\n    textAlign: \"center\",\\n    fontFamily: \"secondaryFont\"\\n  },\\n  Body: {\\n    marginTop: \"3%\",\\n    marginBottom: \"3%\",\\n    textAlign: \"center\",\\n    fontFamily: \"Helvetica\",\\n    fontSize: \"22px\",\\n    padding: \"0% 5% 0% 5%\"\\n  }\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9BYm91dC5qcz9jNTkwIl0sIm5hbWVzIjpbIkFib3V0IiwicHJvcHMiLCJzdHlsZXMiLCJCYWNrZ3JvdW5kIiwiSGVhZGVyIiwiVGl0bGUiLCJCb2R5IiwiQ29tcG9uZW50IiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3IiLCJtYXJnaW5Ub3AiLCJ0ZXh0QWxpZ24iLCJmb250RmFtaWx5IiwibWFyZ2luQm90dG9tIiwiZm9udFNpemUiLCJwYWRkaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7SUFHcUJBLEs7OztBQUNwQixpQkFBWUMsS0FBWixFQUFrQjtBQUFBOztBQUFBLHlHQUNYQSxLQURXO0FBRWpCOzs7OzZCQUNRO0FBQ1IsYUFDRTtBQUFBO0FBQUEsVUFBSyxXQUFVLGlCQUFmLEVBQWlDLE9BQU9DLE9BQU9DLFVBQS9DO0FBQ0Q7QUFBQTtBQUFBLFlBQUssV0FBVSxLQUFmO0FBQ0M7QUFBQTtBQUFBLGNBQUssV0FBVSwrQkFBZjtBQUNDO0FBQUE7QUFBQSxnQkFBSSxPQUFPRCxPQUFPRSxNQUFsQjtBQUFBO0FBQUEsYUFERDtBQUVNO0FBQUE7QUFBQSxnQkFBSSxPQUFPRixPQUFPRyxLQUFsQjtBQUFBO0FBQUE7QUFGTixXQUREO0FBS0ksaURBQUssV0FBVSxVQUFmLEdBTEo7QUFRQztBQUFBO0FBQUEsY0FBSyxXQUFVLGdFQUFmLEVBQWdGLE9BQU9ILE9BQU9JLElBQTlGO0FBQ0c7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQURIO0FBTU07QUFBQTtBQUFBO0FBQUE7QUFBQSxhQU5OO0FBVU07QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVZOO0FBUkQ7QUFEQyxPQURGO0FBeUJBOzs7O0VBOUJpQ0MsZ0I7O2tCQUFkUCxLOzs7QUFpQ3JCLElBQU1FLFNBQVM7QUFDZEMsY0FBWTtBQUNYSyxxQkFBaUIsU0FETjtBQUVUQyxXQUFPO0FBRkUsR0FERTtBQUtiTCxVQUFRO0FBQ05NLGVBQVcsSUFETDtBQUVOQyxlQUFXLFFBRkw7QUFHTkMsZ0JBQVk7QUFITixHQUxLO0FBVWJQLFNBQU87QUFDTEssZUFBVyxJQUROO0FBRUxDLGVBQVcsUUFGTjtBQUdMQyxnQkFBWTtBQUhQLEdBVk07QUFlYk4sUUFBTTtBQUNKSSxlQUFXLElBRFA7QUFFTkcsa0JBQWMsSUFGUjtBQUdKRixlQUFXLFFBSFA7QUFJSkMsZ0JBQVksV0FKUjtBQUtKRSxjQUFVLE1BTE47QUFNTkMsYUFBUztBQU5IO0FBZk8sQ0FBZiIsImZpbGUiOiIyNzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAndmlkZW8tcmVhY3QnO1xuaW1wb3J0ICcuLi9tYWluLmNzcyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWJvdXQgZXh0ZW5kcyBDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcyl7XG5cdFx0c3VwZXIocHJvcHMpXG5cdH1cblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXItZmx1aWRcIiBzdHlsZT17c3R5bGVzLkJhY2tncm91bmR9PlxuXHRcdFx0PGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cblx0XHRcdCA8ZGl2IGNsYXNzTmFtZT1cImNvbC1zbS0xMiBjb2wtbWQtMTIgY29sLWxnLTEyXCI+XG5cdFx0XHRcdCA8aDQgc3R5bGU9e3N0eWxlcy5IZWFkZXJ9PldDQkIgQW5uaXZlcnNhcnkgRXZlbnQ8L2g0PlxuICAgICAgICAgXHQ8aDIgc3R5bGU9e3N0eWxlcy5UaXRsZX0+XCJQcmVjaW91cyBEYXkgZm9yIFByaWNlbGVzcyBQZW9wbGVcIjwvaDI+XG5cdFx0XHQgPC9kaXY+XG4gICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbGctOFwiPlxuXG4gICAgICAgPC9kaXY+XG5cdFx0XHQgPGRpdiBjbGFzc05hbWU9XCJjb2wtc20tOCBvZmZzZXQtc20tMiBjb2wtbWQtOCBvZmZzZXQtbWQtMiBjb2wtbGctOCBvZmZzZXQtbGctMlwiIHN0eWxlPXtzdHlsZXMuQm9keX0+XG5cdFx0XHQgICAgPHA+XG4gICAgICAgICAgICBUaGlzIGlzIGFuIGV2ZW50IHRvIGZlYXR1cmUgU3Vydml2b3IgbXVzaWNpYW5zIGFuZCBiYW5kcyBhcyB3ZWxsIGFzIG90aGVyIGxvY2FsIGFydGlzdHMgYW5kXG4gICAgICAgICAgICBuZWlnaGJvcnMgd2hvIGFyZSBjZWxlYnJhdGluZyBvdXIgY29sbGVjdGl2ZSByZWNvdmVyeSBieSBmaW5kaW5nIGFuZCByZWNyZWF0aW5nIHNvbWUgb2YgdGhlXG4gICAgICAgICAgICBtaXNzaW5nIHBpZWNlcyBvZiBvdXIgbGl2ZXMuXG4gICAgICAgICAgPC9wPlxuICAgICAgICAgIDxwPlxuICAgICAgICAgICAgRXhwZWN0IGdyZWF0IGN1aXNpbmUgYW5kIGZhbnRhc3RpYywgc3BlY2lhbCBlbnRlcnRhaW5tZW50LCBhbmQgcHJlc2VudGF0aW9ucyBvZiB0aGUgcHJlY2lvdXNcbiAgICAgICAgICAgIGl0ZW1zIHRvIHRoZSBwcmljZWxlc3MgcGVvcGxlIGFuZCB0aGVpciBmYW1pbGllcy5cbiAgICAgICAgICA8L3A+XG4gICAgICAgICAgPHA+V2UgY2FuIGFjY29tbW9kYXRlIDE1MCBndWVzdHMsIHNvIGJlIHN1cmUgdG8gZ2V0IHRpY2tldHMgZWFybHkuPC9wPlxuXHRcdFx0IDwvZGl2PlxuXHRcdCA8L2Rpdj5cbiAgICA8L2Rpdj5cblx0XHQpXG5cdH1cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuXHRCYWNrZ3JvdW5kOiB7XG5cdFx0YmFja2dyb3VuZENvbG9yOiBcIiM0RUNEQzRcIixcbiAgICBjb2xvcjogXCIjRjdGRkY3XCIsXG5cdH0sXG4gIEhlYWRlcjoge1xuICAgIG1hcmdpblRvcDogXCI1JVwiLFxuICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICBmb250RmFtaWx5OiBcInByaW1hcnlGb250XCIsXG4gIH0sXG4gIFRpdGxlOiB7XG4gICAgbWFyZ2luVG9wOiBcIjIlXCIsXG4gICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgIGZvbnRGYW1pbHk6IFwic2Vjb25kYXJ5Rm9udFwiXG4gIH0sXG4gIEJvZHk6IHtcbiAgICBtYXJnaW5Ub3A6IFwiMyVcIixcblx0XHRtYXJnaW5Cb3R0b206IFwiMyVcIixcbiAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgZm9udEZhbWlseTogXCJIZWx2ZXRpY2FcIixcbiAgICBmb250U2l6ZTogXCIyMnB4XCIsXG5cdFx0cGFkZGluZzogXCIwJSA1JSAwJSA1JVwiXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///279\\n')},708:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.mediaProperties = undefined;\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nexports.formatTime = formatTime;\\nexports.isVideoChild = isVideoChild;\\nexports.mergeAndSortChildren = mergeAndSortChildren;\\nexports.deprecatedWarning = deprecatedWarning;\\nexports.throttle = throttle;\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\n/**\\n * @file format-time.js\\n *\\n * Format seconds as a time string, H:MM:SS or M:SS\\n * Supplying a guide (in seconds) will force a number of leading zeros\\n * to cover the length of the guide\\n *\\n * @param  {Number} seconds Number of seconds to be turned into a string\\n * @param  {Number} guide   Number (in seconds) to model the string after\\n * @return {String}         Time formatted as H:MM:SS or M:SS\\n * @private\\n * @function formatTime\\n */\\nfunction formatTime() {\\n  var seconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\\n\\n  var s = Math.floor(seconds % 60);\\n  var m = Math.floor(seconds / 60 % 60);\\n  var h = Math.floor(seconds / 3600);\\n  var gm = Math.floor(guide / 60 % 60);\\n  var gh = Math.floor(guide / 3600);\\n\\n  // handle invalid times\\n  if (isNaN(seconds) || seconds === Infinity) {\\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\\n    // will add the minimum number of fields specified by the guide\\n    h = m = s = '-';\\n  }\\n\\n  // Check if we need to show hours\\n  h = h > 0 || gh > 0 ? h + ':' : '';\\n\\n  // If hours are showing, we may need to add a leading zero.\\n  // Always show at least one digit of minutes.\\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\\n\\n  // Check if leading zero is need for seconds\\n  s = s < 10 ? '0' + s : s;\\n\\n  return h + m + s;\\n}\\n\\n// Check if the element belongs to a video element\\n// only accept <source />, <track />,\\n// <MyComponent isVideoChild />\\n// elements\\nfunction isVideoChild(c) {\\n  if (c.props && c.props.isVideoChild) {\\n    return true;\\n  }\\n  return c.type === 'source' || c.type === 'track';\\n}\\n\\nvar find = function find(elements, func) {\\n  return elements.filter(func)[0];\\n};\\n\\n// check if two components are the same type\\nvar isTypeEqual = function isTypeEqual(component1, component2) {\\n  var type1 = component1.type;\\n  var type2 = component2.type;\\n\\n  if (typeof type1 === 'string' || typeof type2 === 'string') {\\n    return type1 === type2;\\n  }\\n\\n  if (typeof type1 === 'function' && typeof type2 === 'function') {\\n    return type1.displayName === type2.displayName;\\n  }\\n\\n  return false;\\n};\\n\\n// merge default children\\n// sort them by `order` property\\n// filter them by `disabled` property\\nfunction mergeAndSortChildren(defaultChildren, _children, _parentProps) {\\n  var defaultOrder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\\n\\n  var children = _react2.default.Children.toArray(_children);\\n  var parentProps = _extends({}, _parentProps);\\n  return children.filter(function (e) {\\n    return !e.props.disabled;\\n  }) // filter the disabled components\\n  .concat(defaultChildren.filter(function (c) {\\n    return !find(children, function (component) {\\n      return isTypeEqual(component, c);\\n    });\\n  })).map(function (element) {\\n    var defaultComponent = find(defaultChildren, function (c) {\\n      return isTypeEqual(c, element);\\n    });\\n    delete parentProps.order;\\n    var defaultProps = defaultComponent ? defaultComponent.props : {};\\n    var props = _extends({}, parentProps, defaultProps, element.props);\\n    var e = _react2.default.cloneElement(element, props, element.props.children);\\n    return e;\\n  }).sort(function (a, b) {\\n    return (a.props.order || defaultOrder) - (b.props.order || defaultOrder);\\n  });\\n}\\n\\n/**\\n * Temporary utility for generating the warnings\\n */\\nfunction deprecatedWarning(oldMethodCall, newMethodCall) {\\n  // eslint-disable-next-line no-console\\n  console.warn('WARNING: ' + oldMethodCall + ' will be deprecated soon! Please use ' + newMethodCall + ' instead.');\\n}\\n\\nfunction throttle(callback, limit) {\\n  var _arguments = arguments;\\n\\n  var wait = false;\\n  return function () {\\n    if (!wait) {\\n      callback.apply(null, _arguments);\\n      wait = true;\\n      setTimeout(function () {\\n        wait = false;\\n      }, limit);\\n    }\\n  };\\n}\\n\\nvar mediaProperties = exports.mediaProperties = ['error', 'src', 'srcObject', 'currentSrc', 'crossOrigin', 'networkState', 'preload', 'buffered', 'readyState', 'seeking', 'currentTime', 'duration', 'paused', 'defaultPlaybackRate', 'playbackRate', 'played', 'seekable', 'ended', 'autoplay', 'loop', 'mediaGroup', 'controller', 'controls', 'volume', 'muted', 'defaultMuted', 'audioTracks', 'videoTracks', 'textTracks', 'width', 'height', 'videoWidth', 'videoHeight', 'poster'];//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///708\\n\")},709:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.USER_ACTIVATE = exports.PLAYER_ACTIVATE = exports.FULLSCREEN_CHANGE = exports.OPERATE = undefined;\\nexports.handleFullscreenChange = handleFullscreenChange;\\nexports.activate = activate;\\nexports.userActivate = userActivate;\\nexports.play = play;\\nexports.pause = pause;\\nexports.togglePlay = togglePlay;\\nexports.seek = seek;\\nexports.forward = forward;\\nexports.replay = replay;\\nexports.changeRate = changeRate;\\nexports.changeVolume = changeVolume;\\nexports.mute = mute;\\nexports.toggleFullscreen = toggleFullscreen;\\n\\nvar _fullscreen = __webpack_require__(737);\\n\\nvar _fullscreen2 = _interopRequireDefault(_fullscreen);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar OPERATE = exports.OPERATE = 'video-react/OPERATE';\\nvar FULLSCREEN_CHANGE = exports.FULLSCREEN_CHANGE = 'video-react/FULLSCREEN_CHANGE';\\nvar PLAYER_ACTIVATE = exports.PLAYER_ACTIVATE = 'video-react/PLAYER_ACTIVATE';\\nvar USER_ACTIVATE = exports.USER_ACTIVATE = 'video-react/USER_ACTIVATE';\\n\\nfunction handleFullscreenChange(isFullscreen) {\\n  return {\\n    type: FULLSCREEN_CHANGE,\\n    isFullscreen: isFullscreen\\n  };\\n}\\n\\nfunction activate(activity) {\\n  return {\\n    type: PLAYER_ACTIVATE,\\n    activity: activity\\n  };\\n}\\n\\nfunction userActivate(activity) {\\n  return {\\n    type: USER_ACTIVATE,\\n    activity: activity\\n  };\\n}\\n\\nfunction play() {\\n  var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\\n    action: 'play',\\n    source: ''\\n  };\\n\\n  this.video.play();\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\nfunction pause() {\\n  var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\\n    action: 'pause',\\n    source: ''\\n  };\\n\\n  this.video.pause();\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\nfunction togglePlay() {\\n  var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\\n    action: 'toggle-play',\\n    source: ''\\n  };\\n\\n  this.video.togglePlay();\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\n// seek video by time\\nfunction seek(time) {\\n  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\\n    action: 'seek',\\n    source: ''\\n  };\\n\\n  this.video.seek(time);\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\n// jump forward x seconds\\nfunction forward(seconds) {\\n  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\\n    action: 'forward-' + seconds,\\n    source: ''\\n  };\\n\\n  this.video.forward(seconds);\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\n// jump back x seconds\\nfunction replay(seconds) {\\n  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\\n    action: 'replay-' + seconds,\\n    source: ''\\n  };\\n\\n  this.video.replay(seconds);\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\nfunction changeRate(rate) {\\n  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\\n    action: 'change-rate',\\n    source: ''\\n  };\\n\\n  this.video.playbackRate = rate;\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\nfunction changeVolume(volume) {\\n  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\\n    action: 'change-volume',\\n    source: ''\\n  };\\n\\n  var v = volume;\\n  if (volume < 0) {\\n    v = 0;\\n  }\\n  if (volume > 1) {\\n    v = 1;\\n  }\\n  this.video.volume = v;\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\nfunction mute(muted) {\\n  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\\n    action: muted ? 'muted' : 'unmuted',\\n    source: ''\\n  };\\n\\n  this.video.muted = muted;\\n\\n  return {\\n    type: OPERATE,\\n    operation: operation\\n  };\\n}\\n\\nfunction toggleFullscreen(player) {\\n  if (_fullscreen2.default.enabled) {\\n    if (_fullscreen2.default.isFullscreen) {\\n      _fullscreen2.default.exit();\\n    } else {\\n      _fullscreen2.default.request(this.rootElement);\\n    }\\n    return {\\n      type: OPERATE,\\n      operation: {\\n        action: 'toggle-fullscreen',\\n        source: ''\\n      }\\n    };\\n  }\\n\\n  return {\\n    type: FULLSCREEN_CHANGE,\\n    isFullscreen: !player.isFullscreen\\n  };\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///709\\n\")},710:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _MenuButton = __webpack_require__(743);\\n\\nvar _MenuButton2 = _interopRequireDefault(_MenuButton);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  actions: _propTypes2.default.object,\\n  rates: _propTypes2.default.array,\\n  className: _propTypes2.default.string\\n};\\n\\nvar defaultProps = {\\n  rates: [2, 1.5, 1.25, 1, 0.5, 0.25]\\n};\\n\\nvar PlaybackRateMenuButton = function (_Component) {\\n  _inherits(PlaybackRateMenuButton, _Component);\\n\\n  function PlaybackRateMenuButton(props, context) {\\n    _classCallCheck(this, PlaybackRateMenuButton);\\n\\n    var _this = _possibleConstructorReturn(this, (PlaybackRateMenuButton.__proto__ || Object.getPrototypeOf(PlaybackRateMenuButton)).call(this, props, context));\\n\\n    _this.handleSelectItem = _this.handleSelectItem.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(PlaybackRateMenuButton, [{\\n    key: \\'handleSelectItem\\',\\n    value: function handleSelectItem(index) {\\n      var _props = this.props,\\n          rates = _props.rates,\\n          actions = _props.actions;\\n\\n      if (index >= 0 && index < rates.length) {\\n        actions.changeRate(rates[index]);\\n      }\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var _props2 = this.props,\\n          rates = _props2.rates,\\n          player = _props2.player;\\n\\n      var items = rates.map(function (rate) {\\n        return {\\n          label: rate + \\'x\\',\\n          value: rate\\n        };\\n      });\\n      var selectedIndex = rates.indexOf(player.playbackRate) || 0;\\n\\n      return _react2.default.createElement(_MenuButton2.default, {\\n        className: (0, _classnames2.default)(\\'video-react-playback-rate\\', this.props.className),\\n        onSelectItem: this.handleSelectItem,\\n        items: items,\\n        selectedIndex: selectedIndex\\n      }, _react2.default.createElement(\\'span\\', { className: \\'video-react-control-text\\' }, \\'Playback Rate\\'), _react2.default.createElement(\\'div\\', { className: \\'video-react-playback-rate-value\\' }, player.playbackRate.toFixed(2), \\'x\\'));\\n    }\\n  }]);\\n\\n  return PlaybackRateMenuButton;\\n}(_react.Component);\\n\\nPlaybackRateMenuButton.propTypes = propTypes;\\nPlaybackRateMenuButton.defaultProps = defaultProps;\\nPlaybackRateMenuButton.displayName = \\'PlaybackRateMenuButton\\';\\nexports.default = PlaybackRateMenuButton;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///710\\n')},711:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(24);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _dom = __webpack_require__(712);\\n\\nvar Dom = _interopRequireWildcard(_dom);\\n\\nfunction _interopRequireWildcard(obj) {\\n  if (obj && obj.__esModule) {\\n    return obj;\\n  } else {\\n    var newObj = {};if (obj != null) {\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\\n      }\\n    }newObj.default = obj;return newObj;\\n  }\\n}\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  className: _propTypes2.default.string,\\n  onMouseDown: _propTypes2.default.func,\\n  onMouseMove: _propTypes2.default.func,\\n  stepForward: _propTypes2.default.func,\\n  stepBack: _propTypes2.default.func,\\n  sliderActive: _propTypes2.default.func,\\n  sliderInactive: _propTypes2.default.func,\\n  onMouseUp: _propTypes2.default.func,\\n  onFocus: _propTypes2.default.func,\\n  onBlur: _propTypes2.default.func,\\n  onClick: _propTypes2.default.func,\\n  getPercent: _propTypes2.default.func,\\n  vertical: _propTypes2.default.bool,\\n  children: _propTypes2.default.node,\\n  label: _propTypes2.default.string,\\n  valuenow: _propTypes2.default.string,\\n  valuetext: _propTypes2.default.string\\n};\\n\\nvar Slider = function (_Component) {\\n  _inherits(Slider, _Component);\\n\\n  function Slider(props, context) {\\n    _classCallCheck(this, Slider);\\n\\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props, context));\\n\\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\\n    _this.handleFocus = _this.handleFocus.bind(_this);\\n    _this.handleBlur = _this.handleBlur.bind(_this);\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    _this.handleKeyPress = _this.handleKeyPress.bind(_this);\\n    _this.stepForward = _this.stepForward.bind(_this);\\n    _this.stepBack = _this.stepBack.bind(_this);\\n    _this.calculateDistance = _this.calculateDistance.bind(_this);\\n    _this.getProgress = _this.getProgress.bind(_this);\\n    _this.renderChildren = _this.renderChildren.bind(_this);\\n\\n    _this.state = {\\n      active: false\\n    };\\n    return _this;\\n  }\\n\\n  _createClass(Slider, [{\\n    key: 'getProgress',\\n    value: function getProgress() {\\n      var getPercent = this.props.getPercent;\\n\\n      if (!getPercent) {\\n        return 0;\\n      }\\n      var progress = getPercent();\\n\\n      // Protect against no duration and other division issues\\n      if (typeof progress !== 'number' || progress < 0 || progress === Infinity) {\\n        progress = 0;\\n      }\\n      return progress;\\n    }\\n  }, {\\n    key: 'handleMouseDown',\\n    value: function handleMouseDown(event) {\\n      var onMouseDown = this.props.onMouseDown;\\n      // event.preventDefault();\\n      // event.stopPropagation();\\n\\n      document.addEventListener('mousemove', this.handleMouseMove, true);\\n      document.addEventListener('mouseup', this.handleMouseUp, true);\\n      document.addEventListener('touchmove', this.handleMouseMove, true);\\n      document.addEventListener('touchend', this.handleMouseUp, true);\\n\\n      this.setState({\\n        active: true,\\n        distance: 0\\n      });\\n\\n      if (this.props.sliderActive) {\\n        this.props.sliderActive(event);\\n      }\\n\\n      this.handleMouseMove(event);\\n\\n      if (onMouseDown) {\\n        onMouseDown(event);\\n      }\\n    }\\n  }, {\\n    key: 'handleMouseMove',\\n    value: function handleMouseMove(event) {\\n      var onMouseMove = this.props.onMouseMove;\\n\\n      if (onMouseMove) {\\n        onMouseMove(event);\\n      }\\n    }\\n  }, {\\n    key: 'handleMouseUp',\\n    value: function handleMouseUp(event) {\\n      var onMouseUp = this.props.onMouseUp;\\n\\n      document.removeEventListener('mousemove', this.handleMouseMove, true);\\n      document.removeEventListener('mouseup', this.handleMouseUp, true);\\n      document.removeEventListener('touchmove', this.handleMouseMove, true);\\n      document.removeEventListener('touchend', this.handleMouseUp, true);\\n\\n      this.setState({\\n        active: false\\n      });\\n\\n      if (this.props.sliderInactive) {\\n        this.props.sliderInactive(event);\\n      }\\n\\n      if (onMouseUp) {\\n        onMouseUp(event);\\n      }\\n    }\\n  }, {\\n    key: 'handleFocus',\\n    value: function handleFocus(e) {\\n      document.addEventListener('keydown', this.handleKeyPress, true);\\n      if (this.props.onFocus) {\\n        this.props.onFocus(e);\\n      }\\n    }\\n  }, {\\n    key: 'handleBlur',\\n    value: function handleBlur(e) {\\n      document.removeEventListener('keydown', this.handleKeyPress, true);\\n      if (this.props.onBlur) {\\n        this.props.onBlur(e);\\n      }\\n    }\\n  }, {\\n    key: 'handleClick',\\n    value: function handleClick(event) {\\n      event.preventDefault();\\n      // event.stopPropagation();\\n      if (this.props.onClick) {\\n        this.props.onClick(event);\\n      }\\n    }\\n  }, {\\n    key: 'handleKeyPress',\\n    value: function handleKeyPress(event) {\\n      if (event.which === 37 || event.which === 40) {\\n        // Left and Down Arrows\\n        event.preventDefault();\\n        event.stopPropagation();\\n        this.stepBack();\\n      } else if (event.which === 38 || event.which === 39) {\\n        // Up and Right Arrows\\n        event.preventDefault();\\n        event.stopPropagation();\\n        this.stepForward();\\n      }\\n    }\\n  }, {\\n    key: 'stepForward',\\n    value: function stepForward() {\\n      if (this.props.stepForward) {\\n        this.props.stepForward();\\n      }\\n    }\\n  }, {\\n    key: 'stepBack',\\n    value: function stepBack() {\\n      if (this.props.stepBack) {\\n        this.props.stepBack();\\n      }\\n    }\\n  }, {\\n    key: 'calculateDistance',\\n    value: function calculateDistance(event) {\\n      var node = (0, _reactDom.findDOMNode)(this);\\n      var position = Dom.getPointerPosition(node, event);\\n      if (this.props.vertical) {\\n        return position.y;\\n      }\\n      return position.x;\\n    }\\n  }, {\\n    key: 'renderChildren',\\n    value: function renderChildren() {\\n      var progress = this.getProgress();\\n      var percentage = (progress * 100).toFixed(2) + '%';\\n      return _react2.default.Children.map(this.props.children, function (child) {\\n        return _react2.default.cloneElement(child, { progress: progress, percentage: percentage });\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _props = this.props,\\n          vertical = _props.vertical,\\n          label = _props.label,\\n          valuenow = _props.valuenow,\\n          valuetext = _props.valuetext;\\n\\n      return _react2.default.createElement('div', {\\n        className: (0, _classnames2.default)(this.props.className, {\\n          'video-react-slider-vertical': vertical,\\n          'video-react-slider-horizontal': !vertical,\\n          'video-react-sliding': this.state.active\\n        }, 'video-react-slider'),\\n        tabIndex: '0',\\n        onMouseDown: this.handleMouseDown,\\n        onTouchStart: this.handleMouseDown,\\n        onFocus: this.handleFocus,\\n        onBlur: this.handleBlur,\\n        onClick: this.handleClick,\\n        'aria-label': label || '',\\n        'aria-valuenow': valuenow || '',\\n        'aria-valuetext': valuetext || '',\\n        'aria-valuemin': 0,\\n        'aria-valuemax': 100\\n      }, this.renderChildren());\\n    }\\n  }]);\\n\\n  return Slider;\\n}(_react.Component);\\n\\nexports.default = Slider;\\n\\nSlider.propTypes = propTypes;\\nSlider.displayName = 'Slider';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///711\\n\")},712:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.findElPosition = findElPosition;\\nexports.getPointerPosition = getPointerPosition;\\nexports.blurNode = blurNode;\\nexports.hasClass = hasClass;\\n\\nvar _reactDom = __webpack_require__(24);\\n\\n/**\\n * Offset Left\\n * getBoundingClientRect technique from\\n * John Resig http://ejohn.org/blog/getboundingclientrect-is-awesome/\\n *\\n * @function findElPosition\\n * @param {Element} el Element from which to get offset\\n * @return {Object}\\n */\\nfunction findElPosition(el) {\\n  var box = void 0;\\n\\n  if (el.getBoundingClientRect && el.parentNode) {\\n    box = el.getBoundingClientRect();\\n  }\\n\\n  if (!box) {\\n    return {\\n      left: 0,\\n      top: 0\\n    };\\n  }\\n\\n  var docEl = document.documentElement;\\n  var body = document.body;\\n\\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\\n  var left = box.left + scrollLeft - clientLeft;\\n\\n  var clientTop = docEl.clientTop || body.clientTop || 0;\\n  var scrollTop = window.pageYOffset || body.scrollTop;\\n  var top = box.top + scrollTop - clientTop;\\n\\n  // Android sometimes returns slightly off decimal values, so need to round\\n  return {\\n    left: Math.round(left),\\n    top: Math.round(top)\\n  };\\n}\\n\\n/**\\n * Get pointer position in element\\n * Returns an object with x and y coordinates.\\n * The base on the coordinates are the bottom left of the element.\\n *\\n * @function getPointerPosition\\n * @param {Element} el Element on which to get the pointer position on\\n * @param {Event} event Event object\\n * @return {Object} This object will have x and y coordinates corresponding to the mouse position\\n */\\nfunction getPointerPosition(el, event) {\\n  var position = {};\\n  var box = findElPosition(el);\\n  var boxW = el.offsetWidth;\\n  var boxH = el.offsetHeight;\\n\\n  var boxY = box.top;\\n  var boxX = box.left;\\n  var pageY = event.pageY;\\n  var pageX = event.pageX;\\n\\n  if (event.changedTouches) {\\n    pageX = event.changedTouches[0].pageX;\\n    pageY = event.changedTouches[0].pageY;\\n  }\\n\\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\\n\\n  return position;\\n}\\n\\n// blur an element\\nfunction blurNode(reactNode) {\\n  var domNode = (0, _reactDom.findDOMNode)(reactNode);\\n  if (domNode && domNode.blur) {\\n    domNode.blur();\\n  }\\n}\\n\\n// check if an element has a class name\\nfunction hasClass(elm, cls) {\\n  var classes = elm.className.split(' ');\\n  for (var i = 0; i < classes.length; i++) {\\n    if (classes[i].toLowerCase() === cls.toLowerCase()) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL3V0aWxzL2RvbS5qcz8xMTU1Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZmluZEVsUG9zaXRpb24iLCJnZXRQb2ludGVyUG9zaXRpb24iLCJibHVyTm9kZSIsImhhc0NsYXNzIiwiX3JlYWN0RG9tIiwicmVxdWlyZSIsImVsIiwiYm94IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicGFyZW50Tm9kZSIsImxlZnQiLCJ0b3AiLCJkb2NFbCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwiYm9keSIsImNsaWVudExlZnQiLCJzY3JvbGxMZWZ0Iiwid2luZG93IiwicGFnZVhPZmZzZXQiLCJjbGllbnRUb3AiLCJzY3JvbGxUb3AiLCJwYWdlWU9mZnNldCIsIk1hdGgiLCJyb3VuZCIsImV2ZW50IiwicG9zaXRpb24iLCJib3hXIiwib2Zmc2V0V2lkdGgiLCJib3hIIiwib2Zmc2V0SGVpZ2h0IiwiYm94WSIsImJveFgiLCJwYWdlWSIsInBhZ2VYIiwiY2hhbmdlZFRvdWNoZXMiLCJ5IiwibWF4IiwibWluIiwieCIsInJlYWN0Tm9kZSIsImRvbU5vZGUiLCJmaW5kRE9NTm9kZSIsImJsdXIiLCJlbG0iLCJjbHMiLCJjbGFzc2VzIiwiY2xhc3NOYW1lIiwic3BsaXQiLCJpIiwibGVuZ3RoIiwidG9Mb3dlckNhc2UiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3QztBQUdBRCxRQUFRRSxjQUFSLEdBQXlCQSxjQUF6QjtBQUNBRixRQUFRRyxrQkFBUixHQUE2QkEsa0JBQTdCO0FBQ0FILFFBQVFJLFFBQVIsR0FBbUJBLFFBQW5CO0FBQ0FKLFFBQVFLLFFBQVIsR0FBbUJBLFFBQW5COztBQUVBLElBQUlDLFlBQVks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SUgsUUFBUUcsQ0FBUixFQUFXRSxXQUFYLE9BQTZCTixJQUFJTSxXQUFKLEVBQWpDLEVBQW9EO0FBQ2xELGFBQU8sSUFBUDtBQUNEO0FBQ0Y7QUFDRCxTQUFPLEtBQVA7QUFDRCIsImZpbGUiOiI3MTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZpbmRFbFBvc2l0aW9uID0gZmluZEVsUG9zaXRpb247XG5leHBvcnRzLmdldFBvaW50ZXJQb3NpdGlvbiA9IGdldFBvaW50ZXJQb3NpdGlvbjtcbmV4cG9ydHMuYmx1ck5vZGUgPSBibHVyTm9kZTtcbmV4cG9ydHMuaGFzQ2xhc3MgPSBoYXNDbGFzcztcblxudmFyIF9yZWFjdERvbSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xuXG4vKipcbiAqIE9mZnNldCBMZWZ0XG4gKiBnZXRCb3VuZGluZ0NsaWVudFJlY3QgdGVjaG5pcXVlIGZyb21cbiAqIEpvaG4gUmVzaWcgaHR0cDovL2Vqb2huLm9yZy9ibG9nL2dldGJvdW5kaW5nY2xpZW50cmVjdC1pcy1hd2Vzb21lL1xuICpcbiAqIEBmdW5jdGlvbiBmaW5kRWxQb3NpdGlvblxuICogQHBhcmFtIHtFbGVtZW50fSBlbCBFbGVtZW50IGZyb20gd2hpY2ggdG8gZ2V0IG9mZnNldFxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG5mdW5jdGlvbiBmaW5kRWxQb3NpdGlvbihlbCkge1xuICB2YXIgYm94ID0gdm9pZCAwO1xuXG4gIGlmIChlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QgJiYgZWwucGFyZW50Tm9kZSkge1xuICAgIGJveCA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB9XG5cbiAgaWYgKCFib3gpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGVmdDogMCxcbiAgICAgIHRvcDogMFxuICAgIH07XG4gIH1cblxuICB2YXIgZG9jRWwgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keTtcblxuICB2YXIgY2xpZW50TGVmdCA9IGRvY0VsLmNsaWVudExlZnQgfHwgYm9keS5jbGllbnRMZWZ0IHx8IDA7XG4gIHZhciBzY3JvbGxMZWZ0ID0gd2luZG93LnBhZ2VYT2Zmc2V0IHx8IGJvZHkuc2Nyb2xsTGVmdDtcbiAgdmFyIGxlZnQgPSBib3gubGVmdCArIHNjcm9sbExlZnQgLSBjbGllbnRMZWZ0O1xuXG4gIHZhciBjbGllbnRUb3AgPSBkb2NFbC5jbGllbnRUb3AgfHwgYm9keS5jbGllbnRUb3AgfHwgMDtcbiAgdmFyIHNjcm9sbFRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldCB8fCBib2R5LnNjcm9sbFRvcDtcbiAgdmFyIHRvcCA9IGJveC50b3AgKyBzY3JvbGxUb3AgLSBjbGllbnRUb3A7XG5cbiAgLy8gQW5kcm9pZCBzb21ldGltZXMgcmV0dXJucyBzbGlnaHRseSBvZmYgZGVjaW1hbCB2YWx1ZXMsIHNvIG5lZWQgdG8gcm91bmRcbiAgcmV0dXJuIHtcbiAgICBsZWZ0OiBNYXRoLnJvdW5kKGxlZnQpLFxuICAgIHRvcDogTWF0aC5yb3VuZCh0b3ApXG4gIH07XG59XG5cbi8qKlxuICogR2V0IHBvaW50ZXIgcG9zaXRpb24gaW4gZWxlbWVudFxuICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCB4IGFuZCB5IGNvb3JkaW5hdGVzLlxuICogVGhlIGJhc2Ugb24gdGhlIGNvb3JkaW5hdGVzIGFyZSB0aGUgYm90dG9tIGxlZnQgb2YgdGhlIGVsZW1lbnQuXG4gKlxuICogQGZ1bmN0aW9uIGdldFBvaW50ZXJQb3NpdGlvblxuICogQHBhcmFtIHtFbGVtZW50fSBlbCBFbGVtZW50IG9uIHdoaWNoIHRvIGdldCB0aGUgcG9pbnRlciBwb3NpdGlvbiBvblxuICogQHBhcmFtIHtFdmVudH0gZXZlbnQgRXZlbnQgb2JqZWN0XG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoaXMgb2JqZWN0IHdpbGwgaGF2ZSB4IGFuZCB5IGNvb3JkaW5hdGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG1vdXNlIHBvc2l0aW9uXG4gKi9cbmZ1bmN0aW9uIGdldFBvaW50ZXJQb3NpdGlvbihlbCwgZXZlbnQpIHtcbiAgdmFyIHBvc2l0aW9uID0ge307XG4gIHZhciBib3ggPSBmaW5kRWxQb3NpdGlvbihlbCk7XG4gIHZhciBib3hXID0gZWwub2Zmc2V0V2lkdGg7XG4gIHZhciBib3hIID0gZWwub2Zmc2V0SGVpZ2h0O1xuXG4gIHZhciBib3hZID0gYm94LnRvcDtcbiAgdmFyIGJveFggPSBib3gubGVmdDtcbiAgdmFyIHBhZ2VZID0gZXZlbnQucGFnZVk7XG4gIHZhciBwYWdlWCA9IGV2ZW50LnBhZ2VYO1xuXG4gIGlmIChldmVudC5jaGFuZ2VkVG91Y2hlcykge1xuICAgIHBhZ2VYID0gZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVg7XG4gICAgcGFnZVkgPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWTtcbiAgfVxuXG4gIHBvc2l0aW9uLnkgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAoYm94WSAtIHBhZ2VZICsgYm94SCkgLyBib3hIKSk7XG4gIHBvc2l0aW9uLnggPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAocGFnZVggLSBib3hYKSAvIGJveFcpKTtcblxuICByZXR1cm4gcG9zaXRpb247XG59XG5cbi8vIGJsdXIgYW4gZWxlbWVudFxuZnVuY3Rpb24gYmx1ck5vZGUocmVhY3ROb2RlKSB7XG4gIHZhciBkb21Ob2RlID0gKDAsIF9yZWFjdERvbS5maW5kRE9NTm9kZSkocmVhY3ROb2RlKTtcbiAgaWYgKGRvbU5vZGUgJiYgZG9tTm9kZS5ibHVyKSB7XG4gICAgZG9tTm9kZS5ibHVyKCk7XG4gIH1cbn1cblxuLy8gY2hlY2sgaWYgYW4gZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lXG5mdW5jdGlvbiBoYXNDbGFzcyhlbG0sIGNscykge1xuICB2YXIgY2xhc3NlcyA9IGVsbS5jbGFzc05hbWUuc3BsaXQoJyAnKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbGFzc2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGNsYXNzZXNbaV0udG9Mb3dlckNhc2UoKSA9PT0gY2xzLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///712\\n\")},713:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.handleLoadStart = handleLoadStart;\\nexports.handleCanPlay = handleCanPlay;\\nexports.handleWaiting = handleWaiting;\\nexports.handleCanPlayThrough = handleCanPlayThrough;\\nexports.handlePlaying = handlePlaying;\\nexports.handlePlay = handlePlay;\\nexports.handlePause = handlePause;\\nexports.handleEnd = handleEnd;\\nexports.handleSeeking = handleSeeking;\\nexports.handleSeeked = handleSeeked;\\nexports.handleDurationChange = handleDurationChange;\\nexports.handleTimeUpdate = handleTimeUpdate;\\nexports.handleVolumeChange = handleVolumeChange;\\nexports.handleProgressChange = handleProgressChange;\\nexports.handleRateChange = handleRateChange;\\nexports.handleSuspend = handleSuspend;\\nexports.handleAbort = handleAbort;\\nexports.handleEmptied = handleEmptied;\\nexports.handleStalled = handleStalled;\\nexports.handleLoadedMetaData = handleLoadedMetaData;\\nexports.handleLoadedData = handleLoadedData;\\nexports.handleResize = handleResize;\\nexports.handleError = handleError;\\nexports.handleSeekingTime = handleSeekingTime;\\nexports.handleEndSeeking = handleEndSeeking;\\nvar LOAD_START = exports.LOAD_START = 'video-react/LOAD_START';\\nvar CAN_PLAY = exports.CAN_PLAY = 'video-react/CAN_PLAY';\\nvar WAITING = exports.WAITING = 'video-react/WAITING';\\nvar CAN_PLAY_THROUGH = exports.CAN_PLAY_THROUGH = 'video-react/CAN_PLAY_THROUGH';\\nvar PLAYING = exports.PLAYING = 'video-react/PLAYING';\\nvar PLAY = exports.PLAY = 'video-react/PLAY';\\nvar PAUSE = exports.PAUSE = 'video-react/PAUSE';\\nvar END = exports.END = 'video-react/END';\\nvar SEEKING = exports.SEEKING = 'video-react/SEEKING';\\nvar SEEKED = exports.SEEKED = 'video-react/SEEKED';\\nvar SEEKING_TIME = exports.SEEKING_TIME = 'video-react/SEEKING_TIME';\\nvar END_SEEKING = exports.END_SEEKING = 'video-react/END_SEEKING';\\nvar DURATION_CHANGE = exports.DURATION_CHANGE = 'video-react/DURATION_CHANGE';\\nvar TIME_UPDATE = exports.TIME_UPDATE = 'video-react/TIME_UPDATE';\\nvar VOLUME_CHANGE = exports.VOLUME_CHANGE = 'video-react/VOLUME_CHANGE';\\nvar PROGRESS_CHANGE = exports.PROGRESS_CHANGE = 'video-react/PROGRESS_CHANGE';\\nvar RATE_CHANGE = exports.RATE_CHANGE = 'video-react/RATE_CHANGE';\\nvar SUSPEND = exports.SUSPEND = 'video-react/SUSPEND';\\nvar ABORT = exports.ABORT = 'video-react/ABORT';\\nvar EMPTIED = exports.EMPTIED = 'video-react/EMPTIED';\\nvar STALLED = exports.STALLED = 'video-react/STALLED';\\nvar LOADED_META_DATA = exports.LOADED_META_DATA = 'video-react/LOADED_META_DATA';\\nvar LOADED_DATA = exports.LOADED_DATA = 'video-react/LOADED_DATA';\\nvar RESIZE = exports.RESIZE = 'video-react/RESIZE';\\nvar ERROR = exports.ERROR = 'video-react/ERROR';\\n\\nfunction handleLoadStart(videoProps) {\\n  return {\\n    type: LOAD_START,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleCanPlay(videoProps) {\\n  return {\\n    type: CAN_PLAY,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleWaiting(videoProps) {\\n  return {\\n    type: WAITING,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleCanPlayThrough(videoProps) {\\n  return {\\n    type: CAN_PLAY_THROUGH,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handlePlaying(videoProps) {\\n  return {\\n    type: PLAYING,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handlePlay(videoProps) {\\n  return {\\n    type: PLAY,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handlePause(videoProps) {\\n  return {\\n    type: PAUSE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleEnd(videoProps) {\\n  return {\\n    type: END,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleSeeking(videoProps) {\\n  return {\\n    type: SEEKING,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleSeeked(videoProps) {\\n  return {\\n    type: SEEKED,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleDurationChange(videoProps) {\\n  return {\\n    type: DURATION_CHANGE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleTimeUpdate(videoProps) {\\n  return {\\n    type: TIME_UPDATE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleVolumeChange(videoProps) {\\n  return {\\n    type: VOLUME_CHANGE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleProgressChange(videoProps) {\\n  return {\\n    type: PROGRESS_CHANGE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleRateChange(videoProps) {\\n  return {\\n    type: RATE_CHANGE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleSuspend(videoProps) {\\n  return {\\n    type: SUSPEND,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleAbort(videoProps) {\\n  return {\\n    type: ABORT,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleEmptied(videoProps) {\\n  return {\\n    type: EMPTIED,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleStalled(videoProps) {\\n  return {\\n    type: STALLED,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleLoadedMetaData(videoProps) {\\n  return {\\n    type: LOADED_META_DATA,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleLoadedData(videoProps) {\\n  return {\\n    type: LOADED_DATA,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleResize(videoProps) {\\n  return {\\n    type: RESIZE,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleError(videoProps) {\\n  return {\\n    type: ERROR,\\n    videoProps: videoProps\\n  };\\n}\\n\\nfunction handleSeekingTime(time) {\\n  return {\\n    type: SEEKING_TIME,\\n    time: time\\n  };\\n}\\n\\nfunction handleEndSeeking(time) {\\n  return {\\n    type: END_SEEKING,\\n    time: time\\n  };\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///713\\n\")},714:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  tagName: _propTypes2.default.string.isRequired,\\n  onClick: _propTypes2.default.func.isRequired,\\n  onFocus: _propTypes2.default.func,\\n  onBlur: _propTypes2.default.func,\\n  className: _propTypes2.default.string\\n};\\n\\nvar defaultProps = {\\n  tagName: \\'div\\'\\n};\\n\\nvar ClickableComponent = function (_Component) {\\n  _inherits(ClickableComponent, _Component);\\n\\n  function ClickableComponent(props, context) {\\n    _classCallCheck(this, ClickableComponent);\\n\\n    var _this = _possibleConstructorReturn(this, (ClickableComponent.__proto__ || Object.getPrototypeOf(ClickableComponent)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    _this.handleFocus = _this.handleFocus.bind(_this);\\n    _this.handleBlur = _this.handleBlur.bind(_this);\\n    _this.handleKeypress = _this.handleKeypress.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(ClickableComponent, [{\\n    key: \\'handleKeypress\\',\\n    value: function handleKeypress(event) {\\n      // Support Space (32) or Enter (13) key operation to fire a click event\\n      if (event.which === 32 || event.which === 13) {\\n        event.preventDefault();\\n        this.handleClick(event);\\n      }\\n    }\\n  }, {\\n    key: \\'handleClick\\',\\n    value: function handleClick(event) {\\n      var onClick = this.props.onClick;\\n\\n      onClick(event);\\n    }\\n  }, {\\n    key: \\'handleFocus\\',\\n    value: function handleFocus(e) {\\n      document.addEventListener(\\'keydown\\', this.handleKeypress);\\n      if (this.props.onFocus) {\\n        this.props.onFocus(e);\\n      }\\n    }\\n  }, {\\n    key: \\'handleBlur\\',\\n    value: function handleBlur(e) {\\n      document.removeEventListener(\\'keydown\\', this.handleKeypress);\\n      if (this.props.onBlur) {\\n        this.props.onBlur(e);\\n      }\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var Tag = this.props.tagName;\\n      var props = _extends({}, this.props);\\n      delete props.tagName;\\n      delete props.className;\\n      return _react2.default.createElement(Tag, _extends({\\n        className: (0, _classnames2.default)(this.props.className),\\n        role: \\'button\\',\\n        tabIndex: \\'0\\',\\n        onClick: this.handleClick,\\n        onFocus: this.handleFocus,\\n        onBlur: this.handleBlur\\n      }, props));\\n    }\\n  }]);\\n\\n  return ClickableComponent;\\n}(_react.Component);\\n\\nexports.default = ClickableComponent;\\n\\nClickableComponent.propTypes = propTypes;\\nClickableComponent.defaultProps = defaultProps;\\nClickableComponent.displayName = \\'ClickableComponent\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///714\\n')},715:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _PopupButton = __webpack_require__(747);\\n\\nvar _PopupButton2 = _interopRequireDefault(_PopupButton);\\n\\nvar _VolumeBar = __webpack_require__(745);\\n\\nvar _VolumeBar2 = _interopRequireDefault(_VolumeBar);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  actions: _propTypes2.default.object,\\n  vertical: _propTypes2.default.bool,\\n  className: _propTypes2.default.string,\\n  alwaysShowVolume: _propTypes2.default.bool\\n};\\n\\nvar defaultProps = {\\n  vertical: false\\n};\\n\\nvar VolumeMenuButton = function (_Component) {\\n  _inherits(VolumeMenuButton, _Component);\\n\\n  function VolumeMenuButton(props, context) {\\n    _classCallCheck(this, VolumeMenuButton);\\n\\n    var _this = _possibleConstructorReturn(this, (VolumeMenuButton.__proto__ || Object.getPrototypeOf(VolumeMenuButton)).call(this, props, context));\\n\\n    _this.state = {\\n      active: false\\n    };\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    _this.handleFocus = _this.handleFocus.bind(_this);\\n    _this.handleBlur = _this.handleBlur.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(VolumeMenuButton, [{\\n    key: 'handleClick',\\n    value: function handleClick() {\\n      var _props = this.props,\\n          player = _props.player,\\n          actions = _props.actions;\\n\\n      actions.mute(!player.muted);\\n    }\\n  }, {\\n    key: 'handleFocus',\\n    value: function handleFocus() {\\n      this.setState({\\n        active: true\\n      });\\n    }\\n  }, {\\n    key: 'handleBlur',\\n    value: function handleBlur() {\\n      this.setState({\\n        active: false\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _props2 = this.props,\\n          vertical = _props2.vertical,\\n          player = _props2.player,\\n          className = _props2.className;\\n\\n      var inline = !vertical;\\n      var level = this.volumeLevel;\\n      return _react2.default.createElement(_PopupButton2.default, {\\n        className: (0, _classnames2.default)(className, {\\n          'video-react-volume-menu-button-vertical': vertical,\\n          'video-react-volume-menu-button-horizontal': !vertical,\\n          'video-react-vol-muted': player.muted,\\n          'video-react-vol-0': level === 0 && !player.muted,\\n          'video-react-vol-1': level === 1,\\n          'video-react-vol-2': level === 2,\\n          'video-react-vol-3': level === 3,\\n          'video-react-slider-active': this.props.alwaysShowVolume || this.state.active,\\n          'video-react-lock-showing': this.props.alwaysShowVolume || this.state.active\\n        }, 'video-react-volume-menu-button'),\\n        onClick: this.handleClick,\\n        inline: inline\\n      }, _react2.default.createElement(_VolumeBar2.default, _extends({\\n        onFocus: this.handleFocus,\\n        onBlur: this.handleBlur\\n      }, this.props)));\\n    }\\n  }, {\\n    key: 'volumeLevel',\\n    get: function get() {\\n      var _props$player = this.props.player,\\n          volume = _props$player.volume,\\n          muted = _props$player.muted;\\n\\n      var level = 3;\\n      if (volume === 0 || muted) {\\n        level = 0;\\n      } else if (volume < 0.33) {\\n        level = 1;\\n      } else if (volume < 0.67) {\\n        level = 2;\\n      }\\n      return level;\\n    }\\n  }]);\\n\\n  return VolumeMenuButton;\\n}(_react.Component);\\n\\nVolumeMenuButton.propTypes = propTypes;\\nVolumeMenuButton.defaultProps = defaultProps;\\nVolumeMenuButton.displayName = 'VolumeMenuButton';\\nexports.default = VolumeMenuButton;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///715\\n\")},716:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = TimeDivider;\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  separator: _propTypes2.default.string,\\n  className: _propTypes2.default.string\\n};\\n\\nfunction TimeDivider(_ref) {\\n  var separator = _ref.separator,\\n      className = _ref.className;\\n\\n  var separatorText = separator || '/';\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)('video-react-time-control video-react-time-divider', className),\\n    dir: 'ltr'\\n  }, _react2.default.createElement('div', null, _react2.default.createElement('span', null, separatorText)));\\n}\\n\\nTimeDivider.propTypes = propTypes;\\nTimeDivider.displayName = 'TimeDivider';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvdGltZS1jb250cm9scy9UaW1lRGl2aWRlci5qcz9hZWUzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIlRpbWVEaXZpZGVyIiwiX3Byb3BUeXBlcyIsInJlcXVpcmUiLCJfcHJvcFR5cGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2NsYXNzbmFtZXMiLCJfY2xhc3NuYW1lczIiLCJvYmoiLCJfX2VzTW9kdWxlIiwicHJvcFR5cGVzIiwic2VwYXJhdG9yIiwic3RyaW5nIiwiY2xhc3NOYW1lIiwiX3JlZiIsInNlcGFyYXRvclRleHQiLCJjcmVhdGVFbGVtZW50IiwiZGlyIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3QztBQUdBRCxRQUFRRSxPQUFSLEdBQWtCQyxXQUFsQjs7QUFFQSxJQUFJQyxhQUFhLG1CQUFBQyxDQUFRLENBQVIsQ0FBakI7O0FBRUEsSUFBSUMsY0FBY0MsdUJBQXVCSCxVQUF2QixDQUFsQjs7QUFFQSxJQUFJSSxTQUFTLG1CQUFBSCxDQUFRLENBQVIsQ0FBYjs7QUFFQSxJQUFJSSxVQUFVRix1QkFBdUJDLE1BQXZCLENBQWQ7O0FBRUEsSUFBSUUsY0FBYyxtQkFBQUwsQ0FBUSxDQUFSLENBQWxCOztBQUVBLElBQUlNLGVBQWVKLHVCQUF1QkcsV0FBdkIsQ0FBbkI7O0FBRUEsU0FBU0gsc0JBQVQsQ0FBZ0NLLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsT0FBT0EsSUFBSUMsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRVYsU0FBU1UsR0FBWCxFQUFyQztBQUF3RDs7QUFFL0YsSUFBSUUsWUFBWTtBQUNkQyxhQUFXVCxZQUFZSixPQUFaLENBQW9CYyxNQURqQjtBQUVkQyxhQUFXWCxZQUFZSixPQUFaLENBQW9CYztBQUZqQixDQUFoQjs7QUFLQSxTQUFTYixXQUFULENBQXFCZSxJQUFyQixFQUEyQjtBQUN6QixNQUFJSCxZQUFZRyxLQUFLSCxTQUFyQjtBQUFBLE1BQ0lFLFlBQVlDLEtBQUtELFNBRHJCOztBQUdBLE1BQUlFLGdCQUFnQkosYUFBYSxHQUFqQztBQUNBLFNBQU9OLFFBQVFQLE9BQVIsQ0FBZ0JrQixhQUFoQixDQUNMLEtBREssRUFFTDtBQUNFSCxlQUFXLENBQUMsR0FBR04sYUFBYVQsT0FBakIsRUFBMEIsbURBQTFCLEVBQStFZSxTQUEvRSxDQURiO0FBRUVJLFNBQUs7QUFGUCxHQUZLLEVBTUxaLFFBQVFQLE9BQVIsQ0FBZ0JrQixhQUFoQixDQUNFLEtBREYsRUFFRSxJQUZGLEVBR0VYLFFBQVFQLE9BQVIsQ0FBZ0JrQixhQUFoQixDQUNFLE1BREYsRUFFRSxJQUZGLEVBR0VELGFBSEYsQ0FIRixDQU5LLENBQVA7QUFnQkQ7O0FBRURoQixZQUFZVyxTQUFaLEdBQXdCQSxTQUF4QjtBQUNBWCxZQUFZbUIsV0FBWixHQUEwQixhQUExQiIsImZpbGUiOiI3MTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBUaW1lRGl2aWRlcjtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9jbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG52YXIgX2NsYXNzbmFtZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NuYW1lcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIHNlcGFyYXRvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcbn07XG5cbmZ1bmN0aW9uIFRpbWVEaXZpZGVyKF9yZWYpIHtcbiAgdmFyIHNlcGFyYXRvciA9IF9yZWYuc2VwYXJhdG9yLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWU7XG5cbiAgdmFyIHNlcGFyYXRvclRleHQgPSBzZXBhcmF0b3IgfHwgJy8nO1xuICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgJ2RpdicsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiAoMCwgX2NsYXNzbmFtZXMyLmRlZmF1bHQpKCd2aWRlby1yZWFjdC10aW1lLWNvbnRyb2wgdmlkZW8tcmVhY3QtdGltZS1kaXZpZGVyJywgY2xhc3NOYW1lKSxcbiAgICAgIGRpcjogJ2x0cidcbiAgICB9LFxuICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgJ2RpdicsXG4gICAgICBudWxsLFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdzcGFuJyxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgc2VwYXJhdG9yVGV4dFxuICAgICAgKVxuICAgIClcbiAgKTtcbn1cblxuVGltZURpdmlkZXIucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuVGltZURpdmlkZXIuZGlzcGxheU5hbWUgPSAnVGltZURpdmlkZXInOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///716\\n\")},717:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nfunction DurationDisplay(_ref) {\\n  var duration = _ref.player.duration,\\n      className = _ref.className;\\n\\n  var formattedTime = (0, _utils.formatTime)(duration);\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)(className, 'video-react-duration video-react-time-control video-react-control')\\n  }, _react2.default.createElement('div', {\\n    className: 'video-react-duration-display',\\n    'aria-live': 'off'\\n  }, _react2.default.createElement('span', { className: 'video-react-control-text' }, 'Duration Time '), formattedTime));\\n}\\n\\nDurationDisplay.propTypes = propTypes;\\nDurationDisplay.displayName = 'DurationDisplay';\\n\\nexports.default = DurationDisplay;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvdGltZS1jb250cm9scy9EdXJhdGlvbkRpc3BsYXkuanM/MTlkNSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9wcm9wVHlwZXMiLCJyZXF1aXJlIiwiX3Byb3BUeXBlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9jbGFzc25hbWVzIiwiX2NsYXNzbmFtZXMyIiwiX3V0aWxzIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJwcm9wVHlwZXMiLCJwbGF5ZXIiLCJvYmplY3QiLCJjbGFzc05hbWUiLCJzdHJpbmciLCJEdXJhdGlvbkRpc3BsYXkiLCJfcmVmIiwiZHVyYXRpb24iLCJmb3JtYXR0ZWRUaW1lIiwiZm9ybWF0VGltZSIsImNyZWF0ZUVsZW1lbnQiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLGFBQWEsbUJBQUFDLENBQVEsQ0FBUixDQUFqQjs7QUFFQSxJQUFJQyxjQUFjQyx1QkFBdUJILFVBQXZCLENBQWxCOztBQUVBLElBQUlJLFNBQVMsbUJBQUFILENBQVEsQ0FBUixDQUFiOztBQUVBLElBQUlJLFVBQVVGLHVCQUF1QkMsTUFBdkIsQ0FBZDs7QUFFQSxJQUFJRSxjQUFjLG1CQUFBTCxDQUFRLENBQVIsQ0FBbEI7O0FBRUEsSUFBSU0sZUFBZUosdUJBQXVCRyxXQUF2QixDQUFuQjs7QUFFQSxJQUFJRSxTQUFTLG1CQUFBUCxDQUFRLEdBQVIsQ0FBYjs7QUFFQSxTQUFTRSxzQkFBVCxDQUFnQ00sR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxPQUFPQSxJQUFJQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxTQUFTRixHQUFYLEVBQXJDO0FBQXdEOztBQUUvRixJQUFJRyxZQUFZO0FBQ2RDLFVBQVFYLFlBQVlTLE9BQVosQ0FBb0JHLE1BRGQ7QUFFZEMsYUFBV2IsWUFBWVMsT0FBWixDQUFvQks7QUFGakIsQ0FBaEI7O0FBS0EsU0FBU0MsZUFBVCxDQUF5QkMsSUFBekIsRUFBK0I7QUFDN0IsTUFBSUMsV0FBV0QsS0FBS0wsTUFBTCxDQUFZTSxRQUEzQjtBQUFBLE1BQ0lKLFlBQVlHLEtBQUtILFNBRHJCOztBQUdBLE1BQUlLLGdCQUFnQixDQUFDLEdBQUdaLE9BQU9hLFVBQVgsRUFBdUJGLFFBQXZCLENBQXBCO0FBQ0EsU0FBT2QsUUFBUU0sT0FBUixDQUFnQlcsYUFBaEIsQ0FDTCxLQURLLEVBRUw7QUFDRVAsZUFBVyxDQUFDLEdBQUdSLGFBQWFJLE9BQWpCLEVBQTBCSSxTQUExQixFQUFxQyxtRUFBckM7QUFEYixHQUZLLEVBS0xWLFFBQVFNLE9BQVIsQ0FBZ0JXLGFBQWhCLENBQ0UsS0FERixFQUVFO0FBQ0VQLGVBQVcsOEJBRGI7QUFFRSxpQkFBYTtBQUZmLEdBRkYsRUFNRVYsUUFBUU0sT0FBUixDQUFnQlcsYUFBaEIsQ0FDRSxNQURGLEVBRUUsRUFBRVAsV0FBVywwQkFBYixFQUZGLEVBR0UsZ0JBSEYsQ0FORixFQVdFSyxhQVhGLENBTEssQ0FBUDtBQW1CRDs7QUFFREgsZ0JBQWdCTCxTQUFoQixHQUE0QkEsU0FBNUI7QUFDQUssZ0JBQWdCTSxXQUFoQixHQUE4QixpQkFBOUI7O0FBRUF6QixRQUFRYSxPQUFSLEdBQWtCTSxlQUFsQiIsImZpbGUiOiI3MTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxudmFyIF9jbGFzc25hbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzbmFtZXMpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByb3BUeXBlcyA9IHtcbiAgcGxheWVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgY2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufTtcblxuZnVuY3Rpb24gRHVyYXRpb25EaXNwbGF5KF9yZWYpIHtcbiAgdmFyIGR1cmF0aW9uID0gX3JlZi5wbGF5ZXIuZHVyYXRpb24sXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZTtcblxuICB2YXIgZm9ybWF0dGVkVGltZSA9ICgwLCBfdXRpbHMuZm9ybWF0VGltZSkoZHVyYXRpb24pO1xuICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgJ2RpdicsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiAoMCwgX2NsYXNzbmFtZXMyLmRlZmF1bHQpKGNsYXNzTmFtZSwgJ3ZpZGVvLXJlYWN0LWR1cmF0aW9uIHZpZGVvLXJlYWN0LXRpbWUtY29udHJvbCB2aWRlby1yZWFjdC1jb250cm9sJylcbiAgICB9LFxuICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgJ2RpdicsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3ZpZGVvLXJlYWN0LWR1cmF0aW9uLWRpc3BsYXknLFxuICAgICAgICAnYXJpYS1saXZlJzogJ29mZidcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgJ3NwYW4nLFxuICAgICAgICB7IGNsYXNzTmFtZTogJ3ZpZGVvLXJlYWN0LWNvbnRyb2wtdGV4dCcgfSxcbiAgICAgICAgJ0R1cmF0aW9uIFRpbWUgJ1xuICAgICAgKSxcbiAgICAgIGZvcm1hdHRlZFRpbWVcbiAgICApXG4gICk7XG59XG5cbkR1cmF0aW9uRGlzcGxheS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5EdXJhdGlvbkRpc3BsYXkuZGlzcGxheU5hbWUgPSAnRHVyYXRpb25EaXNwbGF5JztcblxuZXhwb3J0cy5kZWZhdWx0ID0gRHVyYXRpb25EaXNwbGF5OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///717\\n\")},718:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nfunction CurrentTimeDisplay(_ref) {\\n  var _ref$player = _ref.player,\\n      currentTime = _ref$player.currentTime,\\n      duration = _ref$player.duration,\\n      className = _ref.className;\\n\\n  var formattedTime = (0, _utils.formatTime)(currentTime, duration);\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)('video-react-current-time video-react-time-control video-react-control', className)\\n  }, _react2.default.createElement('div', {\\n    className: 'video-react-current-time-display',\\n    'aria-live': 'off'\\n  }, _react2.default.createElement('span', { className: 'video-react-control-text' }, 'Current Time '), formattedTime));\\n}\\n\\nCurrentTimeDisplay.propTypes = propTypes;\\nCurrentTimeDisplay.displayName = 'CurrentTimeDisplay';\\n\\nexports.default = CurrentTimeDisplay;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvdGltZS1jb250cm9scy9DdXJyZW50VGltZURpc3BsYXkuanM/MWM4ZiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9wcm9wVHlwZXMiLCJyZXF1aXJlIiwiX3Byb3BUeXBlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9jbGFzc25hbWVzIiwiX2NsYXNzbmFtZXMyIiwiX3V0aWxzIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJwcm9wVHlwZXMiLCJwbGF5ZXIiLCJvYmplY3QiLCJjbGFzc05hbWUiLCJzdHJpbmciLCJDdXJyZW50VGltZURpc3BsYXkiLCJfcmVmIiwiX3JlZiRwbGF5ZXIiLCJjdXJyZW50VGltZSIsImR1cmF0aW9uIiwiZm9ybWF0dGVkVGltZSIsImZvcm1hdFRpbWUiLCJjcmVhdGVFbGVtZW50IiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3Qzs7QUFJQSxJQUFJQyxhQUFhLG1CQUFBQyxDQUFRLENBQVIsQ0FBakI7O0FBRUEsSUFBSUMsY0FBY0MsdUJBQXVCSCxVQUF2QixDQUFsQjs7QUFFQSxJQUFJSSxTQUFTLG1CQUFBSCxDQUFRLENBQVIsQ0FBYjs7QUFFQSxJQUFJSSxVQUFVRix1QkFBdUJDLE1BQXZCLENBQWQ7O0FBRUEsSUFBSUUsY0FBYyxtQkFBQUwsQ0FBUSxDQUFSLENBQWxCOztBQUVBLElBQUlNLGVBQWVKLHVCQUF1QkcsV0FBdkIsQ0FBbkI7O0FBRUEsSUFBSUUsU0FBUyxtQkFBQVAsQ0FBUSxHQUFSLENBQWI7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NNLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsT0FBT0EsSUFBSUMsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRUUsU0FBU0YsR0FBWCxFQUFyQztBQUF3RDs7QUFFL0YsSUFBSUcsWUFBWTtBQUNkQyxVQUFRWCxZQUFZUyxPQUFaLENBQW9CRyxNQURkO0FBRWRDLGFBQVdiLFlBQVlTLE9BQVosQ0FBb0JLO0FBRmpCLENBQWhCOztBQUtBLFNBQVNDLGtCQUFULENBQTRCQyxJQUE1QixFQUFrQztBQUNoQyxNQUFJQyxjQUFjRCxLQUFLTCxNQUF2QjtBQUFBLE1BQ0lPLGNBQWNELFlBQVlDLFdBRDlCO0FBQUEsTUFFSUMsV0FBV0YsWUFBWUUsUUFGM0I7QUFBQSxNQUdJTixZQUFZRyxLQUFLSCxTQUhyQjs7QUFLQSxNQUFJTyxnQkFBZ0IsQ0FBQyxHQUFHZCxPQUFPZSxVQUFYLEVBQXVCSCxXQUF2QixFQUFvQ0MsUUFBcEMsQ0FBcEI7QUFDQSxTQUFPaEIsUUFBUU0sT0FBUixDQUFnQmEsYUFBaEIsQ0FDTCxLQURLLEVBRUw7QUFDRVQsZUFBVyxDQUFDLEdBQUdSLGFBQWFJLE9BQWpCLEVBQTBCLHVFQUExQixFQUFtR0ksU0FBbkc7QUFEYixHQUZLLEVBS0xWLFFBQVFNLE9BQVIsQ0FBZ0JhLGFBQWhCLENBQ0UsS0FERixFQUVFO0FBQ0VULGVBQVcsa0NBRGI7QUFFRSxpQkFBYTtBQUZmLEdBRkYsRUFNRVYsUUFBUU0sT0FBUixDQUFnQmEsYUFBaEIsQ0FDRSxNQURGLEVBRUUsRUFBRVQsV0FBVywwQkFBYixFQUZGLEVBR0UsZUFIRixDQU5GLEVBV0VPLGFBWEYsQ0FMSyxDQUFQO0FBbUJEOztBQUVETCxtQkFBbUJMLFNBQW5CLEdBQStCQSxTQUEvQjtBQUNBSyxtQkFBbUJRLFdBQW5CLEdBQWlDLG9CQUFqQzs7QUFFQTNCLFFBQVFhLE9BQVIsR0FBa0JNLGtCQUFsQiIsImZpbGUiOiI3MTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxudmFyIF9jbGFzc25hbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzbmFtZXMpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByb3BUeXBlcyA9IHtcbiAgcGxheWVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgY2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufTtcblxuZnVuY3Rpb24gQ3VycmVudFRpbWVEaXNwbGF5KF9yZWYpIHtcbiAgdmFyIF9yZWYkcGxheWVyID0gX3JlZi5wbGF5ZXIsXG4gICAgICBjdXJyZW50VGltZSA9IF9yZWYkcGxheWVyLmN1cnJlbnRUaW1lLFxuICAgICAgZHVyYXRpb24gPSBfcmVmJHBsYXllci5kdXJhdGlvbixcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lO1xuXG4gIHZhciBmb3JtYXR0ZWRUaW1lID0gKDAsIF91dGlscy5mb3JtYXRUaW1lKShjdXJyZW50VGltZSwgZHVyYXRpb24pO1xuICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgJ2RpdicsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiAoMCwgX2NsYXNzbmFtZXMyLmRlZmF1bHQpKCd2aWRlby1yZWFjdC1jdXJyZW50LXRpbWUgdmlkZW8tcmVhY3QtdGltZS1jb250cm9sIHZpZGVvLXJlYWN0LWNvbnRyb2wnLCBjbGFzc05hbWUpXG4gICAgfSxcbiAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICdkaXYnLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICd2aWRlby1yZWFjdC1jdXJyZW50LXRpbWUtZGlzcGxheScsXG4gICAgICAgICdhcmlhLWxpdmUnOiAnb2ZmJ1xuICAgICAgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnc3BhbicsXG4gICAgICAgIHsgY2xhc3NOYW1lOiAndmlkZW8tcmVhY3QtY29udHJvbC10ZXh0JyB9LFxuICAgICAgICAnQ3VycmVudCBUaW1lICdcbiAgICAgICksXG4gICAgICBmb3JtYXR0ZWRUaW1lXG4gICAgKVxuICApO1xufVxuXG5DdXJyZW50VGltZURpc3BsYXkucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuQ3VycmVudFRpbWVEaXNwbGF5LmRpc3BsYXlOYW1lID0gJ0N1cnJlbnRUaW1lRGlzcGxheSc7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEN1cnJlbnRUaW1lRGlzcGxheTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///718\\n\")},719:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nfunction RemainingTimeDisplay(_ref) {\\n  var _ref$player = _ref.player,\\n      currentTime = _ref$player.currentTime,\\n      duration = _ref$player.duration,\\n      className = _ref.className;\\n\\n  var remainingTime = duration - currentTime;\\n  var formattedTime = (0, _utils.formatTime)(remainingTime);\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)('video-react-remaining-time video-react-time-control video-react-control', className)\\n  }, _react2.default.createElement('div', {\\n    className: 'video-react-remaining-time-display',\\n    'aria-live': 'off'\\n  }, _react2.default.createElement('span', { className: 'video-react-control-text' }, 'Remaining Time '), '-', formattedTime));\\n}\\n\\nRemainingTimeDisplay.propTypes = propTypes;\\nRemainingTimeDisplay.displayName = 'RemainingTimeDisplay';\\n\\nexports.default = RemainingTimeDisplay;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvdGltZS1jb250cm9scy9SZW1haW5pbmdUaW1lRGlzcGxheS5qcz8zNWFkIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3Byb3BUeXBlcyIsInJlcXVpcmUiLCJfcHJvcFR5cGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2NsYXNzbmFtZXMiLCJfY2xhc3NuYW1lczIiLCJfdXRpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInByb3BUeXBlcyIsInBsYXllciIsIm9iamVjdCIsImNsYXNzTmFtZSIsInN0cmluZyIsIlJlbWFpbmluZ1RpbWVEaXNwbGF5IiwiX3JlZiIsIl9yZWYkcGxheWVyIiwiY3VycmVudFRpbWUiLCJkdXJhdGlvbiIsInJlbWFpbmluZ1RpbWUiLCJmb3JtYXR0ZWRUaW1lIiwiZm9ybWF0VGltZSIsImNyZWF0ZUVsZW1lbnQiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLGFBQWEsbUJBQUFDLENBQVEsQ0FBUixDQUFqQjs7QUFFQSxJQUFJQyxjQUFjQyx1QkFBdUJILFVBQXZCLENBQWxCOztBQUVBLElBQUlJLFNBQVMsbUJBQUFILENBQVEsQ0FBUixDQUFiOztBQUVBLElBQUlJLFVBQVVGLHVCQUF1QkMsTUFBdkIsQ0FBZDs7QUFFQSxJQUFJRSxjQUFjLG1CQUFBTCxDQUFRLENBQVIsQ0FBbEI7O0FBRUEsSUFBSU0sZUFBZUosdUJBQXVCRyxXQUF2QixDQUFuQjs7QUFFQSxJQUFJRSxTQUFTLG1CQUFBUCxDQUFRLEdBQVIsQ0FBYjs7QUFFQSxTQUFTRSxzQkFBVCxDQUFnQ00sR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxPQUFPQSxJQUFJQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxTQUFTRixHQUFYLEVBQXJDO0FBQXdEOztBQUUvRixJQUFJRyxZQUFZO0FBQ2RDLFVBQVFYLFlBQVlTLE9BQVosQ0FBb0JHLE1BRGQ7QUFFZEMsYUFBV2IsWUFBWVMsT0FBWixDQUFvQks7QUFGakIsQ0FBaEI7O0FBS0EsU0FBU0Msb0JBQVQsQ0FBOEJDLElBQTlCLEVBQW9DO0FBQ2xDLE1BQUlDLGNBQWNELEtBQUtMLE1BQXZCO0FBQUEsTUFDSU8sY0FBY0QsWUFBWUMsV0FEOUI7QUFBQSxNQUVJQyxXQUFXRixZQUFZRSxRQUYzQjtBQUFBLE1BR0lOLFlBQVlHLEtBQUtILFNBSHJCOztBQUtBLE1BQUlPLGdCQUFnQkQsV0FBV0QsV0FBL0I7QUFDQSxNQUFJRyxnQkFBZ0IsQ0FBQyxHQUFHZixPQUFPZ0IsVUFBWCxFQUF1QkYsYUFBdkIsQ0FBcEI7QUFDQSxTQUFPakIsUUFBUU0sT0FBUixDQUFnQmMsYUFBaEIsQ0FDTCxLQURLLEVBRUw7QUFDRVYsZUFBVyxDQUFDLEdBQUdSLGFBQWFJLE9BQWpCLEVBQTBCLHlFQUExQixFQUFxR0ksU0FBckc7QUFEYixHQUZLLEVBS0xWLFFBQVFNLE9BQVIsQ0FBZ0JjLGFBQWhCLENBQ0UsS0FERixFQUVFO0FBQ0VWLGVBQVcsb0NBRGI7QUFFRSxpQkFBYTtBQUZmLEdBRkYsRUFNRVYsUUFBUU0sT0FBUixDQUFnQmMsYUFBaEIsQ0FDRSxNQURGLEVBRUUsRUFBRVYsV0FBVywwQkFBYixFQUZGLEVBR0UsaUJBSEYsQ0FORixFQVdFLEdBWEYsRUFZRVEsYUFaRixDQUxLLENBQVA7QUFvQkQ7O0FBRUROLHFCQUFxQkwsU0FBckIsR0FBaUNBLFNBQWpDO0FBQ0FLLHFCQUFxQlMsV0FBckIsR0FBbUMsc0JBQW5DOztBQUVBNUIsUUFBUWEsT0FBUixHQUFrQk0sb0JBQWxCIiwiZmlsZSI6IjcxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9jbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG52YXIgX2NsYXNzbmFtZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NuYW1lcyk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICBwbGF5ZXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LFxuICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59O1xuXG5mdW5jdGlvbiBSZW1haW5pbmdUaW1lRGlzcGxheShfcmVmKSB7XG4gIHZhciBfcmVmJHBsYXllciA9IF9yZWYucGxheWVyLFxuICAgICAgY3VycmVudFRpbWUgPSBfcmVmJHBsYXllci5jdXJyZW50VGltZSxcbiAgICAgIGR1cmF0aW9uID0gX3JlZiRwbGF5ZXIuZHVyYXRpb24sXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZTtcblxuICB2YXIgcmVtYWluaW5nVGltZSA9IGR1cmF0aW9uIC0gY3VycmVudFRpbWU7XG4gIHZhciBmb3JtYXR0ZWRUaW1lID0gKDAsIF91dGlscy5mb3JtYXRUaW1lKShyZW1haW5pbmdUaW1lKTtcbiAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICdkaXYnLFxuICAgIHtcbiAgICAgIGNsYXNzTmFtZTogKDAsIF9jbGFzc25hbWVzMi5kZWZhdWx0KSgndmlkZW8tcmVhY3QtcmVtYWluaW5nLXRpbWUgdmlkZW8tcmVhY3QtdGltZS1jb250cm9sIHZpZGVvLXJlYWN0LWNvbnRyb2wnLCBjbGFzc05hbWUpXG4gICAgfSxcbiAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICdkaXYnLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICd2aWRlby1yZWFjdC1yZW1haW5pbmctdGltZS1kaXNwbGF5JyxcbiAgICAgICAgJ2FyaWEtbGl2ZSc6ICdvZmYnXG4gICAgICB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdzcGFuJyxcbiAgICAgICAgeyBjbGFzc05hbWU6ICd2aWRlby1yZWFjdC1jb250cm9sLXRleHQnIH0sXG4gICAgICAgICdSZW1haW5pbmcgVGltZSAnXG4gICAgICApLFxuICAgICAgJy0nLFxuICAgICAgZm9ybWF0dGVkVGltZVxuICAgIClcbiAgKTtcbn1cblxuUmVtYWluaW5nVGltZURpc3BsYXkucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuUmVtYWluaW5nVGltZURpc3BsYXkuZGlzcGxheU5hbWUgPSAnUmVtYWluaW5nVGltZURpc3BsYXknO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBSZW1haW5pbmdUaW1lRGlzcGxheTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///719\\n\")},720:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  actions: _propTypes2.default.object,\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nvar FullscreenToggle = function (_Component) {\\n  _inherits(FullscreenToggle, _Component);\\n\\n  function FullscreenToggle(props, context) {\\n    _classCallCheck(this, FullscreenToggle);\\n\\n    var _this = _possibleConstructorReturn(this, (FullscreenToggle.__proto__ || Object.getPrototypeOf(FullscreenToggle)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(FullscreenToggle, [{\\n    key: \\'handleClick\\',\\n    value: function handleClick() {\\n      var _props = this.props,\\n          player = _props.player,\\n          actions = _props.actions;\\n\\n      actions.toggleFullscreen(player);\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _props2 = this.props,\\n          player = _props2.player,\\n          className = _props2.className;\\n\\n      return _react2.default.createElement(\\'button\\', {\\n        className: (0, _classnames2.default)(className, {\\n          \\'video-react-icon-fullscreen-exit\\': player.isFullscreen,\\n          \\'video-react-icon-fullscreen\\': !player.isFullscreen\\n        }, \\'video-react-fullscreen-control video-react-control video-react-button video-react-icon\\'),\\n        ref: function ref(c) {\\n          _this2.button = c;\\n        },\\n        type: \\'button\\',\\n        tabIndex: \\'0\\',\\n        onClick: this.handleClick\\n      }, _react2.default.createElement(\\'span\\', { className: \\'video-react-control-text\\' }, \\'Non-Fullscreen\\'));\\n    }\\n  }]);\\n\\n  return FullscreenToggle;\\n}(_react.Component);\\n\\nexports.default = FullscreenToggle;\\n\\nFullscreenToggle.propTypes = propTypes;\\nFullscreenToggle.displayName = \\'FullscreenToggle\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///720\\n')},721:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _ForwardReplayControl = __webpack_require__(722);\\n\\nvar _ForwardReplayControl2 = _interopRequireDefault(_ForwardReplayControl);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\n// Pass mode into parent function\\nvar ReplayControl = (0, _ForwardReplayControl2.default)('replay');\\nReplayControl.displayName = 'ReplayControl';\\n\\nexports.default = ReplayControl;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvY29udHJvbC1iYXIvUmVwbGF5Q29udHJvbC5qcz81MTdiIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX0ZvcndhcmRSZXBsYXlDb250cm9sIiwicmVxdWlyZSIsIl9Gb3J3YXJkUmVwbGF5Q29udHJvbDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJSZXBsYXlDb250cm9sIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3Qzs7QUFJQSxJQUFJQyx3QkFBd0IsbUJBQUFDLENBQVEsR0FBUixDQUE1Qjs7QUFFQSxJQUFJQyx5QkFBeUJDLHVCQUF1QkgscUJBQXZCLENBQTdCOztBQUVBLFNBQVNHLHNCQUFULENBQWdDQyxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLE9BQU9BLElBQUlDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVFLFNBQVNGLEdBQVgsRUFBckM7QUFBd0Q7O0FBRS9GO0FBQ0EsSUFBSUcsZ0JBQWdCLENBQUMsR0FBR0wsdUJBQXVCSSxPQUEzQixFQUFvQyxRQUFwQyxDQUFwQjtBQUNBQyxjQUFjQyxXQUFkLEdBQTRCLGVBQTVCOztBQUVBVixRQUFRUSxPQUFSLEdBQWtCQyxhQUFsQiIsImZpbGUiOiI3MjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfRm9yd2FyZFJlcGxheUNvbnRyb2wgPSByZXF1aXJlKCcuL0ZvcndhcmRSZXBsYXlDb250cm9sJyk7XG5cbnZhciBfRm9yd2FyZFJlcGxheUNvbnRyb2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRm9yd2FyZFJlcGxheUNvbnRyb2wpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBQYXNzIG1vZGUgaW50byBwYXJlbnQgZnVuY3Rpb25cbnZhciBSZXBsYXlDb250cm9sID0gKDAsIF9Gb3J3YXJkUmVwbGF5Q29udHJvbDIuZGVmYXVsdCkoJ3JlcGxheScpO1xuUmVwbGF5Q29udHJvbC5kaXNwbGF5TmFtZSA9ICdSZXBsYXlDb250cm9sJztcblxuZXhwb3J0cy5kZWZhdWx0ID0gUmVwbGF5Q29udHJvbDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///721\\n\")},722:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  actions: _propTypes2.default.object,\\n  className: _propTypes2.default.string,\\n  seconds: _propTypes2.default.oneOf([5, 10, 30])\\n};\\n\\nvar defaultProps = {\\n  seconds: 10\\n};\\n\\nexports.default = function (mode) {\\n  var ForwardReplayControl = function (_Component) {\\n    _inherits(ForwardReplayControl, _Component);\\n\\n    function ForwardReplayControl(props, context) {\\n      _classCallCheck(this, ForwardReplayControl);\\n\\n      var _this = _possibleConstructorReturn(this, (ForwardReplayControl.__proto__ || Object.getPrototypeOf(ForwardReplayControl)).call(this, props, context));\\n\\n      _this.handleClick = _this.handleClick.bind(_this);\\n      return _this;\\n    }\\n\\n    _createClass(ForwardReplayControl, [{\\n      key: 'handleClick',\\n      value: function handleClick() {\\n        var _props = this.props,\\n            actions = _props.actions,\\n            seconds = _props.seconds;\\n        // Depends mode to implement different actions\\n\\n        if (mode === 'forward') {\\n          actions.forward(seconds);\\n        } else {\\n          actions.replay(seconds);\\n        }\\n      }\\n    }, {\\n      key: 'render',\\n      value: function render() {\\n        var _this2 = this;\\n\\n        var _props2 = this.props,\\n            seconds = _props2.seconds,\\n            className = _props2.className;\\n\\n        var classNames = ['video-react-control', 'video-react-button', 'video-react-icon'];\\n        classNames.push('video-react-icon-' + mode + '-' + seconds, 'video-react-' + mode + '-control');\\n        if (this.props.className) {\\n          classNames.push(this.props.className);\\n        }\\n        return _react2.default.createElement('button', {\\n          ref: function ref(c) {\\n            _this2.button = c;\\n          },\\n          className: classNames.join(' '),\\n          type: 'button',\\n          onClick: this.handleClick\\n        }, _react2.default.createElement('span', { className: 'video-react-control-text' }, mode + ' ' + seconds + ' seconds'));\\n      }\\n    }]);\\n\\n    return ForwardReplayControl;\\n  }(_react.Component);\\n\\n  ForwardReplayControl.propTypes = propTypes;\\n  ForwardReplayControl.defaultProps = defaultProps;\\n  return ForwardReplayControl;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///722\\n\")},723:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _ForwardReplayControl = __webpack_require__(722);\\n\\nvar _ForwardReplayControl2 = _interopRequireDefault(_ForwardReplayControl);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\n// Pass mode into parent function\\nvar ForwardControl = (0, _ForwardReplayControl2.default)('forward');\\n\\nForwardControl.displayName = 'ForwardControl';\\nexports.default = ForwardControl;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvY29udHJvbC1iYXIvRm9yd2FyZENvbnRyb2wuanM/ZTFiZCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9Gb3J3YXJkUmVwbGF5Q29udHJvbCIsInJlcXVpcmUiLCJfRm9yd2FyZFJlcGxheUNvbnRyb2wyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiRm9yd2FyZENvbnRyb2wiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLHdCQUF3QixtQkFBQUMsQ0FBUSxHQUFSLENBQTVCOztBQUVBLElBQUlDLHlCQUF5QkMsdUJBQXVCSCxxQkFBdkIsQ0FBN0I7O0FBRUEsU0FBU0csc0JBQVQsQ0FBZ0NDLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsT0FBT0EsSUFBSUMsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRUUsU0FBU0YsR0FBWCxFQUFyQztBQUF3RDs7QUFFL0Y7QUFDQSxJQUFJRyxpQkFBaUIsQ0FBQyxHQUFHTCx1QkFBdUJJLE9BQTNCLEVBQW9DLFNBQXBDLENBQXJCOztBQUVBQyxlQUFlQyxXQUFmLEdBQTZCLGdCQUE3QjtBQUNBVixRQUFRUSxPQUFSLEdBQWtCQyxjQUFsQiIsImZpbGUiOiI3MjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfRm9yd2FyZFJlcGxheUNvbnRyb2wgPSByZXF1aXJlKCcuL0ZvcndhcmRSZXBsYXlDb250cm9sJyk7XG5cbnZhciBfRm9yd2FyZFJlcGxheUNvbnRyb2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRm9yd2FyZFJlcGxheUNvbnRyb2wpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBQYXNzIG1vZGUgaW50byBwYXJlbnQgZnVuY3Rpb25cbnZhciBGb3J3YXJkQ29udHJvbCA9ICgwLCBfRm9yd2FyZFJlcGxheUNvbnRyb2wyLmRlZmF1bHQpKCdmb3J3YXJkJyk7XG5cbkZvcndhcmRDb250cm9sLmRpc3BsYXlOYW1lID0gJ0ZvcndhcmRDb250cm9sJztcbmV4cG9ydHMuZGVmYXVsdCA9IEZvcndhcmRDb250cm9sOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///723\\n\")},724:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  actions: _propTypes2.default.object,\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nvar PlayToggle = function (_Component) {\\n  _inherits(PlayToggle, _Component);\\n\\n  function PlayToggle(props, context) {\\n    _classCallCheck(this, PlayToggle);\\n\\n    var _this = _possibleConstructorReturn(this, (PlayToggle.__proto__ || Object.getPrototypeOf(PlayToggle)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(PlayToggle, [{\\n    key: 'handleClick',\\n    value: function handleClick() {\\n      var _props = this.props,\\n          actions = _props.actions,\\n          player = _props.player;\\n\\n      if (player.paused) {\\n        actions.play();\\n      } else {\\n        actions.pause();\\n      }\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _props2 = this.props,\\n          player = _props2.player,\\n          className = _props2.className;\\n\\n      var controlText = player.paused ? 'Play' : 'Pause';\\n\\n      return _react2.default.createElement('button', {\\n        ref: function ref(c) {\\n          _this2.button = c;\\n        },\\n        className: (0, _classnames2.default)(className, {\\n          'video-react-play-control': true,\\n          'video-react-control': true,\\n          'video-react-button': true,\\n          'video-react-paused': player.paused,\\n          'video-react-playing': !player.paused\\n        }),\\n        type: 'button',\\n        tabIndex: '0',\\n        onClick: this.handleClick\\n      }, _react2.default.createElement('span', { className: 'video-react-control-text' }, controlText));\\n    }\\n  }]);\\n\\n  return PlayToggle;\\n}(_react.Component);\\n\\nexports.default = PlayToggle;\\n\\nPlayToggle.propTypes = propTypes;\\nPlayToggle.displayName = 'PlayToggle';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///724\\n\")},725:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction MouseTimeDisplay(_ref) {\\n  var duration = _ref.duration,\\n      mouseTime = _ref.mouseTime,\\n      className = _ref.className,\\n      text = _ref.text;\\n\\n  if (!mouseTime.time) {\\n    return null;\\n  }\\n\\n  var time = text || (0, _utils.formatTime)(mouseTime.time, duration);\\n\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)('video-react-mouse-display', className),\\n    style: {\\n      left: mouseTime.position + 'px'\\n    },\\n    'data-current-time': time\\n  });\\n}\\n\\nMouseTimeDisplay.propTypes = {\\n  duration: _propTypes2.default.number,\\n  mouseTime: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\nMouseTimeDisplay.displayName = 'MouseTimeDisplay';\\n\\nexports.default = MouseTimeDisplay;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvY29udHJvbC1iYXIvTW91c2VUaW1lRGlzcGxheS5qcz8xYWUxIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX3Byb3BUeXBlcyIsInJlcXVpcmUiLCJfcHJvcFR5cGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2NsYXNzbmFtZXMiLCJfY2xhc3NuYW1lczIiLCJfdXRpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIk1vdXNlVGltZURpc3BsYXkiLCJfcmVmIiwiZHVyYXRpb24iLCJtb3VzZVRpbWUiLCJjbGFzc05hbWUiLCJ0ZXh0IiwidGltZSIsImZvcm1hdFRpbWUiLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJsZWZ0IiwicG9zaXRpb24iLCJwcm9wVHlwZXMiLCJudW1iZXIiLCJvYmplY3QiLCJzdHJpbmciLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLGFBQWEsbUJBQUFDLENBQVEsQ0FBUixDQUFqQjs7QUFFQSxJQUFJQyxjQUFjQyx1QkFBdUJILFVBQXZCLENBQWxCOztBQUVBLElBQUlJLFNBQVMsbUJBQUFILENBQVEsQ0FBUixDQUFiOztBQUVBLElBQUlJLFVBQVVGLHVCQUF1QkMsTUFBdkIsQ0FBZDs7QUFFQSxJQUFJRSxjQUFjLG1CQUFBTCxDQUFRLENBQVIsQ0FBbEI7O0FBRUEsSUFBSU0sZUFBZUosdUJBQXVCRyxXQUF2QixDQUFuQjs7QUFFQSxJQUFJRSxTQUFTLG1CQUFBUCxDQUFRLEdBQVIsQ0FBYjs7QUFFQSxTQUFTRSxzQkFBVCxDQUFnQ00sR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxPQUFPQSxJQUFJQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxTQUFTRixHQUFYLEVBQXJDO0FBQXdEOztBQUUvRixTQUFTRyxnQkFBVCxDQUEwQkMsSUFBMUIsRUFBZ0M7QUFDOUIsTUFBSUMsV0FBV0QsS0FBS0MsUUFBcEI7QUFBQSxNQUNJQyxZQUFZRixLQUFLRSxTQURyQjtBQUFBLE1BRUlDLFlBQVlILEtBQUtHLFNBRnJCO0FBQUEsTUFHSUMsT0FBT0osS0FBS0ksSUFIaEI7O0FBS0EsTUFBSSxDQUFDRixVQUFVRyxJQUFmLEVBQXFCO0FBQ25CLFdBQU8sSUFBUDtBQUNEOztBQUVELE1BQUlBLE9BQU9ELFFBQVEsQ0FBQyxHQUFHVCxPQUFPVyxVQUFYLEVBQXVCSixVQUFVRyxJQUFqQyxFQUF1Q0osUUFBdkMsQ0FBbkI7O0FBRUEsU0FBT1QsUUFBUU0sT0FBUixDQUFnQlMsYUFBaEIsQ0FBOEIsS0FBOUIsRUFBcUM7QUFDMUNKLGVBQVcsQ0FBQyxHQUFHVCxhQUFhSSxPQUFqQixFQUEwQiwyQkFBMUIsRUFBdURLLFNBQXZELENBRCtCO0FBRTFDSyxXQUFPO0FBQ0xDLFlBQU1QLFVBQVVRLFFBQVYsR0FBcUI7QUFEdEIsS0FGbUM7QUFLMUMseUJBQXFCTDtBQUxxQixHQUFyQyxDQUFQO0FBT0Q7O0FBRUROLGlCQUFpQlksU0FBakIsR0FBNkI7QUFDM0JWLFlBQVVaLFlBQVlTLE9BQVosQ0FBb0JjLE1BREg7QUFFM0JWLGFBQVdiLFlBQVlTLE9BQVosQ0FBb0JlLE1BRko7QUFHM0JWLGFBQVdkLFlBQVlTLE9BQVosQ0FBb0JnQjtBQUhKLENBQTdCO0FBS0FmLGlCQUFpQmdCLFdBQWpCLEdBQStCLGtCQUEvQjs7QUFFQTlCLFFBQVFhLE9BQVIsR0FBa0JDLGdCQUFsQiIsImZpbGUiOiI3MjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxudmFyIF9jbGFzc25hbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzbmFtZXMpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gTW91c2VUaW1lRGlzcGxheShfcmVmKSB7XG4gIHZhciBkdXJhdGlvbiA9IF9yZWYuZHVyYXRpb24sXG4gICAgICBtb3VzZVRpbWUgPSBfcmVmLm1vdXNlVGltZSxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgdGV4dCA9IF9yZWYudGV4dDtcblxuICBpZiAoIW1vdXNlVGltZS50aW1lKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgdGltZSA9IHRleHQgfHwgKDAsIF91dGlscy5mb3JtYXRUaW1lKShtb3VzZVRpbWUudGltZSwgZHVyYXRpb24pO1xuXG4gIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgIGNsYXNzTmFtZTogKDAsIF9jbGFzc25hbWVzMi5kZWZhdWx0KSgndmlkZW8tcmVhY3QtbW91c2UtZGlzcGxheScsIGNsYXNzTmFtZSksXG4gICAgc3R5bGU6IHtcbiAgICAgIGxlZnQ6IG1vdXNlVGltZS5wb3NpdGlvbiArICdweCdcbiAgICB9LFxuICAgICdkYXRhLWN1cnJlbnQtdGltZSc6IHRpbWVcbiAgfSk7XG59XG5cbk1vdXNlVGltZURpc3BsYXkucHJvcFR5cGVzID0ge1xuICBkdXJhdGlvbjogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXIsXG4gIG1vdXNlVGltZTogX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsXG4gIGNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcbn07XG5Nb3VzZVRpbWVEaXNwbGF5LmRpc3BsYXlOYW1lID0gJ01vdXNlVGltZURpc3BsYXknO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBNb3VzZVRpbWVEaXNwbGF5OyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///725\\n\")},726:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = LoadProgressBar;\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  duration: _propTypes2.default.number,\\n  buffered: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\n// Shows load progress\\nfunction LoadProgressBar(_ref) {\\n  var buffered = _ref.buffered,\\n      duration = _ref.duration,\\n      className = _ref.className;\\n\\n  if (!buffered || !buffered.length) {\\n    return null;\\n  }\\n  var bufferedEnd = buffered.end(buffered.length - 1);\\n  var style = {};\\n\\n  if (bufferedEnd > duration) {\\n    bufferedEnd = duration;\\n  }\\n\\n  // get the percent width of a time compared to the total end\\n  function percentify(time, end) {\\n    var percent = time / end || 0; // no NaN\\n    return (percent >= 1 ? 1 : percent) * 100 + '%';\\n  }\\n\\n  // the width of the progress bar\\n  style.width = percentify(bufferedEnd, duration);\\n\\n  var parts = [];\\n\\n  // add child elements to represent the individual buffered time ranges\\n  for (var i = 0; i < buffered.length; i++) {\\n    var start = buffered.start(i);\\n    var end = buffered.end(i);\\n    // set the percent based on the width of the progress bar (bufferedEnd)\\n    var part = _react2.default.createElement('div', {\\n      style: {\\n        left: percentify(start, bufferedEnd),\\n        width: percentify(end - start, bufferedEnd)\\n      },\\n      key: 'part-' + i\\n    });\\n    parts.push(part);\\n  }\\n\\n  if (parts.length === 0) {\\n    parts = null;\\n  }\\n\\n  return _react2.default.createElement('div', {\\n    style: style,\\n    className: (0, _classnames2.default)('video-react-load-progress', className)\\n  }, _react2.default.createElement('span', { className: 'video-react-control-text' }, _react2.default.createElement('span', null, 'Loaded'), ': 0%'), parts);\\n}\\n\\nLoadProgressBar.propTypes = propTypes;\\nLoadProgressBar.displayName = 'LoadProgressBar';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvY29udHJvbC1iYXIvTG9hZFByb2dyZXNzQmFyLmpzP2FlYzAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiTG9hZFByb2dyZXNzQmFyIiwiX3Byb3BUeXBlcyIsInJlcXVpcmUiLCJfcHJvcFR5cGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2NsYXNzbmFtZXMiLCJfY2xhc3NuYW1lczIiLCJvYmoiLCJfX2VzTW9kdWxlIiwicHJvcFR5cGVzIiwiZHVyYXRpb24iLCJudW1iZXIiLCJidWZmZXJlZCIsIm9iamVjdCIsImNsYXNzTmFtZSIsInN0cmluZyIsIl9yZWYiLCJsZW5ndGgiLCJidWZmZXJlZEVuZCIsImVuZCIsInN0eWxlIiwicGVyY2VudGlmeSIsInRpbWUiLCJwZXJjZW50Iiwid2lkdGgiLCJwYXJ0cyIsImkiLCJzdGFydCIsInBhcnQiLCJjcmVhdGVFbGVtZW50IiwibGVmdCIsImtleSIsInB1c2giLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDO0FBR0FELFFBQVFFLE9BQVIsR0FBa0JDLGVBQWxCOztBQUVBLElBQUlDLGFBQWEsbUJBQUFDLENBQVEsQ0FBUixDQUFqQjs7QUFFQSxJQUFJQyxjQUFjQyx1QkFBdUJILFVBQXZCLENBQWxCOztBQUVBLElBQUlJLFNBQVMsbUJBQUFILENBQVEsQ0FBUixDQUFiOztBQUVBLElBQUlJLFVBQVVGLHVCQUF1QkMsTUFBdkIsQ0FBZDs7QUFFQSxJQUFJRSxjQUFjLG1CQUFBTCxDQUFRLENBQVIsQ0FBbEI7O0FBRUEsSUFBSU0sZUFBZUosdUJBQXVCRyxXQUF2QixDQUFuQjs7QUFFQSxTQUFTSCxzQkFBVCxDQUFnQ0ssR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxPQUFPQSxJQUFJQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFVixTQUFTVSxHQUFYLEVBQXJDO0FBQXdEOztBQUUvRixJQUFJRSxZQUFZO0FBQ2RDLFlBQVVULFlBQVlKLE9BQVosQ0FBb0JjLE1BRGhCO0FBRWRDLFlBQVVYLFlBQVlKLE9BQVosQ0FBb0JnQixNQUZoQjtBQUdkQyxhQUFXYixZQUFZSixPQUFaLENBQW9Ca0I7QUFIakIsQ0FBaEI7O0FBTUE7QUFDQSxTQUFTakIsZUFBVCxDQUF5QmtCLElBQXpCLEVBQStCO0FBQzdCLE1BQUlKLFdBQVdJLEtBQUtKLFFBQXBCO0FBQUEsTUFDSUYsV0FBV00sS0FBS04sUUFEcEI7QUFBQSxNQUVJSSxZQUFZRSxLQUFLRixTQUZyQjs7QUFJQSxNQUFJLENBQUNGLFFBQUQsSUFBYSxDQUFDQSxTQUFTSyxNQUEzQixFQUFtQztBQUNqQyxXQUFPLElBQVA7QUFDRDtBQUNELE1BQUlDLGNBQWNOLFNBQVNPLEdBQVQsQ0FBYVAsU0FBU0ssTUFBVCxHQUFrQixDQUEvQixDQUFsQjtBQUNBLE1BQUlHLFFBQVEsRUFBWjs7QUFFQSxNQUFJRixjQUFjUixRQUFsQixFQUE0QjtBQUMxQlEsa0JBQWNSLFFBQWQ7QUFDRDs7QUFFRDtBQUNBLFdBQVNXLFVBQVQsQ0FBb0JDLElBQXBCLEVBQTBCSCxHQUExQixFQUErQjtBQUM3QixRQUFJSSxVQUFVRCxPQUFPSCxHQUFQLElBQWMsQ0FBNUIsQ0FENkIsQ0FDRTtBQUMvQixXQUFPLENBQUNJLFdBQVcsQ0FBWCxHQUFlLENBQWYsR0FBbUJBLE9BQXBCLElBQStCLEdBQS9CLEdBQXFDLEdBQTVDO0FBQ0Q7O0FBRUQ7QUFDQUgsUUFBTUksS0FBTixHQUFjSCxXQUFXSCxXQUFYLEVBQXdCUixRQUF4QixDQUFkOztBQUVBLE1BQUllLFFBQVEsRUFBWjs7QUFFQTtBQUNBLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJZCxTQUFTSyxNQUE3QixFQUFxQ1MsR0FBckMsRUFBMEM7QUFDeEMsUUFBSUMsUUFBUWYsU0FBU2UsS0FBVCxDQUFlRCxDQUFmLENBQVo7QUFDQSxRQUFJUCxNQUFNUCxTQUFTTyxHQUFULENBQWFPLENBQWIsQ0FBVjtBQUNBO0FBQ0EsUUFBSUUsT0FBT3hCLFFBQVFQLE9BQVIsQ0FBZ0JnQyxhQUFoQixDQUE4QixLQUE5QixFQUFxQztBQUM5Q1QsYUFBTztBQUNMVSxjQUFNVCxXQUFXTSxLQUFYLEVBQWtCVCxXQUFsQixDQUREO0FBRUxNLGVBQU9ILFdBQVdGLE1BQU1RLEtBQWpCLEVBQXdCVCxXQUF4QjtBQUZGLE9BRHVDO0FBSzlDYSxXQUFLLFVBQVVMO0FBTCtCLEtBQXJDLENBQVg7QUFPQUQsVUFBTU8sSUFBTixDQUFXSixJQUFYO0FBQ0Q7O0FBRUQsTUFBSUgsTUFBTVIsTUFBTixLQUFpQixDQUFyQixFQUF3QjtBQUN0QlEsWUFBUSxJQUFSO0FBQ0Q7O0FBRUQsU0FBT3JCLFFBQVFQLE9BQVIsQ0FBZ0JnQyxhQUFoQixDQUNMLEtBREssRUFFTDtBQUNFVCxXQUFPQSxLQURUO0FBRUVOLGVBQVcsQ0FBQyxHQUFHUixhQUFhVCxPQUFqQixFQUEwQiwyQkFBMUIsRUFBdURpQixTQUF2RDtBQUZiLEdBRkssRUFNTFYsUUFBUVAsT0FBUixDQUFnQmdDLGFBQWhCLENBQ0UsTUFERixFQUVFLEVBQUVmLFdBQVcsMEJBQWIsRUFGRixFQUdFVixRQUFRUCxPQUFSLENBQWdCZ0MsYUFBaEIsQ0FDRSxNQURGLEVBRUUsSUFGRixFQUdFLFFBSEYsQ0FIRixFQVFFLE1BUkYsQ0FOSyxFQWdCTEosS0FoQkssQ0FBUDtBQWtCRDs7QUFFRDNCLGdCQUFnQlcsU0FBaEIsR0FBNEJBLFNBQTVCO0FBQ0FYLGdCQUFnQm1DLFdBQWhCLEdBQThCLGlCQUE5QiIsImZpbGUiOiI3MjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBMb2FkUHJvZ3Jlc3NCYXI7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxudmFyIF9jbGFzc25hbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzbmFtZXMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICBkdXJhdGlvbjogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXIsXG4gIGJ1ZmZlcmVkOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgY2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufTtcblxuLy8gU2hvd3MgbG9hZCBwcm9ncmVzc1xuZnVuY3Rpb24gTG9hZFByb2dyZXNzQmFyKF9yZWYpIHtcbiAgdmFyIGJ1ZmZlcmVkID0gX3JlZi5idWZmZXJlZCxcbiAgICAgIGR1cmF0aW9uID0gX3JlZi5kdXJhdGlvbixcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lO1xuXG4gIGlmICghYnVmZmVyZWQgfHwgIWJ1ZmZlcmVkLmxlbmd0aCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciBidWZmZXJlZEVuZCA9IGJ1ZmZlcmVkLmVuZChidWZmZXJlZC5sZW5ndGggLSAxKTtcbiAgdmFyIHN0eWxlID0ge307XG5cbiAgaWYgKGJ1ZmZlcmVkRW5kID4gZHVyYXRpb24pIHtcbiAgICBidWZmZXJlZEVuZCA9IGR1cmF0aW9uO1xuICB9XG5cbiAgLy8gZ2V0IHRoZSBwZXJjZW50IHdpZHRoIG9mIGEgdGltZSBjb21wYXJlZCB0byB0aGUgdG90YWwgZW5kXG4gIGZ1bmN0aW9uIHBlcmNlbnRpZnkodGltZSwgZW5kKSB7XG4gICAgdmFyIHBlcmNlbnQgPSB0aW1lIC8gZW5kIHx8IDA7IC8vIG5vIE5hTlxuICAgIHJldHVybiAocGVyY2VudCA+PSAxID8gMSA6IHBlcmNlbnQpICogMTAwICsgJyUnO1xuICB9XG5cbiAgLy8gdGhlIHdpZHRoIG9mIHRoZSBwcm9ncmVzcyBiYXJcbiAgc3R5bGUud2lkdGggPSBwZXJjZW50aWZ5KGJ1ZmZlcmVkRW5kLCBkdXJhdGlvbik7XG5cbiAgdmFyIHBhcnRzID0gW107XG5cbiAgLy8gYWRkIGNoaWxkIGVsZW1lbnRzIHRvIHJlcHJlc2VudCB0aGUgaW5kaXZpZHVhbCBidWZmZXJlZCB0aW1lIHJhbmdlc1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ1ZmZlcmVkLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHN0YXJ0ID0gYnVmZmVyZWQuc3RhcnQoaSk7XG4gICAgdmFyIGVuZCA9IGJ1ZmZlcmVkLmVuZChpKTtcbiAgICAvLyBzZXQgdGhlIHBlcmNlbnQgYmFzZWQgb24gdGhlIHdpZHRoIG9mIHRoZSBwcm9ncmVzcyBiYXIgKGJ1ZmZlcmVkRW5kKVxuICAgIHZhciBwYXJ0ID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIGxlZnQ6IHBlcmNlbnRpZnkoc3RhcnQsIGJ1ZmZlcmVkRW5kKSxcbiAgICAgICAgd2lkdGg6IHBlcmNlbnRpZnkoZW5kIC0gc3RhcnQsIGJ1ZmZlcmVkRW5kKVxuICAgICAgfSxcbiAgICAgIGtleTogJ3BhcnQtJyArIGlcbiAgICB9KTtcbiAgICBwYXJ0cy5wdXNoKHBhcnQpO1xuICB9XG5cbiAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMCkge1xuICAgIHBhcnRzID0gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICB7XG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICBjbGFzc05hbWU6ICgwLCBfY2xhc3NuYW1lczIuZGVmYXVsdCkoJ3ZpZGVvLXJlYWN0LWxvYWQtcHJvZ3Jlc3MnLCBjbGFzc05hbWUpXG4gICAgfSxcbiAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICdzcGFuJyxcbiAgICAgIHsgY2xhc3NOYW1lOiAndmlkZW8tcmVhY3QtY29udHJvbC10ZXh0JyB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdzcGFuJyxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgJ0xvYWRlZCdcbiAgICAgICksXG4gICAgICAnOiAwJSdcbiAgICApLFxuICAgIHBhcnRzXG4gICk7XG59XG5cbkxvYWRQcm9ncmVzc0Jhci5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Mb2FkUHJvZ3Jlc3NCYXIuZGlzcGxheU5hbWUgPSAnTG9hZFByb2dyZXNzQmFyJzsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///726\\n\")},727:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = PlayProgressBar;\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  currentTime: _propTypes2.default.number,\\n  duration: _propTypes2.default.number,\\n  percentage: _propTypes2.default.string,\\n  className: _propTypes2.default.string\\n};\\n\\n// Shows play progress\\nfunction PlayProgressBar(_ref) {\\n  var currentTime = _ref.currentTime,\\n      duration = _ref.duration,\\n      percentage = _ref.percentage,\\n      className = _ref.className;\\n\\n  return _react2.default.createElement('div', {\\n    'data-current-time': (0, _utils.formatTime)(currentTime, duration),\\n    className: (0, _classnames2.default)('video-react-play-progress video-react-slider-bar', className),\\n    style: {\\n      width: percentage\\n    }\\n  }, _react2.default.createElement('span', { className: 'video-react-control-text' }, _react2.default.createElement('span', null, 'Progress'), ': ', percentage));\\n}\\n\\nPlayProgressBar.propTypes = propTypes;\\nPlayProgressBar.displayName = 'PlayProgressBar';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvY29udHJvbC1iYXIvUGxheVByb2dyZXNzQmFyLmpzP2FiZWIiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiUGxheVByb2dyZXNzQmFyIiwiX3Byb3BUeXBlcyIsInJlcXVpcmUiLCJfcHJvcFR5cGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2NsYXNzbmFtZXMiLCJfY2xhc3NuYW1lczIiLCJfdXRpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwicHJvcFR5cGVzIiwiY3VycmVudFRpbWUiLCJudW1iZXIiLCJkdXJhdGlvbiIsInBlcmNlbnRhZ2UiLCJzdHJpbmciLCJjbGFzc05hbWUiLCJfcmVmIiwiY3JlYXRlRWxlbWVudCIsImZvcm1hdFRpbWUiLCJzdHlsZSIsIndpZHRoIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3QztBQUdBRCxRQUFRRSxPQUFSLEdBQWtCQyxlQUFsQjs7QUFFQSxJQUFJQyxhQUFhLG1CQUFBQyxDQUFRLENBQVIsQ0FBakI7O0FBRUEsSUFBSUMsY0FBY0MsdUJBQXVCSCxVQUF2QixDQUFsQjs7QUFFQSxJQUFJSSxTQUFTLG1CQUFBSCxDQUFRLENBQVIsQ0FBYjs7QUFFQSxJQUFJSSxVQUFVRix1QkFBdUJDLE1BQXZCLENBQWQ7O0FBRUEsSUFBSUUsY0FBYyxtQkFBQUwsQ0FBUSxDQUFSLENBQWxCOztBQUVBLElBQUlNLGVBQWVKLHVCQUF1QkcsV0FBdkIsQ0FBbkI7O0FBRUEsSUFBSUUsU0FBUyxtQkFBQVAsQ0FBUSxHQUFSLENBQWI7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NNLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsT0FBT0EsSUFBSUMsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRVgsU0FBU1csR0FBWCxFQUFyQztBQUF3RDs7QUFFL0YsSUFBSUUsWUFBWTtBQUNkQyxlQUFhVixZQUFZSixPQUFaLENBQW9CZSxNQURuQjtBQUVkQyxZQUFVWixZQUFZSixPQUFaLENBQW9CZSxNQUZoQjtBQUdkRSxjQUFZYixZQUFZSixPQUFaLENBQW9Ca0IsTUFIbEI7QUFJZEMsYUFBV2YsWUFBWUosT0FBWixDQUFvQmtCO0FBSmpCLENBQWhCOztBQU9BO0FBQ0EsU0FBU2pCLGVBQVQsQ0FBeUJtQixJQUF6QixFQUErQjtBQUM3QixNQUFJTixjQUFjTSxLQUFLTixXQUF2QjtBQUFBLE1BQ0lFLFdBQVdJLEtBQUtKLFFBRHBCO0FBQUEsTUFFSUMsYUFBYUcsS0FBS0gsVUFGdEI7QUFBQSxNQUdJRSxZQUFZQyxLQUFLRCxTQUhyQjs7QUFLQSxTQUFPWixRQUFRUCxPQUFSLENBQWdCcUIsYUFBaEIsQ0FDTCxLQURLLEVBRUw7QUFDRSx5QkFBcUIsQ0FBQyxHQUFHWCxPQUFPWSxVQUFYLEVBQXVCUixXQUF2QixFQUFvQ0UsUUFBcEMsQ0FEdkI7QUFFRUcsZUFBVyxDQUFDLEdBQUdWLGFBQWFULE9BQWpCLEVBQTBCLGtEQUExQixFQUE4RW1CLFNBQTlFLENBRmI7QUFHRUksV0FBTztBQUNMQyxhQUFPUDtBQURGO0FBSFQsR0FGSyxFQVNMVixRQUFRUCxPQUFSLENBQWdCcUIsYUFBaEIsQ0FDRSxNQURGLEVBRUUsRUFBRUYsV0FBVywwQkFBYixFQUZGLEVBR0VaLFFBQVFQLE9BQVIsQ0FBZ0JxQixhQUFoQixDQUNFLE1BREYsRUFFRSxJQUZGLEVBR0UsVUFIRixDQUhGLEVBUUUsSUFSRixFQVNFSixVQVRGLENBVEssQ0FBUDtBQXFCRDs7QUFFRGhCLGdCQUFnQlksU0FBaEIsR0FBNEJBLFNBQTVCO0FBQ0FaLGdCQUFnQndCLFdBQWhCLEdBQThCLGlCQUE5QiIsImZpbGUiOiI3MjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBQbGF5UHJvZ3Jlc3NCYXI7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxudmFyIF9jbGFzc25hbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzbmFtZXMpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByb3BUeXBlcyA9IHtcbiAgY3VycmVudFRpbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICBkdXJhdGlvbjogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXIsXG4gIHBlcmNlbnRhZ2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59O1xuXG4vLyBTaG93cyBwbGF5IHByb2dyZXNzXG5mdW5jdGlvbiBQbGF5UHJvZ3Jlc3NCYXIoX3JlZikge1xuICB2YXIgY3VycmVudFRpbWUgPSBfcmVmLmN1cnJlbnRUaW1lLFxuICAgICAgZHVyYXRpb24gPSBfcmVmLmR1cmF0aW9uLFxuICAgICAgcGVyY2VudGFnZSA9IF9yZWYucGVyY2VudGFnZSxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lO1xuXG4gIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICB7XG4gICAgICAnZGF0YS1jdXJyZW50LXRpbWUnOiAoMCwgX3V0aWxzLmZvcm1hdFRpbWUpKGN1cnJlbnRUaW1lLCBkdXJhdGlvbiksXG4gICAgICBjbGFzc05hbWU6ICgwLCBfY2xhc3NuYW1lczIuZGVmYXVsdCkoJ3ZpZGVvLXJlYWN0LXBsYXktcHJvZ3Jlc3MgdmlkZW8tcmVhY3Qtc2xpZGVyLWJhcicsIGNsYXNzTmFtZSksXG4gICAgICBzdHlsZToge1xuICAgICAgICB3aWR0aDogcGVyY2VudGFnZVxuICAgICAgfVxuICAgIH0sXG4gICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAnc3BhbicsXG4gICAgICB7IGNsYXNzTmFtZTogJ3ZpZGVvLXJlYWN0LWNvbnRyb2wtdGV4dCcgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnc3BhbicsXG4gICAgICAgIG51bGwsXG4gICAgICAgICdQcm9ncmVzcydcbiAgICAgICksXG4gICAgICAnOiAnLFxuICAgICAgcGVyY2VudGFnZVxuICAgIClcbiAgKTtcbn1cblxuUGxheVByb2dyZXNzQmFyLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblBsYXlQcm9ncmVzc0Jhci5kaXNwbGF5TmFtZSA9ICdQbGF5UHJvZ3Jlc3NCYXInOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///727\\n\")},728:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _Slider = __webpack_require__(711);\\n\\nvar _Slider2 = _interopRequireDefault(_Slider);\\n\\nvar _PlayProgressBar = __webpack_require__(727);\\n\\nvar _PlayProgressBar2 = _interopRequireDefault(_PlayProgressBar);\\n\\nvar _LoadProgressBar = __webpack_require__(726);\\n\\nvar _LoadProgressBar2 = _interopRequireDefault(_LoadProgressBar);\\n\\nvar _MouseTimeDisplay = __webpack_require__(725);\\n\\nvar _MouseTimeDisplay2 = _interopRequireDefault(_MouseTimeDisplay);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  mouseTime: _propTypes2.default.object,\\n  actions: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nvar SeekBar = function (_Component) {\\n  _inherits(SeekBar, _Component);\\n\\n  function SeekBar(props, context) {\\n    _classCallCheck(this, SeekBar);\\n\\n    var _this = _possibleConstructorReturn(this, (SeekBar.__proto__ || Object.getPrototypeOf(SeekBar)).call(this, props, context));\\n\\n    _this.getPercent = _this.getPercent.bind(_this);\\n    _this.getNewTime = _this.getNewTime.bind(_this);\\n    _this.stepForward = _this.stepForward.bind(_this);\\n    _this.stepBack = _this.stepBack.bind(_this);\\n\\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(SeekBar, [{\\n    key: \\'componentDidMount\\',\\n    value: function componentDidMount() {}\\n  }, {\\n    key: \\'componentDidUpdate\\',\\n    value: function componentDidUpdate() {}\\n\\n    /**\\n     * Get percentage of video played\\n     *\\n     * @return {Number} Percentage played\\n     * @method getPercent\\n     */\\n\\n  }, {\\n    key: \\'getPercent\\',\\n    value: function getPercent() {\\n      var _props$player = this.props.player,\\n          currentTime = _props$player.currentTime,\\n          seekingTime = _props$player.seekingTime,\\n          duration = _props$player.duration;\\n\\n      var time = seekingTime || currentTime;\\n      var percent = time / duration;\\n      return percent >= 1 ? 1 : percent;\\n    }\\n  }, {\\n    key: \\'getNewTime\\',\\n    value: function getNewTime(event) {\\n      var duration = this.props.player.duration;\\n\\n      var distance = this.slider.calculateDistance(event);\\n      var newTime = distance * duration;\\n\\n      // Don\\'t let video end while scrubbing.\\n      return newTime === duration ? newTime - 0.1 : newTime;\\n    }\\n  }, {\\n    key: \\'handleMouseDown\\',\\n    value: function handleMouseDown() {}\\n  }, {\\n    key: \\'handleMouseUp\\',\\n    value: function handleMouseUp(event) {\\n      var actions = this.props.actions;\\n\\n      var newTime = this.getNewTime(event);\\n      // Set new time (tell video to seek to new time)\\n      actions.seek(newTime);\\n      actions.handleEndSeeking(newTime);\\n    }\\n  }, {\\n    key: \\'handleMouseMove\\',\\n    value: function handleMouseMove(event) {\\n      var actions = this.props.actions;\\n\\n      var newTime = this.getNewTime(event);\\n      actions.handleSeekingTime(newTime);\\n    }\\n  }, {\\n    key: \\'stepForward\\',\\n    value: function stepForward() {\\n      var actions = this.props.actions;\\n\\n      actions.forward(5);\\n    }\\n  }, {\\n    key: \\'stepBack\\',\\n    value: function stepBack() {\\n      var actions = this.props.actions;\\n\\n      actions.replay(5);\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _props = this.props,\\n          _props$player2 = _props.player,\\n          currentTime = _props$player2.currentTime,\\n          seekingTime = _props$player2.seekingTime,\\n          duration = _props$player2.duration,\\n          buffered = _props$player2.buffered,\\n          mouseTime = _props.mouseTime;\\n\\n      var time = seekingTime || currentTime;\\n\\n      return _react2.default.createElement(_Slider2.default, {\\n        ref: function ref(input) {\\n          _this2.slider = input;\\n        },\\n        label: \\'video progress bar\\',\\n        className: (0, _classnames2.default)(\\'video-react-progress-holder\\', this.props.className),\\n        valuenow: (this.getPercent() * 100).toFixed(2),\\n        valuetext: (0, _utils.formatTime)(time, duration),\\n        onMouseDown: this.handleMouseDown,\\n        onMouseMove: this.handleMouseMove,\\n        onMouseUp: this.handleMouseUp,\\n        getPercent: this.getPercent,\\n        stepForward: this.stepForward,\\n        stepBack: this.stepBack\\n      }, _react2.default.createElement(_LoadProgressBar2.default, {\\n        buffered: buffered,\\n        currentTime: time,\\n        duration: duration\\n      }), _react2.default.createElement(_MouseTimeDisplay2.default, {\\n        duration: duration,\\n        mouseTime: mouseTime\\n      }), _react2.default.createElement(_PlayProgressBar2.default, {\\n        currentTime: time,\\n        duration: duration\\n      }));\\n    }\\n  }]);\\n\\n  return SeekBar;\\n}(_react.Component);\\n\\nexports.default = SeekBar;\\n\\nSeekBar.propTypes = propTypes;\\nSeekBar.displayName = \\'SeekBar\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///728\\n')},729:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _reactDom = __webpack_require__(24);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _dom = __webpack_require__(712);\\n\\nvar Dom = _interopRequireWildcard(_dom);\\n\\nvar _SeekBar = __webpack_require__(728);\\n\\nvar _SeekBar2 = _interopRequireDefault(_SeekBar);\\n\\nfunction _interopRequireWildcard(obj) {\\n  if (obj && obj.__esModule) {\\n    return obj;\\n  } else {\\n    var newObj = {};if (obj != null) {\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\\n      }\\n    }newObj.default = obj;return newObj;\\n  }\\n}\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nvar ProgressControl = function (_Component) {\\n  _inherits(ProgressControl, _Component);\\n\\n  function ProgressControl(props, context) {\\n    _classCallCheck(this, ProgressControl);\\n\\n    var _this = _possibleConstructorReturn(this, (ProgressControl.__proto__ || Object.getPrototypeOf(ProgressControl)).call(this, props, context));\\n\\n    _this.state = {\\n      mouseTime: {\\n        time: null,\\n        position: 0\\n      }\\n    };\\n\\n    _this.handleMouseMoveThrottle = _this.handleMouseMove.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(ProgressControl, [{\\n    key: \\'handleMouseMove\\',\\n    value: function handleMouseMove(event) {\\n      if (!event.pageX) {\\n        return;\\n      }\\n      var duration = this.props.player.duration;\\n\\n      var node = (0, _reactDom.findDOMNode)(this.seekBar);\\n      var newTime = Dom.getPointerPosition(node, event).x * duration;\\n      var position = event.pageX - Dom.findElPosition(node).left;\\n\\n      this.setState({\\n        mouseTime: {\\n          time: newTime,\\n          position: position\\n        }\\n      });\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var className = this.props.className;\\n\\n      return _react2.default.createElement(\\'div\\', {\\n        onMouseMove: this.handleMouseMoveThrottle,\\n        className: (0, _classnames2.default)(\\'video-react-progress-control video-react-control\\', className)\\n      }, _react2.default.createElement(_SeekBar2.default, _extends({\\n        mouseTime: this.state.mouseTime,\\n        ref: function ref(c) {\\n          _this2.seekBar = c;\\n        }\\n      }, this.props)));\\n    }\\n  }]);\\n\\n  return ProgressControl;\\n}(_react.Component);\\n\\nexports.default = ProgressControl;\\n\\nProgressControl.propTypes = propTypes;\\nProgressControl.displayName = \\'ProgressControl\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///729\\n')},730:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _ProgressControl = __webpack_require__(729);\\n\\nvar _ProgressControl2 = _interopRequireDefault(_ProgressControl);\\n\\nvar _PlayToggle = __webpack_require__(724);\\n\\nvar _PlayToggle2 = _interopRequireDefault(_PlayToggle);\\n\\nvar _ForwardControl = __webpack_require__(723);\\n\\nvar _ForwardControl2 = _interopRequireDefault(_ForwardControl);\\n\\nvar _ReplayControl = __webpack_require__(721);\\n\\nvar _ReplayControl2 = _interopRequireDefault(_ReplayControl);\\n\\nvar _FullscreenToggle = __webpack_require__(720);\\n\\nvar _FullscreenToggle2 = _interopRequireDefault(_FullscreenToggle);\\n\\nvar _RemainingTimeDisplay = __webpack_require__(719);\\n\\nvar _RemainingTimeDisplay2 = _interopRequireDefault(_RemainingTimeDisplay);\\n\\nvar _CurrentTimeDisplay = __webpack_require__(718);\\n\\nvar _CurrentTimeDisplay2 = _interopRequireDefault(_CurrentTimeDisplay);\\n\\nvar _DurationDisplay = __webpack_require__(717);\\n\\nvar _DurationDisplay2 = _interopRequireDefault(_DurationDisplay);\\n\\nvar _TimeDivider = __webpack_require__(716);\\n\\nvar _TimeDivider2 = _interopRequireDefault(_TimeDivider);\\n\\nvar _VolumeMenuButton = __webpack_require__(715);\\n\\nvar _VolumeMenuButton2 = _interopRequireDefault(_VolumeMenuButton);\\n\\nvar _PlaybackRateMenuButton = __webpack_require__(710);\\n\\nvar _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  children: _propTypes2.default.any,\\n  autoHide: _propTypes2.default.bool,\\n  disableDefaultControls: _propTypes2.default.bool,\\n  disableCompletely: _propTypes2.default.bool,\\n  className: _propTypes2.default.string\\n};\\n\\nvar defaultProps = {\\n  autoHide: true,\\n  disableCompletely: false\\n};\\n\\nvar ControlBar = function (_Component) {\\n  _inherits(ControlBar, _Component);\\n\\n  function ControlBar(props) {\\n    _classCallCheck(this, ControlBar);\\n\\n    var _this = _possibleConstructorReturn(this, (ControlBar.__proto__ || Object.getPrototypeOf(ControlBar)).call(this, props));\\n\\n    _this.getDefaultChildren = _this.getDefaultChildren.bind(_this);\\n    _this.getFullChildren = _this.getFullChildren.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(ControlBar, [{\\n    key: 'getDefaultChildren',\\n    value: function getDefaultChildren() {\\n      return [_react2.default.createElement(_PlayToggle2.default, _extends({}, this.props, {\\n        key: 'play-toggle',\\n        order: 1\\n      })), _react2.default.createElement(_VolumeMenuButton2.default, _extends({}, this.props, {\\n        key: 'volume-menu-button',\\n        order: 4\\n      })), _react2.default.createElement(_CurrentTimeDisplay2.default, _extends({}, this.props, {\\n        key: 'current-time-display',\\n        order: 5.1\\n      })), _react2.default.createElement(_TimeDivider2.default, _extends({}, this.props, {\\n        key: 'time-divider',\\n        order: 5.2\\n      })), _react2.default.createElement(_DurationDisplay2.default, _extends({}, this.props, {\\n        key: 'duration-display',\\n        order: 5.3\\n      })), _react2.default.createElement(_ProgressControl2.default, _extends({}, this.props, {\\n        key: 'progress-control',\\n        order: 6\\n      })), _react2.default.createElement(_FullscreenToggle2.default, _extends({}, this.props, {\\n        key: 'fullscreen-toggle',\\n        order: 8\\n      }))];\\n    }\\n  }, {\\n    key: 'getFullChildren',\\n    value: function getFullChildren() {\\n      return [_react2.default.createElement(_PlayToggle2.default, _extends({}, this.props, {\\n        key: 'play-toggle',\\n        order: 1\\n      })), _react2.default.createElement(_ReplayControl2.default, _extends({}, this.props, {\\n        key: 'replay-control',\\n        order: 2\\n      })), _react2.default.createElement(_ForwardControl2.default, _extends({}, this.props, {\\n        key: 'forward-control',\\n        order: 3\\n      })), _react2.default.createElement(_VolumeMenuButton2.default, _extends({}, this.props, {\\n        key: 'volume-menu-button',\\n        order: 4\\n      })), _react2.default.createElement(_CurrentTimeDisplay2.default, _extends({}, this.props, {\\n        key: 'current-time-display',\\n        order: 5\\n      })), _react2.default.createElement(_TimeDivider2.default, _extends({}, this.props, {\\n        key: 'time-divider',\\n        order: 6\\n      })), _react2.default.createElement(_DurationDisplay2.default, _extends({}, this.props, {\\n        key: 'duration-display',\\n        order: 7\\n      })), _react2.default.createElement(_ProgressControl2.default, _extends({}, this.props, {\\n        key: 'progress-control',\\n        order: 8\\n      })), _react2.default.createElement(_RemainingTimeDisplay2.default, _extends({}, this.props, {\\n        key: 'remaining-time-display',\\n        order: 9\\n      })), _react2.default.createElement(_PlaybackRateMenuButton2.default, _extends({}, this.props, {\\n        rates: [1, 1.25, 1.5, 2],\\n        key: 'playback-rate',\\n        order: 10\\n      })), _react2.default.createElement(_FullscreenToggle2.default, _extends({}, this.props, {\\n        key: 'fullscreen-toggle',\\n        order: 11\\n      }))];\\n    }\\n  }, {\\n    key: 'getChildren',\\n    value: function getChildren() {\\n      var children = _react2.default.Children.toArray(this.props.children);\\n      var defaultChildren = this.props.disableDefaultControls ? [] : this.getDefaultChildren();\\n      return (0, _utils.mergeAndSortChildren)(defaultChildren, children, this.props);\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _props = this.props,\\n          autoHide = _props.autoHide,\\n          className = _props.className,\\n          disableCompletely = _props.disableCompletely;\\n\\n      var children = this.getChildren();\\n\\n      return disableCompletely ? null : _react2.default.createElement('div', {\\n        className: (0, _classnames2.default)('video-react-control-bar', {\\n          'video-react-control-bar-auto-hide': autoHide\\n        }, className)\\n      }, children);\\n    }\\n  }]);\\n\\n  return ControlBar;\\n}(_react.Component);\\n\\nexports.default = ControlBar;\\n\\nControlBar.propTypes = propTypes;\\nControlBar.defaultProps = defaultProps;\\nControlBar.displayName = 'ControlBar';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvY29udHJvbC1iYXIvQ29udHJvbEJhci5qcz8xNWM4Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInByb3BzIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX3Byb3BUeXBlcyIsInJlcXVpcmUiLCJfcHJvcFR5cGVzMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2NsYXNzbmFtZXMiLCJfY2xhc3NuYW1lczIiLCJfUHJvZ3Jlc3NDb250cm9sIiwiX1Byb2dyZXNzQ29udHJvbDIiLCJfUGxheVRvZ2dsZSIsIl9QbGF5VG9nZ2xlMiIsIl9Gb3J3YXJkQ29udHJvbCIsIl9Gb3J3YXJkQ29udHJvbDIiLCJfUmVwbGF5Q29udHJvbCIsIl9SZXBsYXlDb250cm9sMiIsIl9GdWxsc2NyZWVuVG9nZ2xlIiwiX0Z1bGxzY3JlZW5Ub2dnbGUyIiwiX1JlbWFpbmluZ1RpbWVEaXNwbGF5IiwiX1JlbWFpbmluZ1RpbWVEaXNwbGF5MiIsIl9DdXJyZW50VGltZURpc3BsYXkiLCJfQ3VycmVudFRpbWVEaXNwbGF5MiIsIl9EdXJhdGlvbkRpc3BsYXkiLCJfRHVyYXRpb25EaXNwbGF5MiIsIl9UaW1lRGl2aWRlciIsIl9UaW1lRGl2aWRlcjIiLCJfVm9sdW1lTWVudUJ1dHRvbiIsIl9Wb2x1bWVNZW51QnV0dG9uMiIsIl9QbGF5YmFja1JhdGVNZW51QnV0dG9uIiwiX1BsYXliYWNrUmF0ZU1lbnVCdXR0b24yIiwiX3V0aWxzIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIlR5cGVFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsInByb3BUeXBlcyIsImNoaWxkcmVuIiwiYW55IiwiYXV0b0hpZGUiLCJib29sIiwiZGlzYWJsZURlZmF1bHRDb250cm9scyIsImRpc2FibGVDb21wbGV0ZWx5IiwiY2xhc3NOYW1lIiwic3RyaW5nIiwiZGVmYXVsdFByb3BzIiwiQ29udHJvbEJhciIsIl9Db21wb25lbnQiLCJfdGhpcyIsImdldFByb3RvdHlwZU9mIiwiZ2V0RGVmYXVsdENoaWxkcmVuIiwiYmluZCIsImdldEZ1bGxDaGlsZHJlbiIsImNyZWF0ZUVsZW1lbnQiLCJvcmRlciIsInJhdGVzIiwiZ2V0Q2hpbGRyZW4iLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJkZWZhdWx0Q2hpbGRyZW4iLCJtZXJnZUFuZFNvcnRDaGlsZHJlbiIsInJlbmRlciIsIl9wcm9wcyIsIkNvbXBvbmVudCIsImRpc3BsYXlOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3Qzs7QUFJQSxJQUFJQyxXQUFXSixPQUFPSyxNQUFQLElBQWlCLFVBQVVDLE1BQVYsRUFBa0I7QUFBRSxPQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUMsVUFBVUMsTUFBOUIsRUFBc0NGLEdBQXRDLEVBQTJDO0FBQUUsUUFBSUcsU0FBU0YsVUFBVUQsQ0FBVixDQUFiLENB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LFdBQVcsS0FBS21CLFdBQUwsRUFBZjs7QUFFQSxhQUFPZCxvQkFBb0IsSUFBcEIsR0FBMkJoRCxRQUFRNEIsT0FBUixDQUFnQitCLGFBQWhCLENBQ2hDLEtBRGdDLEVBRWhDO0FBQ0VWLG1CQUFXLENBQUMsR0FBRy9DLGFBQWEwQixPQUFqQixFQUEwQix5QkFBMUIsRUFBcUQ7QUFDOUQsK0NBQXFDaUI7QUFEeUIsU0FBckQsRUFFUkksU0FGUTtBQURiLE9BRmdDLEVBT2hDTixRQVBnQyxDQUFsQztBQVNEO0FBbkJBLEdBeEVzQixDQUF6Qjs7QUE4RkEsU0FBT1MsVUFBUDtBQUNELENBNUdnQixDQTRHZnJELE9BQU9zRSxTQTVHUSxDQUFqQjs7QUE4R0FqRyxRQUFRd0QsT0FBUixHQUFrQndCLFVBQWxCOztBQUdBQSxXQUFXVixTQUFYLEdBQXVCQSxTQUF2QjtBQUNBVSxXQUFXRCxZQUFYLEdBQTBCQSxZQUExQjtBQUNBQyxXQUFXa0IsV0FBWCxHQUF5QixZQUF6QiIsImZpbGUiOiI3MzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxudmFyIF9jbGFzc25hbWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzbmFtZXMpO1xuXG52YXIgX1Byb2dyZXNzQ29udHJvbCA9IHJlcXVpcmUoJy4vUHJvZ3Jlc3NDb250cm9sJyk7XG5cbnZhciBfUHJvZ3Jlc3NDb250cm9sMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Byb2dyZXNzQ29udHJvbCk7XG5cbnZhciBfUGxheVRvZ2dsZSA9IHJlcXVpcmUoJy4vUGxheVRvZ2dsZScpO1xuXG52YXIgX1BsYXlUb2dnbGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUGxheVRvZ2dsZSk7XG5cbnZhciBfRm9yd2FyZENvbnRyb2wgPSByZXF1aXJlKCcuL0ZvcndhcmRDb250cm9sJyk7XG5cbnZhciBfRm9yd2FyZENvbnRyb2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRm9yd2FyZENvbnRyb2wpO1xuXG52YXIgX1JlcGxheUNvbnRyb2wgPSByZXF1aXJlKCcuL1JlcGxheUNvbnRyb2wnKTtcblxudmFyIF9SZXBsYXlDb250cm9sMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1JlcGxheUNvbnRyb2wpO1xuXG52YXIgX0Z1bGxzY3JlZW5Ub2dnbGUgPSByZXF1aXJlKCcuL0Z1bGxzY3JlZW5Ub2dnbGUnKTtcblxudmFyIF9GdWxsc2NyZWVuVG9nZ2xlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0Z1bGxzY3JlZW5Ub2dnbGUpO1xuXG52YXIgX1JlbWFpbmluZ1RpbWVEaXNwbGF5ID0gcmVxdWlyZSgnLi4vdGltZS1jb250cm9scy9SZW1haW5pbmdUaW1lRGlzcGxheScpO1xuXG52YXIgX1JlbWFpbmluZ1RpbWVEaXNwbGF5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1JlbWFpbmluZ1RpbWVEaXNwbGF5KTtcblxudmFyIF9DdXJyZW50VGltZURpc3BsYXkgPSByZXF1aXJlKCcuLi90aW1lLWNvbnRyb2xzL0N1cnJlbnRUaW1lRGlzcGxheScpO1xuXG52YXIgX0N1cnJlbnRUaW1lRGlzcGxheTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DdXJyZW50VGltZURpc3BsYXkpO1xuXG52YXIgX0R1cmF0aW9uRGlzcGxheSA9IHJlcXVpcmUoJy4uL3RpbWUtY29udHJvbHMvRHVyYXRpb25EaXNwbGF5Jyk7XG5cbnZhciBfRHVyYXRpb25EaXNwbGF5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0R1cmF0aW9uRGlzcGxheSk7XG5cbnZhciBfVGltZURpdmlkZXIgPSByZXF1aXJlKCcuLi90aW1lLWNvbnRyb2xzL1RpbWVEaXZpZGVyJyk7XG5cbnZhciBfVGltZURpdmlkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVGltZURpdmlkZXIpO1xuXG52YXIgX1ZvbHVtZU1lbnVCdXR0b24gPSByZXF1aXJlKCcuL1ZvbHVtZU1lbnVCdXR0b24nKTtcblxudmFyIF9Wb2x1bWVNZW51QnV0dG9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1ZvbHVtZU1lbnVCdXR0b24pO1xuXG52YXIgX1BsYXliYWNrUmF0ZU1lbnVCdXR0b24gPSByZXF1aXJlKCcuL1BsYXliYWNrUmF0ZU1lbnVCdXR0b24nKTtcblxudmFyIF9QbGF5YmFja1JhdGVNZW51QnV0dG9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1BsYXliYWNrUmF0ZU1lbnVCdXR0b24pO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5hbnksXG4gIGF1dG9IaWRlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIGRpc2FibGVEZWZhdWx0Q29udHJvbHM6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgZGlzYWJsZUNvbXBsZXRlbHk6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgY2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufTtcblxudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgYXV0b0hpZGU6IHRydWUsXG4gIGRpc2FibGVDb21wbGV0ZWx5OiBmYWxzZVxufTtcblxudmFyIENvbnRyb2xCYXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ29udHJvbEJhciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQ29udHJvbEJhcihwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb250cm9sQmFyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDb250cm9sQmFyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ29udHJvbEJhcikpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgIF90aGlzLmdldERlZmF1bHRDaGlsZHJlbiA9IF90aGlzLmdldERlZmF1bHRDaGlsZHJlbi5iaW5kKF90aGlzKTtcbiAgICBfdGhpcy5nZXRGdWxsQ2hpbGRyZW4gPSBfdGhpcy5nZXRGdWxsQ2hpbGRyZW4uYmluZChfdGhpcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENvbnRyb2xCYXIsIFt7XG4gICAga2V5OiAnZ2V0RGVmYXVsdENoaWxkcmVuJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RGVmYXVsdENoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfUGxheVRvZ2dsZTIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAncGxheS10b2dnbGUnLFxuICAgICAgICBvcmRlcjogMVxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfVm9sdW1lTWVudUJ1dHRvbjIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAndm9sdW1lLW1lbnUtYnV0dG9uJyxcbiAgICAgICAgb3JkZXI6IDRcbiAgICAgIH0pKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0N1cnJlbnRUaW1lRGlzcGxheTIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAnY3VycmVudC10aW1lLWRpc3BsYXknLFxuICAgICAgICBvcmRlcjogNS4xXG4gICAgICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9UaW1lRGl2aWRlcjIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAndGltZS1kaXZpZGVyJyxcbiAgICAgICAgb3JkZXI6IDUuMlxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfRHVyYXRpb25EaXNwbGF5Mi5kZWZhdWx0LCBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcywge1xuICAgICAgICBrZXk6ICdkdXJhdGlvbi1kaXNwbGF5JyxcbiAgICAgICAgb3JkZXI6IDUuM1xuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfUHJvZ3Jlc3NDb250cm9sMi5kZWZhdWx0LCBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcywge1xuICAgICAgICBrZXk6ICdwcm9ncmVzcy1jb250cm9sJyxcbiAgICAgICAgb3JkZXI6IDZcbiAgICAgIH0pKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0Z1bGxzY3JlZW5Ub2dnbGUyLmRlZmF1bHQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7XG4gICAgICAgIGtleTogJ2Z1bGxzY3JlZW4tdG9nZ2xlJyxcbiAgICAgICAgb3JkZXI6IDhcbiAgICAgIH0pKV07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0RnVsbENoaWxkcmVuJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RnVsbENoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfUGxheVRvZ2dsZTIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAncGxheS10b2dnbGUnLFxuICAgICAgICBvcmRlcjogMVxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfUmVwbGF5Q29udHJvbDIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAncmVwbGF5LWNvbnRyb2wnLFxuICAgICAgICBvcmRlcjogMlxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfRm9yd2FyZENvbnRyb2wyLmRlZmF1bHQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7XG4gICAgICAgIGtleTogJ2ZvcndhcmQtY29udHJvbCcsXG4gICAgICAgIG9yZGVyOiAzXG4gICAgICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Wb2x1bWVNZW51QnV0dG9uMi5kZWZhdWx0LCBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcywge1xuICAgICAgICBrZXk6ICd2b2x1bWUtbWVudS1idXR0b24nLFxuICAgICAgICBvcmRlcjogNFxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfQ3VycmVudFRpbWVEaXNwbGF5Mi5kZWZhdWx0LCBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcywge1xuICAgICAgICBrZXk6ICdjdXJyZW50LXRpbWUtZGlzcGxheScsXG4gICAgICAgIG9yZGVyOiA1XG4gICAgICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9UaW1lRGl2aWRlcjIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAndGltZS1kaXZpZGVyJyxcbiAgICAgICAgb3JkZXI6IDZcbiAgICAgIH0pKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0R1cmF0aW9uRGlzcGxheTIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAga2V5OiAnZHVyYXRpb24tZGlzcGxheScsXG4gICAgICAgIG9yZGVyOiA3XG4gICAgICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Qcm9ncmVzc0NvbnRyb2wyLmRlZmF1bHQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7XG4gICAgICAgIGtleTogJ3Byb2dyZXNzLWNvbnRyb2wnLFxuICAgICAgICBvcmRlcjogOFxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfUmVtYWluaW5nVGltZURpc3BsYXkyLmRlZmF1bHQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7XG4gICAgICAgIGtleTogJ3JlbWFpbmluZy10aW1lLWRpc3BsYXknLFxuICAgICAgICBvcmRlcjogOVxuICAgICAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfUGxheWJhY2tSYXRlTWVudUJ1dHRvbjIuZGVmYXVsdCwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAgcmF0ZXM6IFsxLCAxLjI1LCAxLjUsIDJdLFxuICAgICAgICBrZXk6ICdwbGF5YmFjay1yYXRlJyxcbiAgICAgICAgb3JkZXI6IDEwXG4gICAgICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9GdWxsc2NyZWVuVG9nZ2xlMi5kZWZhdWx0LCBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcywge1xuICAgICAgICBrZXk6ICdmdWxsc2NyZWVuLXRvZ2dsZScsXG4gICAgICAgIG9yZGVyOiAxMVxuICAgICAgfSkpXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRDaGlsZHJlbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldENoaWxkcmVuKCkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gX3JlYWN0Mi5kZWZhdWx0LkNoaWxkcmVuLnRvQXJyYXkodGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gICAgICB2YXIgZGVmYXVsdENoaWxkcmVuID0gdGhpcy5wcm9wcy5kaXNhYmxlRGVmYXVsdENvbnRyb2xzID8gW10gOiB0aGlzLmdldERlZmF1bHRDaGlsZHJlbigpO1xuICAgICAgcmV0dXJuICgwLCBfdXRpbHMubWVyZ2VBbmRTb3J0Q2hpbGRyZW4pKGRlZmF1bHRDaGlsZHJlbiwgY2hpbGRyZW4sIHRoaXMucHJvcHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGF1dG9IaWRlID0gX3Byb3BzLmF1dG9IaWRlLFxuICAgICAgICAgIGNsYXNzTmFtZSA9IF9wcm9wcy5jbGFzc05hbWUsXG4gICAgICAgICAgZGlzYWJsZUNvbXBsZXRlbHkgPSBfcHJvcHMuZGlzYWJsZUNvbXBsZXRlbHk7XG5cbiAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuZ2V0Q2hpbGRyZW4oKTtcblxuICAgICAgcmV0dXJuIGRpc2FibGVDb21wbGV0ZWx5ID8gbnVsbCA6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAnZGl2JyxcbiAgICAgICAge1xuICAgICAgICAgIGNsYXNzTmFtZTogKDAsIF9jbGFzc25hbWVzMi5kZWZhdWx0KSgndmlkZW8tcmVhY3QtY29udHJvbC1iYXInLCB7XG4gICAgICAgICAgICAndmlkZW8tcmVhY3QtY29udHJvbC1iYXItYXV0by1oaWRlJzogYXV0b0hpZGVcbiAgICAgICAgICB9LCBjbGFzc05hbWUpXG4gICAgICAgIH0sXG4gICAgICAgIGNoaWxkcmVuXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDb250cm9sQmFyO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gQ29udHJvbEJhcjtcblxuXG5Db250cm9sQmFyLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNvbnRyb2xCYXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuQ29udHJvbEJhci5kaXNwbGF5TmFtZSA9ICdDb250cm9sQmFyJzsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///730\\n\")},731:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _dom = __webpack_require__(712);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _defineProperty(obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\\n  } else {\\n    obj[key] = value;\\n  }return obj;\\n}\\n\\nfunction _toConsumableArray(arr) {\\n  if (Array.isArray(arr)) {\\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\\n      arr2[i] = arr[i];\\n    }return arr2;\\n  } else {\\n    return Array.from(arr);\\n  }\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  clickable: _propTypes2.default.bool,\\n  dblclickable: _propTypes2.default.bool,\\n  manager: _propTypes2.default.object,\\n  actions: _propTypes2.default.object,\\n  player: _propTypes2.default.object,\\n  shortcuts: _propTypes2.default.array\\n};\\n\\nvar defaultProps = {\\n  clickable: true,\\n  dblclickable: true\\n};\\n\\nvar Shortcut = function (_Component) {\\n  _inherits(Shortcut, _Component);\\n\\n  function Shortcut(props, context) {\\n    _classCallCheck(this, Shortcut);\\n\\n    var _this = _possibleConstructorReturn(this, (Shortcut.__proto__ || Object.getPrototypeOf(Shortcut)).call(this, props, context));\\n\\n    _this.defaultShortcuts = [{\\n      keyCode: 32, // spacebar\\n      handle: _this.togglePlay\\n    }, {\\n      keyCode: 75, // k\\n      handle: _this.togglePlay\\n    }, {\\n      keyCode: 70, // f\\n      handle: _this.toggleFullscreen\\n    }, {\\n      keyCode: 37, // Left arrow\\n      handle: function handle(player, actions) {\\n        if (!player.hasStarted) {\\n          return;\\n        }\\n        actions.replay(5, {\\n          action: 'replay-5',\\n          source: 'shortcut'\\n        }); // Go back 5 seconds\\n      }\\n    }, {\\n      keyCode: 74, // j\\n      handle: function handle(player, actions) {\\n        if (!player.hasStarted) {\\n          return;\\n        }\\n        actions.replay(10, {\\n          action: 'replay-10',\\n          source: 'shortcut'\\n        }); // Go back 10 seconds\\n      }\\n    }, {\\n      keyCode: 39, // Right arrow\\n      handle: function handle(player, actions) {\\n        if (!player.hasStarted) {\\n          return;\\n        }\\n        actions.forward(5, {\\n          action: 'forward-5',\\n          source: 'shortcut'\\n        }); // Go forward 5 seconds\\n      }\\n    }, {\\n      keyCode: 76, // l\\n      handle: function handle(player, actions) {\\n        if (!player.hasStarted) {\\n          return;\\n        }\\n        actions.forward(10, {\\n          action: 'forward-10',\\n          source: 'shortcut'\\n        }); // Go forward 10 seconds\\n      }\\n    }, {\\n      keyCode: 36, // Home\\n      handle: function handle(player, actions) {\\n        if (!player.hasStarted) {\\n          return;\\n        }\\n        actions.seek(0); // Go to beginning of video\\n      }\\n    }, {\\n      keyCode: 35, // End\\n      handle: function handle(player, actions) {\\n        if (!player.hasStarted) {\\n          return;\\n        }\\n        // Go to end of video\\n        actions.seek(player.duration);\\n      }\\n    }, {\\n      keyCode: 38, // Up arrow\\n      handle: function handle(player, actions) {\\n        // Increase volume 5%\\n        var v = player.volume + 0.05;\\n        if (v > 1) {\\n          v = 1;\\n        }\\n        actions.changeVolume(v, {\\n          action: 'volume-up',\\n          source: 'shortcut'\\n        });\\n      }\\n    }, {\\n      keyCode: 40, // Down arrow\\n      handle: function handle(player, actions) {\\n        // Decrease volume 5%\\n        var v = player.volume - 0.05;\\n        if (v < 0) {\\n          v = 0;\\n        }\\n        var action = v > 0 ? 'volume-down' : 'volume-off';\\n        actions.changeVolume(v, {\\n          action: action,\\n          source: 'shortcut'\\n        });\\n      }\\n    }, {\\n      keyCode: 190, // Shift + >\\n      shift: true,\\n      handle: function handle(player, actions) {\\n        // Increase speed\\n        var playbackRate = player.playbackRate;\\n        if (playbackRate >= 1.5) {\\n          playbackRate = 2;\\n        } else if (playbackRate >= 1.25) {\\n          playbackRate = 1.5;\\n        } else if (playbackRate >= 1.0) {\\n          playbackRate = 1.25;\\n        } else if (playbackRate >= 0.5) {\\n          playbackRate = 1.0;\\n        } else if (playbackRate >= 0.25) {\\n          playbackRate = 0.5;\\n        } else if (playbackRate >= 0) {\\n          playbackRate = 0.25;\\n        }\\n        actions.changeRate(playbackRate, {\\n          action: 'fast-forward',\\n          source: 'shortcut'\\n        });\\n      }\\n    }, {\\n      keyCode: 188, // Shift + <\\n      shift: true,\\n      handle: function handle(player, actions) {\\n        // Decrease speed\\n        var playbackRate = player.playbackRate;\\n        if (playbackRate <= 0.5) {\\n          playbackRate = 0.25;\\n        } else if (playbackRate <= 1.0) {\\n          playbackRate = 0.5;\\n        } else if (playbackRate <= 1.25) {\\n          playbackRate = 1.0;\\n        } else if (playbackRate <= 1.5) {\\n          playbackRate = 1.25;\\n        } else if (playbackRate <= 2) {\\n          playbackRate = 1.5;\\n        }\\n        actions.changeRate(playbackRate, {\\n          action: 'fast-rewind',\\n          source: 'shortcut'\\n        });\\n      }\\n    }];\\n\\n    _this.shortcuts = [].concat(_toConsumableArray(_this.defaultShortcuts));\\n\\n    _this.mergeShortcuts = _this.mergeShortcuts.bind(_this);\\n    _this.handleKeyPress = _this.handleKeyPress.bind(_this);\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    _this.handleDoubleClick = _this.handleDoubleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(Shortcut, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this.mergeShortcuts();\\n      document.addEventListener('keydown', this.handleKeyPress);\\n      document.addEventListener('click', this.handleClick);\\n      document.addEventListener('dblclick', this.handleDoubleClick);\\n    }\\n  }, {\\n    key: 'componentDidUpdate',\\n    value: function componentDidUpdate(prevProps) {\\n      if (prevProps.shortcuts !== this.props.shortcuts) {\\n        this.mergeShortcuts();\\n      }\\n    }\\n  }, {\\n    key: 'componentWillUnmount',\\n    value: function componentWillUnmount() {\\n      document.removeEventListener('keydown', this.handleKeyPress);\\n      document.removeEventListener('click', this.handleClick);\\n      document.removeEventListener('dblclick', this.handleDoubleClick);\\n    }\\n\\n    // merge the shortcuts from props\\n\\n  }, {\\n    key: 'mergeShortcuts',\\n    value: function mergeShortcuts() {\\n      var getShortcutKey = function getShortcutKey(_ref) {\\n        var _ref$keyCode = _ref.keyCode,\\n            keyCode = _ref$keyCode === undefined ? 0 : _ref$keyCode,\\n            _ref$ctrl = _ref.ctrl,\\n            ctrl = _ref$ctrl === undefined ? false : _ref$ctrl,\\n            _ref$shift = _ref.shift,\\n            shift = _ref$shift === undefined ? false : _ref$shift,\\n            _ref$alt = _ref.alt,\\n            alt = _ref$alt === undefined ? false : _ref$alt;\\n        return keyCode + ':' + ctrl + ':' + shift + ':' + alt;\\n      };\\n      var defaultShortcuts = this.defaultShortcuts.reduce(function (shortcuts, shortcut) {\\n        return Object.assign(shortcuts, _defineProperty({}, getShortcutKey(shortcut), shortcut));\\n      }, {});\\n      var mergedShortcuts = (this.props.shortcuts || []).reduce(function (shortcuts, shortcut) {\\n        var keyCode = shortcut.keyCode,\\n            handle = shortcut.handle;\\n\\n        if (keyCode && typeof handle === 'function') {\\n          return Object.assign(shortcuts, _defineProperty({}, getShortcutKey(shortcut), shortcut));\\n        }\\n        return shortcuts;\\n      }, defaultShortcuts);\\n\\n      var gradeShortcut = function gradeShortcut(s) {\\n        var score = 0;\\n        var ps = ['ctrl', 'shift', 'alt'];\\n        ps.forEach(function (key) {\\n          if (s[key]) {\\n            score++;\\n          }\\n        });\\n        return score;\\n      };\\n\\n      this.shortcuts = Object.keys(mergedShortcuts).map(function (key) {\\n        return mergedShortcuts[key];\\n      }).sort(function (a, b) {\\n        return gradeShortcut(b) - gradeShortcut(a);\\n      });\\n    }\\n  }, {\\n    key: 'togglePlay',\\n    value: function togglePlay(player, actions) {\\n      if (player.paused) {\\n        actions.play({\\n          action: 'play',\\n          source: 'shortcut'\\n        });\\n      } else {\\n        actions.pause({\\n          action: 'pause',\\n          source: 'shortcut'\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'toggleFullscreen',\\n    value: function toggleFullscreen(player, actions) {\\n      actions.toggleFullscreen(player);\\n    }\\n  }, {\\n    key: 'handleKeyPress',\\n    value: function handleKeyPress(e) {\\n      var _props = this.props,\\n          player = _props.player,\\n          actions = _props.actions;\\n\\n      if (!player.isActive) {\\n        return;\\n      }\\n      if (document.activeElement && ((0, _dom.hasClass)(document.activeElement, 'video-react-control') || (0, _dom.hasClass)(document.activeElement, 'video-react-menu-button-active')\\n      // || hasClass(document.activeElement, 'video-react-slider')\\n      || (0, _dom.hasClass)(document.activeElement, 'video-react-big-play-button'))) {\\n        return;\\n      }\\n\\n      var keyCode = e.keyCode || e.which;\\n      var ctrl = e.ctrlKey || e.metaKey;\\n      var shift = e.shiftKey;\\n      var alt = e.altKey;\\n\\n      var shortcut = this.shortcuts.filter(function (s) {\\n        if (!s.keyCode || s.keyCode - keyCode !== 0) {\\n          return false;\\n        }\\n        if (s.ctrl !== undefined && s.ctrl !== ctrl || s.shift !== undefined && s.shift !== shift || s.alt !== undefined && s.alt !== alt) {\\n          return false;\\n        }\\n        return true;\\n      })[0];\\n\\n      if (shortcut) {\\n        shortcut.handle(player, actions);\\n        e.preventDefault();\\n      }\\n    }\\n\\n    // only if player is active and player is ready\\n\\n  }, {\\n    key: 'canBeClicked',\\n    value: function canBeClicked(player, e) {\\n      if (!player.isActive || e.target.nodeName !== 'VIDEO' || player.readyState !== 4) {\\n        return false;\\n      }\\n      return true;\\n    }\\n  }, {\\n    key: 'handleClick',\\n    value: function handleClick(e) {\\n      var _props2 = this.props,\\n          player = _props2.player,\\n          actions = _props2.actions,\\n          clickable = _props2.clickable;\\n\\n      if (!this.canBeClicked(player, e) || !clickable) {\\n        return;\\n      }\\n      this.togglePlay(player, actions);\\n      // e.preventDefault();\\n    }\\n  }, {\\n    key: 'handleDoubleClick',\\n    value: function handleDoubleClick(e) {\\n      var _props3 = this.props,\\n          player = _props3.player,\\n          actions = _props3.actions,\\n          dblclickable = _props3.dblclickable;\\n\\n      if (!this.canBeClicked(player, e) || !dblclickable) {\\n        return;\\n      }\\n      this.toggleFullscreen(player, actions);\\n      // e.preventDefault();\\n    }\\n\\n    // this component dose not render anything\\n    // it's just for the key down event\\n\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      return null;\\n    }\\n  }]);\\n\\n  return Shortcut;\\n}(_react.Component);\\n\\nexports.default = Shortcut;\\n\\nShortcut.propTypes = propTypes;\\nShortcut.defaultProps = defaultProps;\\nShortcut.displayName = 'Shortcut';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///731\\n\")},732:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  manager: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nvar Bezel = function (_Component) {\\n  _inherits(Bezel, _Component);\\n\\n  function Bezel(props, context) {\\n    _classCallCheck(this, Bezel);\\n\\n    var _this = _possibleConstructorReturn(this, (Bezel.__proto__ || Object.getPrototypeOf(Bezel)).call(this, props, context));\\n\\n    _this.timer = null;\\n    props.manager.subscribeToOperationStateChange(_this.handleStateChange.bind(_this));\\n\\n    _this.state = {\\n      hidden: true,\\n      operation: {}\\n    };\\n    return _this;\\n  }\\n\\n  _createClass(Bezel, [{\\n    key: 'handleStateChange',\\n    value: function handleStateChange(state, prevState) {\\n      var _this2 = this;\\n\\n      if (state.count !== prevState.count && state.operation.source === 'shortcut') {\\n        if (this.timer) {\\n          // previous animation is not finished\\n          clearTimeout(this.timer); // cancel it\\n          this.timer = null;\\n        }\\n\\n        // show it\\n        // update operation\\n        this.setState({\\n          hidden: false,\\n          count: state.count,\\n          operation: state.operation\\n        });\\n\\n        // hide it after 0.5s\\n        this.timer = setTimeout(function () {\\n          _this2.setState({\\n            hidden: true\\n          });\\n          _this2.timer = null;\\n        }, 500);\\n      }\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      // only displays for shortcut so far\\n      if (this.state.operation.source !== 'shortcut') {\\n        return null;\\n      }\\n      var style = this.state.hidden ? {\\n        display: 'none'\\n      } : null;\\n\\n      return _react2.default.createElement('div', {\\n        className: (0, _classnames2.default)({\\n          'video-react-bezel': true,\\n          'video-react-bezel-animation': this.state.count % 2 === 0,\\n          'video-react-bezel-animation-alt': this.state.count % 2 === 1\\n        }, this.props.className),\\n        style: style,\\n        role: 'status',\\n        'aria-label': this.state.operation.action\\n      }, _react2.default.createElement('div', {\\n        className: (0, _classnames2.default)('video-react-bezel-icon', 'video-react-bezel-icon-' + this.state.operation.action)\\n      }));\\n    }\\n  }]);\\n\\n  return Bezel;\\n}(_react.Component);\\n\\nexports.default = Bezel;\\n\\nBezel.propTypes = propTypes;\\nBezel.displayName = 'Bezel';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///732\\n\")},733:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  actions: _propTypes2.default.object,\\n  player: _propTypes2.default.object,\\n  children: _propTypes2.default.any,\\n  startTime: _propTypes2.default.number,\\n  loop: _propTypes2.default.bool,\\n  muted: _propTypes2.default.bool,\\n  autoPlay: _propTypes2.default.bool,\\n  playsInline: _propTypes2.default.bool,\\n  src: _propTypes2.default.string,\\n  poster: _propTypes2.default.string,\\n  className: _propTypes2.default.string,\\n  preload: _propTypes2.default.oneOf(['auto', 'metadata', 'none']),\\n  crossOrigin: _propTypes2.default.string,\\n\\n  onLoadStart: _propTypes2.default.func,\\n  onWaiting: _propTypes2.default.func,\\n  onCanPlay: _propTypes2.default.func,\\n  onCanPlayThrough: _propTypes2.default.func,\\n  onPlaying: _propTypes2.default.func,\\n  onEnded: _propTypes2.default.func,\\n  onSeeking: _propTypes2.default.func,\\n  onSeeked: _propTypes2.default.func,\\n  onPlay: _propTypes2.default.func,\\n  onPause: _propTypes2.default.func,\\n  onProgress: _propTypes2.default.func,\\n  onDurationChange: _propTypes2.default.func,\\n  onError: _propTypes2.default.func,\\n  onSuspend: _propTypes2.default.func,\\n  onAbort: _propTypes2.default.func,\\n  onEmptied: _propTypes2.default.func,\\n  onStalled: _propTypes2.default.func,\\n  onLoadedMetadata: _propTypes2.default.func,\\n  onLoadedData: _propTypes2.default.func,\\n  onTimeUpdate: _propTypes2.default.func,\\n  onRateChange: _propTypes2.default.func,\\n  onVolumeChange: _propTypes2.default.func,\\n  onResize: _propTypes2.default.func\\n};\\n\\nvar defaultProps = {\\n  preload: 'auto'\\n};\\n\\nvar Video = function (_Component) {\\n  _inherits(Video, _Component);\\n\\n  function Video(props) {\\n    _classCallCheck(this, Video);\\n\\n    var _this = _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).call(this, props));\\n\\n    _this.video = null; // the html5 video\\n    _this.play = _this.play.bind(_this);\\n    _this.pause = _this.pause.bind(_this);\\n    _this.seek = _this.seek.bind(_this);\\n    _this.forward = _this.forward.bind(_this);\\n    _this.replay = _this.replay.bind(_this);\\n    _this.toggleFullscreen = _this.toggleFullscreen.bind(_this);\\n    _this.getProperties = _this.getProperties.bind(_this);\\n    _this.renderChildren = _this.renderChildren.bind(_this);\\n    _this.handleLoadStart = _this.handleLoadStart.bind(_this);\\n    _this.handleCanPlay = _this.handleCanPlay.bind(_this);\\n    _this.handleCanPlayThrough = _this.handleCanPlayThrough.bind(_this);\\n    _this.handlePlay = _this.handlePlay.bind(_this);\\n    _this.handlePlaying = _this.handlePlaying.bind(_this);\\n    _this.handlePause = _this.handlePause.bind(_this);\\n    _this.handleEnded = _this.handleEnded.bind(_this);\\n    _this.handleWaiting = _this.handleWaiting.bind(_this);\\n    _this.handleSeeking = _this.handleSeeking.bind(_this);\\n    _this.handleSeeked = _this.handleSeeked.bind(_this);\\n    _this.handleFullscreenChange = _this.handleFullscreenChange.bind(_this);\\n    _this.handleError = _this.handleError.bind(_this);\\n    _this.handleSuspend = _this.handleSuspend.bind(_this);\\n    _this.handleAbort = _this.handleAbort.bind(_this);\\n    _this.handleEmptied = _this.handleEmptied.bind(_this);\\n    _this.handleStalled = _this.handleStalled.bind(_this);\\n    _this.handleLoadedMetaData = _this.handleLoadedMetaData.bind(_this);\\n    _this.handleLoadedData = _this.handleLoadedData.bind(_this);\\n    _this.handleTimeUpdate = _this.handleTimeUpdate.bind(_this);\\n    _this.handleRateChange = _this.handleRateChange.bind(_this);\\n    _this.handleVolumeChange = _this.handleVolumeChange.bind(_this);\\n    _this.handleDurationChange = _this.handleDurationChange.bind(_this);\\n    _this.handleProgress = (0, _utils.throttle)(_this.handleProgress.bind(_this), 250);\\n    _this.handleKeypress = _this.handleKeypress.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(Video, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this.forceUpdate(); // make sure the children can get the video property\\n    }\\n\\n    // get all video properties\\n\\n  }, {\\n    key: 'getProperties',\\n    value: function getProperties() {\\n      var _this2 = this;\\n\\n      if (!this.video) {\\n        return null;\\n      }\\n\\n      return _utils.mediaProperties.reduce(function (properties, key) {\\n        properties[key] = _this2.video[key];\\n        return properties;\\n      }, {});\\n    }\\n\\n    // get playback rate\\n\\n  }, {\\n    key: 'play',\\n\\n    // play the video\\n    value: function play() {\\n      var promise = this.video.play();\\n      if (promise !== undefined) {\\n        promise.catch(function (error) {}).then(function () {});\\n      }\\n    }\\n\\n    // pause the video\\n\\n  }, {\\n    key: 'pause',\\n    value: function pause() {\\n      var promise = this.video.pause();\\n      if (promise !== undefined) {\\n        promise.catch(function (error) {}).then(function () {});\\n      }\\n    }\\n\\n    // Change the video source and re-load the video:\\n\\n  }, {\\n    key: 'load',\\n    value: function load() {\\n      this.video.load();\\n    }\\n\\n    // Add a new text track to the video\\n\\n  }, {\\n    key: 'addTextTrack',\\n    value: function addTextTrack() {\\n      var _video;\\n\\n      (_video = this.video).addTextTrack.apply(_video, arguments);\\n    }\\n\\n    // Check if your browser can play different types of video:\\n\\n  }, {\\n    key: 'canPlayType',\\n    value: function canPlayType() {\\n      var _video2;\\n\\n      (_video2 = this.video).canPlayType.apply(_video2, arguments);\\n    }\\n\\n    // toggle play\\n\\n  }, {\\n    key: 'togglePlay',\\n    value: function togglePlay() {\\n      if (this.video.paused) {\\n        this.play();\\n      } else {\\n        this.pause();\\n      }\\n    }\\n\\n    // seek video by time\\n\\n  }, {\\n    key: 'seek',\\n    value: function seek(time) {\\n      try {\\n        this.video.currentTime = time;\\n      } catch (e) {\\n        // console.log(e, 'Video is not ready.')\\n      }\\n    }\\n\\n    // jump forward x seconds\\n\\n  }, {\\n    key: 'forward',\\n    value: function forward(seconds) {\\n      this.seek(this.video.currentTime + seconds);\\n    }\\n\\n    // jump back x seconds\\n\\n  }, {\\n    key: 'replay',\\n    value: function replay(seconds) {\\n      this.forward(-seconds);\\n    }\\n\\n    // enter or exist full screen\\n\\n  }, {\\n    key: 'toggleFullscreen',\\n    value: function toggleFullscreen() {\\n      var _props = this.props,\\n          player = _props.player,\\n          actions = _props.actions;\\n\\n      actions.toggleFullscreen(player);\\n    }\\n\\n    // Fired when the user agent\\n    // begins looking for media data\\n\\n  }, {\\n    key: 'handleLoadStart',\\n    value: function handleLoadStart() {\\n      var _props2 = this.props,\\n          actions = _props2.actions,\\n          onLoadStart = _props2.onLoadStart;\\n\\n      actions.handleLoadStart(this.getProperties());\\n      if (onLoadStart) {\\n        onLoadStart.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // A handler for events that\\n    // signal that waiting has ended\\n\\n  }, {\\n    key: 'handleCanPlay',\\n    value: function handleCanPlay() {\\n      var _props3 = this.props,\\n          actions = _props3.actions,\\n          onCanPlay = _props3.onCanPlay;\\n\\n      actions.handleCanPlay(this.getProperties());\\n\\n      if (onCanPlay) {\\n        onCanPlay.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // A handler for events that\\n    // signal that waiting has ended\\n\\n  }, {\\n    key: 'handleCanPlayThrough',\\n    value: function handleCanPlayThrough() {\\n      var _props4 = this.props,\\n          actions = _props4.actions,\\n          onCanPlayThrough = _props4.onCanPlayThrough;\\n\\n      actions.handleCanPlayThrough(this.getProperties());\\n\\n      if (onCanPlayThrough) {\\n        onCanPlayThrough.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // A handler for events that\\n    // signal that waiting has ended\\n\\n  }, {\\n    key: 'handlePlaying',\\n    value: function handlePlaying() {\\n      var _props5 = this.props,\\n          actions = _props5.actions,\\n          onPlaying = _props5.onPlaying;\\n\\n      actions.handlePlaying(this.getProperties());\\n\\n      if (onPlaying) {\\n        onPlaying.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired whenever the media has been started\\n\\n  }, {\\n    key: 'handlePlay',\\n    value: function handlePlay() {\\n      var _props6 = this.props,\\n          actions = _props6.actions,\\n          onPlay = _props6.onPlay;\\n\\n      actions.handlePlay(this.getProperties());\\n\\n      if (onPlay) {\\n        onPlay.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired whenever the media has been paused\\n\\n  }, {\\n    key: 'handlePause',\\n    value: function handlePause() {\\n      var _props7 = this.props,\\n          actions = _props7.actions,\\n          onPause = _props7.onPause;\\n\\n      actions.handlePause(this.getProperties());\\n\\n      if (onPause) {\\n        onPause.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired when the duration of\\n    // the media resource is first known or changed\\n\\n  }, {\\n    key: 'handleDurationChange',\\n    value: function handleDurationChange() {\\n      var _props8 = this.props,\\n          actions = _props8.actions,\\n          onDurationChange = _props8.onDurationChange;\\n\\n      actions.handleDurationChange(this.getProperties());\\n\\n      if (onDurationChange) {\\n        onDurationChange.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired while the user agent\\n    // is downloading media data\\n\\n  }, {\\n    key: 'handleProgress',\\n    value: function handleProgress() {\\n      var _props9 = this.props,\\n          actions = _props9.actions,\\n          onProgress = _props9.onProgress;\\n\\n      if (this.video) {\\n        actions.handleProgressChange(this.getProperties());\\n      }\\n\\n      if (onProgress) {\\n        onProgress.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired when the end of the media resource\\n    // is reached (currentTime == duration)\\n\\n  }, {\\n    key: 'handleEnded',\\n    value: function handleEnded() {\\n      var _props10 = this.props,\\n          loop = _props10.loop,\\n          player = _props10.player,\\n          actions = _props10.actions,\\n          onEnded = _props10.onEnded;\\n\\n      if (loop) {\\n        this.seek(0);\\n        this.play();\\n      } else if (!player.paused) {\\n        this.pause();\\n      }\\n      actions.handleEnd(this.getProperties());\\n\\n      if (onEnded) {\\n        onEnded.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired whenever the media begins waiting\\n\\n  }, {\\n    key: 'handleWaiting',\\n    value: function handleWaiting() {\\n      var _props11 = this.props,\\n          actions = _props11.actions,\\n          onWaiting = _props11.onWaiting;\\n\\n      actions.handleWaiting(this.getProperties());\\n\\n      if (onWaiting) {\\n        onWaiting.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired whenever the player\\n    // is jumping to a new time\\n\\n  }, {\\n    key: 'handleSeeking',\\n    value: function handleSeeking() {\\n      var _props12 = this.props,\\n          actions = _props12.actions,\\n          onSeeking = _props12.onSeeking;\\n\\n      actions.handleSeeking(this.getProperties());\\n\\n      if (onSeeking) {\\n        onSeeking.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fired when the player has\\n    // finished jumping to a new time\\n\\n  }, {\\n    key: 'handleSeeked',\\n    value: function handleSeeked() {\\n      var _props13 = this.props,\\n          actions = _props13.actions,\\n          onSeeked = _props13.onSeeked;\\n\\n      actions.handleSeeked(this.getProperties());\\n\\n      if (onSeeked) {\\n        onSeeked.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Handle Fullscreen Change\\n\\n  }, {\\n    key: 'handleFullscreenChange',\\n    value: function handleFullscreenChange() {}\\n\\n    // Fires when the browser is\\n    // intentionally not getting media data\\n\\n  }, {\\n    key: 'handleSuspend',\\n    value: function handleSuspend() {\\n      var _props14 = this.props,\\n          actions = _props14.actions,\\n          onSuspend = _props14.onSuspend;\\n\\n      actions.handleSuspend(this.getProperties());\\n      if (onSuspend) {\\n        onSuspend.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the loading of an audio/video is aborted\\n\\n  }, {\\n    key: 'handleAbort',\\n    value: function handleAbort() {\\n      var _props15 = this.props,\\n          actions = _props15.actions,\\n          onAbort = _props15.onAbort;\\n\\n      actions.handleAbort(this.getProperties());\\n      if (onAbort) {\\n        onAbort.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the current playlist is empty\\n\\n  }, {\\n    key: 'handleEmptied',\\n    value: function handleEmptied() {\\n      var _props16 = this.props,\\n          actions = _props16.actions,\\n          onEmptied = _props16.onEmptied;\\n\\n      actions.handleEmptied(this.getProperties());\\n      if (onEmptied) {\\n        onEmptied.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the browser is trying to\\n    // get media data, but data is not available\\n\\n  }, {\\n    key: 'handleStalled',\\n    value: function handleStalled() {\\n      var _props17 = this.props,\\n          actions = _props17.actions,\\n          onStalled = _props17.onStalled;\\n\\n      actions.handleStalled(this.getProperties());\\n\\n      if (onStalled) {\\n        onStalled.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the browser has loaded\\n    // meta data for the audio/video\\n\\n  }, {\\n    key: 'handleLoadedMetaData',\\n    value: function handleLoadedMetaData() {\\n      var _props18 = this.props,\\n          actions = _props18.actions,\\n          onLoadedMetadata = _props18.onLoadedMetadata,\\n          startTime = _props18.startTime;\\n\\n      if (startTime && startTime > 0) {\\n        this.video.currentTime = startTime;\\n      }\\n\\n      actions.handleLoadedMetaData(this.getProperties());\\n\\n      if (onLoadedMetadata) {\\n        onLoadedMetadata.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the browser has loaded\\n    // the current frame of the audio/video\\n\\n  }, {\\n    key: 'handleLoadedData',\\n    value: function handleLoadedData() {\\n      var _props19 = this.props,\\n          actions = _props19.actions,\\n          onLoadedData = _props19.onLoadedData;\\n\\n      actions.handleLoadedData(this.getProperties());\\n\\n      if (onLoadedData) {\\n        onLoadedData.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the current\\n    // playback position has changed\\n\\n  }, {\\n    key: 'handleTimeUpdate',\\n    value: function handleTimeUpdate() {\\n      var _props20 = this.props,\\n          actions = _props20.actions,\\n          onTimeUpdate = _props20.onTimeUpdate;\\n\\n      actions.handleTimeUpdate(this.getProperties());\\n\\n      if (onTimeUpdate) {\\n        onTimeUpdate.apply(undefined, arguments);\\n      }\\n    }\\n\\n    /**\\n     * Fires when the playing speed of the audio/video is changed\\n     */\\n\\n  }, {\\n    key: 'handleRateChange',\\n    value: function handleRateChange() {\\n      var _props21 = this.props,\\n          actions = _props21.actions,\\n          onRateChange = _props21.onRateChange;\\n\\n      actions.handleRateChange(this.getProperties());\\n\\n      if (onRateChange) {\\n        onRateChange.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when the volume has been changed\\n\\n  }, {\\n    key: 'handleVolumeChange',\\n    value: function handleVolumeChange() {\\n      var _props22 = this.props,\\n          actions = _props22.actions,\\n          onVolumeChange = _props22.onVolumeChange;\\n\\n      actions.handleVolumeChange(this.getProperties());\\n\\n      if (onVolumeChange) {\\n        onVolumeChange.apply(undefined, arguments);\\n      }\\n    }\\n\\n    // Fires when an error occurred\\n    // during the loading of an audio/video\\n\\n  }, {\\n    key: 'handleError',\\n    value: function handleError() {\\n      var _props23 = this.props,\\n          actions = _props23.actions,\\n          onError = _props23.onError;\\n\\n      actions.handleError(this.getProperties());\\n      if (onError) {\\n        onError.apply(undefined, arguments);\\n      }\\n    }\\n  }, {\\n    key: 'handleResize',\\n    value: function handleResize() {\\n      var _props24 = this.props,\\n          actions = _props24.actions,\\n          onResize = _props24.onResize;\\n\\n      actions.handleResize(this.getProperties());\\n      if (onResize) {\\n        onResize.apply(undefined, arguments);\\n      }\\n    }\\n  }, {\\n    key: 'handleKeypress',\\n    value: function handleKeypress() {}\\n  }, {\\n    key: 'renderChildren',\\n    value: function renderChildren() {\\n      var _this3 = this;\\n\\n      var props = _extends({}, this.props, {\\n        video: this.video\\n      });\\n\\n      // to make sure the children can get video property\\n      if (!this.video) {\\n        return null;\\n      }\\n\\n      // only keep <source />, <track />, <MyComponent isVideoChild /> elements\\n      return _react2.default.Children.toArray(this.props.children).filter(_utils.isVideoChild).map(function (c) {\\n        var cprops = void 0;\\n        if (typeof c.type === 'string') {\\n          // add onError to <source />\\n          if (c.type === 'source') {\\n            cprops = _extends({}, c.props);\\n            var preOnError = cprops.onError;\\n            cprops.onError = function () {\\n              if (preOnError) {\\n                preOnError.apply(undefined, arguments);\\n              }\\n              _this3.handleError.apply(_this3, arguments);\\n            };\\n          }\\n        } else {\\n          cprops = props;\\n        }\\n        return _react2.default.cloneElement(c, cprops);\\n      });\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _this4 = this;\\n\\n      var _props25 = this.props,\\n          loop = _props25.loop,\\n          poster = _props25.poster,\\n          preload = _props25.preload,\\n          src = _props25.src,\\n          autoPlay = _props25.autoPlay,\\n          playsInline = _props25.playsInline,\\n          muted = _props25.muted,\\n          crossOrigin = _props25.crossOrigin,\\n          videoId = _props25.videoId;\\n\\n      return _react2.default.createElement('video', {\\n        className: (0, _classnames2.default)('video-react-video', this.props.className),\\n        id: videoId,\\n        crossOrigin: crossOrigin,\\n        ref: function ref(c) {\\n          _this4.video = c;\\n        },\\n        muted: muted,\\n        preload: preload,\\n        loop: loop,\\n        playsInline: playsInline,\\n        autoPlay: autoPlay,\\n        poster: poster,\\n        src: src,\\n        onLoadStart: this.handleLoadStart,\\n        onWaiting: this.handleWaiting,\\n        onCanPlay: this.handleCanPlay,\\n        onCanPlayThrough: this.handleCanPlayThrough,\\n        onPlaying: this.handlePlaying,\\n        onEnded: this.handleEnded,\\n        onSeeking: this.handleSeeking,\\n        onSeeked: this.handleSeeked,\\n        onPlay: this.handlePlay,\\n        onPause: this.handlePause,\\n        onProgress: this.handleProgress,\\n        onDurationChange: this.handleDurationChange,\\n        onError: this.handleError,\\n        onSuspend: this.handleSuspend,\\n        onAbort: this.handleAbort,\\n        onEmptied: this.handleEmptied,\\n        onStalled: this.handleStalled,\\n        onLoadedMetadata: this.handleLoadedMetaData,\\n        onLoadedData: this.handleLoadedData,\\n        onTimeUpdate: this.handleTimeUpdate,\\n        onRateChange: this.handleRateChange,\\n        onVolumeChange: this.handleVolumeChange\\n      }, this.renderChildren());\\n    }\\n  }, {\\n    key: 'playbackRate',\\n    get: function get() {\\n      return this.video.playbackRate;\\n    }\\n\\n    // set playback rate\\n    // speed of video\\n\\n    , set: function set(rate) {\\n      this.video.playbackRate = rate;\\n    }\\n  }, {\\n    key: 'muted',\\n    get: function get() {\\n      return this.video.muted;\\n    },\\n    set: function set(val) {\\n      this.video.muted = val;\\n    }\\n  }, {\\n    key: 'volume',\\n    get: function get() {\\n      return this.video.volume;\\n    },\\n    set: function set(val) {\\n      if (val > 1) {\\n        val = 1;\\n      }\\n      if (val < 0) {\\n        val = 0;\\n      }\\n      this.video.volume = val;\\n    }\\n\\n    // video width\\n\\n  }, {\\n    key: 'videoWidth',\\n    get: function get() {\\n      return this.video.videoWidth;\\n    }\\n\\n    // video height\\n\\n  }, {\\n    key: 'videoHeight',\\n    get: function get() {\\n      return this.video.videoHeight;\\n    }\\n  }]);\\n\\n  return Video;\\n}(_react.Component);\\n\\nexports.default = Video;\\n\\nVideo.propTypes = propTypes;\\nVideo.defaultProps = defaultProps;\\nVideo.displayName = 'Video';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///733\\n\")},734:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  poster: _propTypes2.default.string,\\n  player: _propTypes2.default.object,\\n  actions: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nfunction PosterImage(_ref) {\\n  var poster = _ref.poster,\\n      player = _ref.player,\\n      actions = _ref.actions,\\n      className = _ref.className;\\n\\n  if (!poster || player.hasStarted) {\\n    return null;\\n  }\\n\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)('video-react-poster', className),\\n    style: {\\n      backgroundImage: 'url(\\\"' + poster + '\\\")'\\n    },\\n    onClick: function onClick() {\\n      if (player.paused) {\\n        actions.play();\\n      }\\n    }\\n  });\\n}\\n\\nPosterImage.propTypes = propTypes;\\nPosterImage.displayName = 'PosterImage';\\n\\nexports.default = PosterImage;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvUG9zdGVySW1hZ2UuanM/YjRmOCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9wcm9wVHlwZXMiLCJyZXF1aXJlIiwiX3Byb3BUeXBlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9jbGFzc25hbWVzIiwiX2NsYXNzbmFtZXMyIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJwcm9wVHlwZXMiLCJwb3N0ZXIiLCJzdHJpbmciLCJwbGF5ZXIiLCJvYmplY3QiLCJhY3Rpb25zIiwiY2xhc3NOYW1lIiwiUG9zdGVySW1hZ2UiLCJfcmVmIiwiaGFzU3RhcnRlZCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsIm9uQ2xpY2siLCJwYXVzZWQiLCJwbGF5IiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3Qzs7QUFJQSxJQUFJQyxhQUFhLG1CQUFBQyxDQUFRLENBQVIsQ0FBakI7O0FBRUEsSUFBSUMsY0FBY0MsdUJBQXVCSCxVQUF2QixDQUFsQjs7QUFFQSxJQUFJSSxTQUFTLG1CQUFBSCxDQUFRLENBQVIsQ0FBYjs7QUFFQSxJQUFJSSxVQUFVRix1QkFBdUJDLE1BQXZCLENBQWQ7O0FBRUEsSUFBSUUsY0FBYyxtQkFBQUwsQ0FBUSxDQUFSLENBQWxCOztBQUVBLElBQUlNLGVBQWVKLHVCQUF1QkcsV0FBdkIsQ0FBbkI7O0FBRUEsU0FBU0gsc0JBQVQsQ0FBZ0NLLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsT0FBT0EsSUFBSUMsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRUUsU0FBU0YsR0FBWCxFQUFyQztBQUF3RDs7QUFFL0YsSUFBSUcsWUFBWTtBQUNkQyxVQUFRVixZQUFZUSxPQUFaLENBQW9CRyxNQURkO0FBRWRDLFVBQVFaLFlBQVlRLE9BQVosQ0FBb0JLLE1BRmQ7QUFHZEMsV0FBU2QsWUFBWVEsT0FBWixDQUFvQkssTUFIZjtBQUlkRSxhQUFXZixZQUFZUSxPQUFaLENBQW9CRztBQUpqQixDQUFoQjs7QUFPQSxTQUFTSyxXQUFULENBQXFCQyxJQUFyQixFQUEyQjtBQUN6QixNQUFJUCxTQUFTTyxLQUFLUCxNQUFsQjtBQUFBLE1BQ0lFLFNBQVNLLEtBQUtMLE1BRGxCO0FBQUEsTUFFSUUsVUFBVUcsS0FBS0gsT0FGbkI7QUFBQSxNQUdJQyxZQUFZRSxLQUFLRixTQUhyQjs7QUFLQSxNQUFJLENBQUNMLE1BQUQsSUFBV0UsT0FBT00sVUFBdEIsRUFBa0M7QUFDaEMsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsU0FBT2YsUUFBUUssT0FBUixDQUFnQlcsYUFBaEIsQ0FBOEIsS0FBOUIsRUFBcUM7QUFDMUNKLGVBQVcsQ0FBQyxHQUFHVixhQUFhRyxPQUFqQixFQUEwQixvQkFBMUIsRUFBZ0RPLFNBQWhELENBRCtCO0FBRTFDSyxXQUFPO0FBQ0xDLHVCQUFpQixVQUFVWCxNQUFWLEdBQW1CO0FBRC9CLEtBRm1DO0FBSzFDWSxhQUFTLFNBQVNBLE9BQVQsR0FBbUI7QUFDMUIsVUFBSVYsT0FBT1csTUFBWCxFQUFtQjtBQUNqQlQsZ0JBQVFVLElBQVI7QUFDRDtBQUNGO0FBVHlDLEdBQXJDLENBQVA7QUFXRDs7QUFFRFIsWUFBWVAsU0FBWixHQUF3QkEsU0FBeEI7QUFDQU8sWUFBWVMsV0FBWixHQUEwQixhQUExQjs7QUFFQTdCLFFBQVFZLE9BQVIsR0FBa0JRLFdBQWxCIiwiZmlsZSI6IjczNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9jbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG52YXIgX2NsYXNzbmFtZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NuYW1lcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIHBvc3RlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIHBsYXllcjogX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsXG4gIGFjdGlvbnM6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LFxuICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59O1xuXG5mdW5jdGlvbiBQb3N0ZXJJbWFnZShfcmVmKSB7XG4gIHZhciBwb3N0ZXIgPSBfcmVmLnBvc3RlcixcbiAgICAgIHBsYXllciA9IF9yZWYucGxheWVyLFxuICAgICAgYWN0aW9ucyA9IF9yZWYuYWN0aW9ucyxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lO1xuXG4gIGlmICghcG9zdGVyIHx8IHBsYXllci5oYXNTdGFydGVkKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICBjbGFzc05hbWU6ICgwLCBfY2xhc3NuYW1lczIuZGVmYXVsdCkoJ3ZpZGVvLXJlYWN0LXBvc3RlcicsIGNsYXNzTmFtZSksXG4gICAgc3R5bGU6IHtcbiAgICAgIGJhY2tncm91bmRJbWFnZTogJ3VybChcIicgKyBwb3N0ZXIgKyAnXCIpJ1xuICAgIH0sXG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgIGlmIChwbGF5ZXIucGF1c2VkKSB7XG4gICAgICAgIGFjdGlvbnMucGxheSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cblBvc3RlckltYWdlLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblBvc3RlckltYWdlLmRpc3BsYXlOYW1lID0gJ1Bvc3RlckltYWdlJztcblxuZXhwb3J0cy5kZWZhdWx0ID0gUG9zdGVySW1hZ2U7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///734\\n\")},735:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = LoadingSpinner;\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _player = __webpack_require__(709);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string\\n};\\n\\nfunction LoadingSpinner(_ref) {\\n  var player = _ref.player,\\n      className = _ref.className;\\n\\n  if (player.error) {\\n    return null;\\n  }\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)('video-react-loading-spinner', className)\\n  });\\n}\\n\\nLoadingSpinner.propTypes = propTypes;\\nLoadingSpinner.displayName = 'LoadingSpinner';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvTG9hZGluZ1NwaW5uZXIuanM/NWY2NyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJMb2FkaW5nU3Bpbm5lciIsIl9wcm9wVHlwZXMiLCJyZXF1aXJlIiwiX3Byb3BUeXBlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9jbGFzc25hbWVzIiwiX2NsYXNzbmFtZXMyIiwiX3BsYXllciIsIm9iaiIsIl9fZXNNb2R1bGUiLCJwcm9wVHlwZXMiLCJwbGF5ZXIiLCJvYmplY3QiLCJjbGFzc05hbWUiLCJzdHJpbmciLCJfcmVmIiwiZXJyb3IiLCJjcmVhdGVFbGVtZW50IiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3QztBQUdBRCxRQUFRRSxPQUFSLEdBQWtCQyxjQUFsQjs7QUFFQSxJQUFJQyxhQUFhLG1CQUFBQyxDQUFRLENBQVIsQ0FBakI7O0FBRUEsSUFBSUMsY0FBY0MsdUJBQXVCSCxVQUF2QixDQUFsQjs7QUFFQSxJQUFJSSxTQUFTLG1CQUFBSCxDQUFRLENBQVIsQ0FBYjs7QUFFQSxJQUFJSSxVQUFVRix1QkFBdUJDLE1BQXZCLENBQWQ7O0FBRUEsSUFBSUUsY0FBYyxtQkFBQUwsQ0FBUSxDQUFSLENBQWxCOztBQUVBLElBQUlNLGVBQWVKLHVCQUF1QkcsV0FBdkIsQ0FBbkI7O0FBRUEsSUFBSUUsVUFBVSxtQkFBQVAsQ0FBUSxHQUFSLENBQWQ7O0FBRUEsU0FBU0Usc0JBQVQsQ0FBZ0NNLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsT0FBT0EsSUFBSUMsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEIsRUFBRVgsU0FBU1csR0FBWCxFQUFyQztBQUF3RDs7QUFFL0YsSUFBSUUsWUFBWTtBQUNkQyxVQUFRVixZQUFZSixPQUFaLENBQW9CZSxNQURkO0FBRWRDLGFBQVdaLFlBQVlKLE9BQVosQ0FBb0JpQjtBQUZqQixDQUFoQjs7QUFLQSxTQUFTaEIsY0FBVCxDQUF3QmlCLElBQXhCLEVBQThCO0FBQzVCLE1BQUlKLFNBQVNJLEtBQUtKLE1BQWxCO0FBQUEsTUFDSUUsWUFBWUUsS0FBS0YsU0FEckI7O0FBR0EsTUFBSUYsT0FBT0ssS0FBWCxFQUFrQjtBQUNoQixXQUFPLElBQVA7QUFDRDtBQUNELFNBQU9aLFFBQVFQLE9BQVIsQ0FBZ0JvQixhQUFoQixDQUE4QixLQUE5QixFQUFxQztBQUMxQ0osZUFBVyxDQUFDLEdBQUdQLGFBQWFULE9BQWpCLEVBQTBCLDZCQUExQixFQUF5RGdCLFNBQXpEO0FBRCtCLEdBQXJDLENBQVA7QUFHRDs7QUFFRGYsZUFBZVksU0FBZixHQUEyQkEsU0FBM0I7QUFDQVosZUFBZW9CLFdBQWYsR0FBNkIsZ0JBQTdCIiwiZmlsZSI6IjczNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IExvYWRpbmdTcGlubmVyO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX2NsYXNzbmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbnZhciBfY2xhc3NuYW1lczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc25hbWVzKTtcblxudmFyIF9wbGF5ZXIgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3BsYXllcicpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICBwbGF5ZXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LFxuICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59O1xuXG5mdW5jdGlvbiBMb2FkaW5nU3Bpbm5lcihfcmVmKSB7XG4gIHZhciBwbGF5ZXIgPSBfcmVmLnBsYXllcixcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lO1xuXG4gIGlmIChwbGF5ZXIuZXJyb3IpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICBjbGFzc05hbWU6ICgwLCBfY2xhc3NuYW1lczIuZGVmYXVsdCkoJ3ZpZGVvLXJlYWN0LWxvYWRpbmctc3Bpbm5lcicsIGNsYXNzTmFtZSlcbiAgfSk7XG59XG5cbkxvYWRpbmdTcGlubmVyLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkxvYWRpbmdTcGlubmVyLmRpc3BsYXlOYW1lID0gJ0xvYWRpbmdTcGlubmVyJzsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///735\\n\")},736:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  actions: _propTypes2.default.object,\\n  player: _propTypes2.default.object,\\n  position: _propTypes2.default.string,\\n  className: _propTypes2.default.string\\n};\\n\\nvar defaultProps = {\\n  position: 'left'\\n};\\n\\nvar BigPlayButton = function (_Component) {\\n  _inherits(BigPlayButton, _Component);\\n\\n  function BigPlayButton(props, context) {\\n    _classCallCheck(this, BigPlayButton);\\n\\n    var _this = _possibleConstructorReturn(this, (BigPlayButton.__proto__ || Object.getPrototypeOf(BigPlayButton)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(BigPlayButton, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {}\\n  }, {\\n    key: 'handleClick',\\n    value: function handleClick() {\\n      var actions = this.props.actions;\\n\\n      actions.play();\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _props = this.props,\\n          player = _props.player,\\n          position = _props.position;\\n\\n      return _react2.default.createElement('button', {\\n        className: (0, _classnames2.default)('video-react-big-play-button', 'video-react-big-play-button-' + position, this.props.className, {\\n          'big-play-button-hide': player.hasStarted || !player.currentSrc\\n        }),\\n        type: 'button',\\n        'aria-live': 'polite',\\n        tabIndex: '0',\\n        onClick: this.handleClick\\n      }, _react2.default.createElement('span', { className: 'video-react-control-text' }, 'Play Video'));\\n    }\\n  }]);\\n\\n  return BigPlayButton;\\n}(_react.Component);\\n\\nexports.default = BigPlayButton;\\n\\nBigPlayButton.propTypes = propTypes;\\nBigPlayButton.defaultProps = defaultProps;\\nBigPlayButton.displayName = 'BigPlayButton';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///736\\n\")},737:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nvar Fullscreen = function () {\\n  function Fullscreen() {\\n    _classCallCheck(this, Fullscreen);\\n  }\\n\\n  _createClass(Fullscreen, [{\\n    key: 'request',\\n    value: function request(elm) {\\n      if (elm.requestFullscreen) {\\n        elm.requestFullscreen();\\n      } else if (elm.webkitRequestFullscreen) {\\n        elm.webkitRequestFullscreen();\\n      } else if (elm.mozRequestFullScreen) {\\n        elm.mozRequestFullScreen();\\n      } else if (elm.msRequestFullscreen) {\\n        elm.msRequestFullscreen();\\n      }\\n    }\\n  }, {\\n    key: 'exit',\\n    value: function exit() {\\n      if (document.exitFullscreen) {\\n        document.exitFullscreen();\\n      } else if (document.webkitExitFullscreen) {\\n        document.webkitExitFullscreen();\\n      } else if (document.mozCancelFullScreen) {\\n        document.mozCancelFullScreen();\\n      } else if (document.msExitFullscreen) {\\n        document.msExitFullscreen();\\n      }\\n    }\\n  }, {\\n    key: 'addEventListener',\\n    value: function addEventListener(handler) {\\n      document.addEventListener('fullscreenchange', handler);\\n      document.addEventListener('webkitfullscreenchange', handler);\\n      document.addEventListener('mozfullscreenchange', handler);\\n      document.addEventListener('MSFullscreenChange', handler);\\n    }\\n  }, {\\n    key: 'removeEventListener',\\n    value: function removeEventListener(handler) {\\n      document.removeEventListener('fullscreenchange', handler);\\n      document.removeEventListener('webkitfullscreenchange', handler);\\n      document.removeEventListener('mozfullscreenchange', handler);\\n      document.removeEventListener('MSFullscreenChange', handler);\\n    }\\n  }, {\\n    key: 'isFullscreen',\\n    get: function get() {\\n      return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\\n    }\\n  }, {\\n    key: 'enabled',\\n    get: function get() {\\n      return document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled;\\n    }\\n  }]);\\n\\n  return Fullscreen;\\n}();\\n\\nexports.default = new Fullscreen();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///737\\n\")},738:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\nexports.operationReducer = exports.playerReducer = undefined;\\n\\nexports.default = function () {\\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n  var action = arguments[1];\\n\\n  return {\\n    player: (0, _player2.default)(state.player, action),\\n    operation: (0, _operation2.default)(state.operation, action)\\n  };\\n};\\n\\nvar _player = __webpack_require__(749);\\n\\nvar _player2 = _interopRequireDefault(_player);\\n\\nvar _operation = __webpack_require__(748);\\n\\nvar _operation2 = _interopRequireDefault(_operation);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar playerReducer = exports.playerReducer = _player2.default;\\nvar operationReducer = exports.operationReducer = _operation2.default;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL3JlZHVjZXJzL2luZGV4LmpzP2JhNTYiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJvcGVyYXRpb25SZWR1Y2VyIiwicGxheWVyUmVkdWNlciIsInVuZGVmaW5lZCIsImRlZmF1bHQiLCJzdGF0ZSIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFjdGlvbiIsInBsYXllciIsIl9wbGF5ZXIyIiwib3BlcmF0aW9uIiwiX29wZXJhdGlvbjIiLCJfcGxheWVyIiwicmVxdWlyZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfb3BlcmF0aW9uIiwib2JqIiwiX19lc01vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDO0FBR0FELFFBQVFFLGdCQUFSLEdBQTJCRixRQUFRRyxhQUFSLEdBQXdCQyxTQUFuRDs7QUFFQUosUUFBUUssT0FBUixHQUFrQixZQUFZO0FBQzVCLE1BQUlDLFFBQVFDLFVBQVVDLE1BQVYsR0FBbUIsQ0FBbkIsSUFBd0JELFVBQVUsQ0FBVixNQUFpQkgsU0FBekMsR0FBcURHLFVBQVUsQ0FBVixDQUFyRCxHQUFvRSxFQUFoRjtBQUNBLE1BQUlFLFNBQVNGLFVBQVUsQ0FBVixDQUFiOztBQUVBLFNBQU87QUFDTEcsWUFBUSxDQUFDLEdBQUdDLFNBQVNOLE9BQWIsRUFBc0JDLE1BQU1JLE1BQTVCLEVBQW9DRCxNQUFwQyxDQURIO0FBRUxHLGVBQVcsQ0FBQyxHQUFHQyxZQUFZUixPQUFoQixFQUF5QkMsTUFBTU0sU0FBL0IsRUFBMENILE1BQTFDO0FBRk4sR0FBUDtBQUlELENBUkQ7O0FBVUEsSUFBSUssVUFBVSxtQkFBQUMsQ0FBUSxHQUFSLENBQWQ7O0FBRUEsSUFBSUosV0FBV0ssdUJBQXVCRixPQUF2QixDQUFmOztBQUVBLElBQUlHLGFBQWEsbUJBQUFGLENBQVEsR0FBUixDQUFqQjs7QUFFQSxJQUFJRixjQUFjRyx1QkFBdUJDLFVBQXZCLENBQWxCOztBQUVBLFNBQVNELHNCQUFULENBQWdDRSxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLE9BQU9BLElBQUlDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUViLFNBQVNhLEdBQVgsRUFBckM7QUFBd0Q7O0FBRS9GLElBQUlmLGdCQUFnQkgsUUFBUUcsYUFBUixHQUF3QlEsU0FBU04sT0FBckQ7QUFDQSxJQUFJSCxtQkFBbUJGLFFBQVFFLGdCQUFSLEdBQTJCVyxZQUFZUixPQUE5RCIsImZpbGUiOiI3MzguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm9wZXJhdGlvblJlZHVjZXIgPSBleHBvcnRzLnBsYXllclJlZHVjZXIgPSB1bmRlZmluZWQ7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGFjdGlvbiA9IGFyZ3VtZW50c1sxXTtcblxuICByZXR1cm4ge1xuICAgIHBsYXllcjogKDAsIF9wbGF5ZXIyLmRlZmF1bHQpKHN0YXRlLnBsYXllciwgYWN0aW9uKSxcbiAgICBvcGVyYXRpb246ICgwLCBfb3BlcmF0aW9uMi5kZWZhdWx0KShzdGF0ZS5vcGVyYXRpb24sIGFjdGlvbilcbiAgfTtcbn07XG5cbnZhciBfcGxheWVyID0gcmVxdWlyZSgnLi9wbGF5ZXInKTtcblxudmFyIF9wbGF5ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGxheWVyKTtcblxudmFyIF9vcGVyYXRpb24gPSByZXF1aXJlKCcuL29wZXJhdGlvbicpO1xuXG52YXIgX29wZXJhdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9vcGVyYXRpb24pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcGxheWVyUmVkdWNlciA9IGV4cG9ydHMucGxheWVyUmVkdWNlciA9IF9wbGF5ZXIyLmRlZmF1bHQ7XG52YXIgb3BlcmF0aW9uUmVkdWNlciA9IGV4cG9ydHMub3BlcmF0aW9uUmVkdWNlciA9IF9vcGVyYXRpb24yLmRlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///738\\n')},739:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _PlaybackRateMenuButton = __webpack_require__(710);\\n\\nvar _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);\\n\\nvar _utils = __webpack_require__(708);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar PlaybackRate = function (_Component) {\\n  _inherits(PlaybackRate, _Component);\\n\\n  function PlaybackRate(props, context) {\\n    _classCallCheck(this, PlaybackRate);\\n\\n    var _this = _possibleConstructorReturn(this, (PlaybackRate.__proto__ || Object.getPrototypeOf(PlaybackRate)).call(this, props, context));\\n\\n    (0, _utils.deprecatedWarning)(\\'PlaybackRate\\', \\'PlaybackRateMenuButton\\');\\n    return _this;\\n  }\\n\\n  _createClass(PlaybackRate, [{\\n    key: \\'render\\',\\n    value: function render() {\\n      return _react2.default.createElement(_PlaybackRateMenuButton2.default, this.props);\\n    }\\n  }]);\\n\\n  return PlaybackRate;\\n}(_react.Component);\\n\\nexports.default = PlaybackRate;\\n\\nPlaybackRate.displayName = \\'PlaybackRate\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///739\\n')},740:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar USER_AGENT = typeof window !== 'undefined' && window.navigator ? window.navigator.userAgent : '';\\n// const webkitVersionMap = (/AppleWebKit\\\\/([\\\\d.]+)/i).exec(USER_AGENT);\\n// const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\\n\\n/*\\n * Device is an iPhone\\n *\\n * @type {Boolean}\\n * @constant\\n * @private\\n */\\nvar IS_IPAD = exports.IS_IPAD = /iPad/i.test(USER_AGENT);\\n\\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\\n// to identify iPhones, we need to exclude iPads.\\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\\nvar IS_IPHONE = exports.IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\\nvar IS_IPOD = exports.IS_IPOD = /iPod/i.test(USER_AGENT);\\nvar IS_IOS = exports.IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL3V0aWxzL2Jyb3dzZXIuanM/YTlkMiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVTRVJfQUdFTlQiLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJJU19JUEFEIiwidGVzdCIsIklTX0lQSE9ORSIsIklTX0lQT0QiLCJJU19JT1MiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsU0FBTztBQURvQyxDQUE3QztBQUdBLElBQUlDLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixXQUFsQixJQUFpQ0EsT0FBT0MsU0FBeEMsR0FBb0RELE9BQU9DLFNBQVAsQ0FBaUJDLFNBQXJFLEdBQWlGLEVBQWxHO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7OztBQU9BLElBQUlDLFVBQVVOLFFBQVFNLE9BQVIsR0FBa0IsUUFBUUMsSUFBUixDQUFhTCxVQUFiLENBQWhDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUlNLFlBQVlSLFFBQVFRLFNBQVIsR0FBb0IsVUFBVUQsSUFBVixDQUFlTCxVQUFmLEtBQThCLENBQUNJLE9BQW5FO0FBQ0EsSUFBSUcsVUFBVVQsUUFBUVMsT0FBUixHQUFrQixRQUFRRixJQUFSLENBQWFMLFVBQWIsQ0FBaEM7QUFDQSxJQUFJUSxTQUFTVixRQUFRVSxNQUFSLEdBQWlCRixhQUFhRixPQUFiLElBQXdCRyxPQUF0RCIsImZpbGUiOiI3NDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgVVNFUl9BR0VOVCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5uYXZpZ2F0b3IgPyB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCA6ICcnO1xuLy8gY29uc3Qgd2Via2l0VmVyc2lvbk1hcCA9ICgvQXBwbGVXZWJLaXRcXC8oW1xcZC5dKykvaSkuZXhlYyhVU0VSX0FHRU5UKTtcbi8vIGNvbnN0IGFwcGxlV2Via2l0VmVyc2lvbiA9IHdlYmtpdFZlcnNpb25NYXAgPyBwYXJzZUZsb2F0KHdlYmtpdFZlcnNpb25NYXAucG9wKCkpIDogbnVsbDtcblxuLypcbiAqIERldmljZSBpcyBhbiBpUGhvbmVcbiAqXG4gKiBAdHlwZSB7Qm9vbGVhbn1cbiAqIEBjb25zdGFudFxuICogQHByaXZhdGVcbiAqL1xudmFyIElTX0lQQUQgPSBleHBvcnRzLklTX0lQQUQgPSAvaVBhZC9pLnRlc3QoVVNFUl9BR0VOVCk7XG5cbi8vIFRoZSBGYWNlYm9vayBhcHAncyBVSVdlYlZpZXcgaWRlbnRpZmllcyBhcyBib3RoIGFuIGlQaG9uZSBhbmQgaVBhZCwgc29cbi8vIHRvIGlkZW50aWZ5IGlQaG9uZXMsIHdlIG5lZWQgdG8gZXhjbHVkZSBpUGFkcy5cbi8vIGh0dHA6Ly9hcnRzeS5naXRodWIuaW8vYmxvZy8yMDEyLzEwLzE4L3RoZS1wZXJpbHMtb2YtaW9zLXVzZXItYWdlbnQtc25pZmZpbmcvXG52YXIgSVNfSVBIT05FID0gZXhwb3J0cy5JU19JUEhPTkUgPSAvaVBob25lL2kudGVzdChVU0VSX0FHRU5UKSAmJiAhSVNfSVBBRDtcbnZhciBJU19JUE9EID0gZXhwb3J0cy5JU19JUE9EID0gL2lQb2QvaS50ZXN0KFVTRVJfQUdFTlQpO1xudmFyIElTX0lPUyA9IGV4cG9ydHMuSVNfSU9TID0gSVNfSVBIT05FIHx8IElTX0lQQUQgfHwgSVNfSVBPRDsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///740\\n\")},741:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  item: _propTypes2.default.object,\\n  index: _propTypes2.default.number,\\n  activateIndex: _propTypes2.default.number,\\n  onSelectItem: _propTypes2.default.func\\n};\\n\\nvar MenuItem = function (_Component) {\\n  _inherits(MenuItem, _Component);\\n\\n  function MenuItem(props, context) {\\n    _classCallCheck(this, MenuItem);\\n\\n    var _this = _possibleConstructorReturn(this, (MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(MenuItem, [{\\n    key: \\'handleClick\\',\\n    value: function handleClick() {\\n      var _props = this.props,\\n          index = _props.index,\\n          onSelectItem = _props.onSelectItem;\\n\\n      onSelectItem(index);\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var _props2 = this.props,\\n          item = _props2.item,\\n          index = _props2.index,\\n          activateIndex = _props2.activateIndex;\\n\\n      return _react2.default.createElement(\\'li\\', {\\n        className: (0, _classnames2.default)({\\n          \\'video-react-menu-item\\': true,\\n          \\'video-react-selected\\': index === activateIndex\\n        }),\\n        onClick: this.handleClick\\n      }, item.label, _react2.default.createElement(\\'span\\', { className: \\'video-react-control-text\\' }));\\n    }\\n  }]);\\n\\n  return MenuItem;\\n}(_react.Component);\\n\\nexports.default = MenuItem;\\n\\nMenuItem.propTypes = propTypes;\\nMenuItem.displayName = \\'MenuItem\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///741\\n')},742:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  children: _propTypes2.default.any\\n};\\n\\nvar Menu = function (_Component) {\\n  _inherits(Menu, _Component);\\n\\n  function Menu(props, context) {\\n    _classCallCheck(this, Menu);\\n\\n    var _this = _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(Menu, [{\\n    key: \\'handleClick\\',\\n    value: function handleClick(event) {\\n      event.preventDefault();\\n      // event.stopPropagation();\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      return _react2.default.createElement(\\'div\\', {\\n        className: \\'video-react-menu video-react-lock-showing\\',\\n        role: \\'presentation\\',\\n        onClick: this.handleClick\\n      }, _react2.default.createElement(\\'ul\\', { className: \\'video-react-menu-content\\' }, this.props.children));\\n    }\\n  }]);\\n\\n  return Menu;\\n}(_react.Component);\\n\\nexports.default = Menu;\\n\\nMenu.propTypes = propTypes;\\nMenu.displayName = \\'Menu\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///742\\n')},743:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _Menu = __webpack_require__(742);\\n\\nvar _Menu2 = _interopRequireDefault(_Menu);\\n\\nvar _MenuItem = __webpack_require__(741);\\n\\nvar _MenuItem2 = _interopRequireDefault(_MenuItem);\\n\\nvar _ClickableComponent = __webpack_require__(714);\\n\\nvar _ClickableComponent2 = _interopRequireDefault(_ClickableComponent);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  inline: _propTypes2.default.bool,\\n  items: _propTypes2.default.array,\\n  className: _propTypes2.default.string,\\n  onSelectItem: _propTypes2.default.func,\\n  children: _propTypes2.default.any,\\n  selectedIndex: _propTypes2.default.number\\n};\\n\\nvar MenuButton = function (_Component) {\\n  _inherits(MenuButton, _Component);\\n\\n  function MenuButton(props, context) {\\n    _classCallCheck(this, MenuButton);\\n\\n    var _this = _possibleConstructorReturn(this, (MenuButton.__proto__ || Object.getPrototypeOf(MenuButton)).call(this, props, context));\\n\\n    _this.state = {\\n      active: false,\\n      activateIndex: props.selectedIndex || 0\\n    };\\n\\n    _this.commitSelection = _this.commitSelection.bind(_this);\\n    _this.activateMenuItem = _this.activateMenuItem.bind(_this);\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    _this.renderMenu = _this.renderMenu.bind(_this);\\n    _this.handleFocus = _this.handleFocus.bind(_this);\\n    _this.handleBlur = _this.handleBlur.bind(_this);\\n    _this.handleUpArrow = _this.handleUpArrow.bind(_this);\\n    _this.handleDownArrow = _this.handleDownArrow.bind(_this);\\n    _this.handleEscape = _this.handleEscape.bind(_this);\\n    _this.handleReturn = _this.handleReturn.bind(_this);\\n    _this.handleTab = _this.handleTab.bind(_this);\\n    _this.handleKeyPress = _this.handleKeyPress.bind(_this);\\n    _this.handleSelectItem = _this.handleSelectItem.bind(_this);\\n    _this.handleIndexChange = _this.handleIndexChange.bind(_this);\\n    return _this;\\n  }\\n\\n  // componentDidUpdate(prevProps) {\\n  // }\\n\\n  _createClass(MenuButton, [{\\n    key: 'commitSelection',\\n    value: function commitSelection(index) {\\n      this.setState({\\n        activateIndex: index,\\n        active: false\\n      });\\n      this.handleIndexChange(index);\\n    }\\n  }, {\\n    key: 'activateMenuItem',\\n    value: function activateMenuItem(index) {\\n      this.setState({\\n        activateIndex: index\\n      });\\n      this.handleIndexChange(index);\\n    }\\n  }, {\\n    key: 'handleIndexChange',\\n    value: function handleIndexChange(index) {\\n      var onSelectItem = this.props.onSelectItem;\\n\\n      onSelectItem(index);\\n    }\\n  }, {\\n    key: 'handleClick',\\n    value: function handleClick() {\\n      this.setState({\\n        active: !this.state.active\\n      });\\n    }\\n  }, {\\n    key: 'handleFocus',\\n    value: function handleFocus() {\\n      document.addEventListener('keydown', this.handleKeyPress);\\n    }\\n  }, {\\n    key: 'handleBlur',\\n    value: function handleBlur() {\\n      this.setState({\\n        active: false\\n      });\\n      document.removeEventListener('keydown', this.handleKeyPress);\\n    }\\n  }, {\\n    key: 'handleUpArrow',\\n    value: function handleUpArrow(e) {\\n      var items = this.props.items;\\n\\n      if (this.state.active) {\\n        e.preventDefault();\\n        var newIndex = this.state.activateIndex - 1;\\n        if (newIndex < 0) {\\n          newIndex = items.length ? items.length - 1 : 0;\\n        }\\n        this.activateMenuItem(newIndex);\\n      }\\n    }\\n  }, {\\n    key: 'handleDownArrow',\\n    value: function handleDownArrow(e) {\\n      var items = this.props.items;\\n\\n      if (this.state.active) {\\n        e.preventDefault();\\n        var newIndex = this.state.activateIndex + 1;\\n        if (newIndex >= items.length) {\\n          newIndex = 0;\\n        }\\n        this.activateMenuItem(newIndex);\\n      }\\n    }\\n  }, {\\n    key: 'handleTab',\\n    value: function handleTab(e) {\\n      if (this.state.active) {\\n        e.preventDefault();\\n        this.commitSelection(this.state.activateIndex);\\n      }\\n    }\\n  }, {\\n    key: 'handleReturn',\\n    value: function handleReturn(e) {\\n      e.preventDefault();\\n      if (this.state.active) {\\n        this.commitSelection(this.state.activateIndex);\\n      } else {\\n        this.setState({\\n          active: true\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'handleEscape',\\n    value: function handleEscape() {\\n      this.setState({\\n        active: false,\\n        activateIndex: 0\\n      });\\n    }\\n  }, {\\n    key: 'handleKeyPress',\\n    value: function handleKeyPress(event) {\\n      // Escape (27) key\\n      if (event.which === 27) {\\n        this.handleEscape(event);\\n      } else if (event.which === 9) {\\n        // Tab (9) key\\n        this.handleTab(event);\\n      } else if (event.which === 13) {\\n        // Enter (13) key\\n        this.handleReturn(event);\\n      } else if (event.which === 38) {\\n        // Up (38) key\\n        this.handleUpArrow(event);\\n      } else if (event.which === 40) {\\n        // Down (40) key press\\n        this.handleDownArrow(event);\\n      }\\n    }\\n  }, {\\n    key: 'handleSelectItem',\\n    value: function handleSelectItem(i) {\\n      this.commitSelection(i);\\n    }\\n  }, {\\n    key: 'renderMenu',\\n    value: function renderMenu() {\\n      var _this2 = this;\\n\\n      if (!this.state.active) {\\n        return null;\\n      }\\n\\n      var items = this.props.items;\\n\\n      return _react2.default.createElement(_Menu2.default, null, items.map(function (item, i) {\\n        return _react2.default.createElement(_MenuItem2.default, {\\n          item: item,\\n          index: i,\\n          onSelectItem: _this2.handleSelectItem,\\n          activateIndex: _this2.state.activateIndex,\\n          key: 'item-' + i++\\n        });\\n      }));\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _this3 = this;\\n\\n      var _props = this.props,\\n          inline = _props.inline,\\n          className = _props.className;\\n\\n      return _react2.default.createElement(_ClickableComponent2.default, {\\n        className: (0, _classnames2.default)(className, {\\n          'video-react-menu-button-inline': !!inline,\\n          'video-react-menu-button-popup': !inline,\\n          'video-react-menu-button-active': this.state.active\\n        }, 'video-react-control video-react-button video-react-menu-button'),\\n        role: 'presentation',\\n        tabIndex: '0',\\n        ref: function ref(c) {\\n          _this3.menuButton = c;\\n        },\\n        onClick: this.handleClick,\\n        onFocus: this.handleFocus,\\n        onBlur: this.handleBlur\\n      }, this.props.children, this.renderMenu());\\n    }\\n  }]);\\n\\n  return MenuButton;\\n}(_react.Component);\\n\\nexports.default = MenuButton;\\n\\nMenuButton.propTypes = propTypes;\\nMenuButton.displayName = 'MenuButton';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///743\\n\")},744:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  percentage: _propTypes2.default.string,\\n  vertical: _propTypes2.default.bool,\\n  className: _propTypes2.default.string\\n};\\n\\nvar defaultProps = {\\n  percentage: '100%',\\n  vertical: false\\n};\\n\\nfunction VolumeLevel(_ref) {\\n  var percentage = _ref.percentage,\\n      vertical = _ref.vertical,\\n      className = _ref.className;\\n\\n  var style = {};\\n  if (vertical) {\\n    style.height = percentage;\\n  } else {\\n    style.width = percentage;\\n  }\\n\\n  return _react2.default.createElement('div', {\\n    className: (0, _classnames2.default)(className, 'video-react-volume-level'),\\n    style: style\\n  }, _react2.default.createElement('span', { className: 'video-react-control-text' }));\\n}\\n\\nVolumeLevel.propTypes = propTypes;\\nVolumeLevel.defaultProps = defaultProps;\\nVolumeLevel.displayName = 'VolumeLevel';\\nexports.default = VolumeLevel;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvdm9sdW1lLWNvbnRyb2wvVm9sdW1lTGV2ZWwuanM/OGQyMyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9wcm9wVHlwZXMiLCJyZXF1aXJlIiwiX3Byb3BUeXBlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9jbGFzc25hbWVzIiwiX2NsYXNzbmFtZXMyIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJwcm9wVHlwZXMiLCJwZXJjZW50YWdlIiwic3RyaW5nIiwidmVydGljYWwiLCJib29sIiwiY2xhc3NOYW1lIiwiZGVmYXVsdFByb3BzIiwiVm9sdW1lTGV2ZWwiLCJfcmVmIiwic3R5bGUiLCJoZWlnaHQiLCJ3aWR0aCIsImNyZWF0ZUVsZW1lbnQiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLGFBQWEsbUJBQUFDLENBQVEsQ0FBUixDQUFqQjs7QUFFQSxJQUFJQyxjQUFjQyx1QkFBdUJILFVBQXZCLENBQWxCOztBQUVBLElBQUlJLFNBQVMsbUJBQUFILENBQVEsQ0FBUixDQUFiOztBQUVBLElBQUlJLFVBQVVGLHVCQUF1QkMsTUFBdkIsQ0FBZDs7QUFFQSxJQUFJRSxjQUFjLG1CQUFBTCxDQUFRLENBQVIsQ0FBbEI7O0FBRUEsSUFBSU0sZUFBZUosdUJBQXVCRyxXQUF2QixDQUFuQjs7QUFFQSxTQUFTSCxzQkFBVCxDQUFnQ0ssR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxPQUFPQSxJQUFJQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QixFQUFFRSxTQUFTRixHQUFYLEVBQXJDO0FBQXdEOztBQUUvRixJQUFJRyxZQUFZO0FBQ2RDLGNBQVlWLFlBQVlRLE9BQVosQ0FBb0JHLE1BRGxCO0FBRWRDLFlBQVVaLFlBQVlRLE9BQVosQ0FBb0JLLElBRmhCO0FBR2RDLGFBQVdkLFlBQVlRLE9BQVosQ0FBb0JHO0FBSGpCLENBQWhCOztBQU1BLElBQUlJLGVBQWU7QUFDakJMLGNBQVksTUFESztBQUVqQkUsWUFBVTtBQUZPLENBQW5COztBQUtBLFNBQVNJLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCO0FBQ3pCLE1BQUlQLGFBQWFPLEtBQUtQLFVBQXRCO0FBQUEsTUFDSUUsV0FBV0ssS0FBS0wsUUFEcEI7QUFBQSxNQUVJRSxZQUFZRyxLQUFLSCxTQUZyQjs7QUFJQSxNQUFJSSxRQUFRLEVBQVo7QUFDQSxNQUFJTixRQUFKLEVBQWM7QUFDWk0sVUFBTUMsTUFBTixHQUFlVCxVQUFmO0FBQ0QsR0FGRCxNQUVPO0FBQ0xRLFVBQU1FLEtBQU4sR0FBY1YsVUFBZDtBQUNEOztBQUVELFNBQU9QLFFBQVFLLE9BQVIsQ0FBZ0JhLGFBQWhCLENBQ0wsS0FESyxFQUVMO0FBQ0VQLGVBQVcsQ0FBQyxHQUFHVCxhQUFhRyxPQUFqQixFQUEwQk0sU0FBMUIsRUFBcUMsMEJBQXJDLENBRGI7QUFFRUksV0FBT0E7QUFGVCxHQUZLLEVBTUxmLFFBQVFLLE9BQVIsQ0FBZ0JhLGFBQWhCLENBQThCLE1BQTlCLEVBQXNDLEVBQUVQLFdBQVcsMEJBQWIsRUFBdEMsQ0FOSyxDQUFQO0FBUUQ7O0FBRURFLFlBQVlQLFNBQVosR0FBd0JBLFNBQXhCO0FBQ0FPLFlBQVlELFlBQVosR0FBMkJBLFlBQTNCO0FBQ0FDLFlBQVlNLFdBQVosR0FBMEIsYUFBMUI7QUFDQTFCLFFBQVFZLE9BQVIsR0FBa0JRLFdBQWxCIiwiZmlsZSI6Ijc0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9jbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG52YXIgX2NsYXNzbmFtZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NuYW1lcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIHBlcmNlbnRhZ2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICB2ZXJ0aWNhbDogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBwZXJjZW50YWdlOiAnMTAwJScsXG4gIHZlcnRpY2FsOiBmYWxzZVxufTtcblxuZnVuY3Rpb24gVm9sdW1lTGV2ZWwoX3JlZikge1xuICB2YXIgcGVyY2VudGFnZSA9IF9yZWYucGVyY2VudGFnZSxcbiAgICAgIHZlcnRpY2FsID0gX3JlZi52ZXJ0aWNhbCxcbiAgICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lO1xuXG4gIHZhciBzdHlsZSA9IHt9O1xuICBpZiAodmVydGljYWwpIHtcbiAgICBzdHlsZS5oZWlnaHQgPSBwZXJjZW50YWdlO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLndpZHRoID0gcGVyY2VudGFnZTtcbiAgfVxuXG4gIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAnZGl2JyxcbiAgICB7XG4gICAgICBjbGFzc05hbWU6ICgwLCBfY2xhc3NuYW1lczIuZGVmYXVsdCkoY2xhc3NOYW1lLCAndmlkZW8tcmVhY3Qtdm9sdW1lLWxldmVsJyksXG4gICAgICBzdHlsZTogc3R5bGVcbiAgICB9LFxuICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCdzcGFuJywgeyBjbGFzc05hbWU6ICd2aWRlby1yZWFjdC1jb250cm9sLXRleHQnIH0pXG4gICk7XG59XG5cblZvbHVtZUxldmVsLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblZvbHVtZUxldmVsLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblZvbHVtZUxldmVsLmRpc3BsYXlOYW1lID0gJ1ZvbHVtZUxldmVsJztcbmV4cG9ydHMuZGVmYXVsdCA9IFZvbHVtZUxldmVsOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///744\\n\")},745:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _Slider = __webpack_require__(711);\\n\\nvar _Slider2 = _interopRequireDefault(_Slider);\\n\\nvar _VolumeLevel = __webpack_require__(744);\\n\\nvar _VolumeLevel2 = _interopRequireDefault(_VolumeLevel);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  actions: _propTypes2.default.object,\\n  player: _propTypes2.default.object,\\n  className: _propTypes2.default.string,\\n  onFocus: _propTypes2.default.func,\\n  onBlur: _propTypes2.default.func\\n};\\n\\nvar VolumeBar = function (_Component) {\\n  _inherits(VolumeBar, _Component);\\n\\n  function VolumeBar(props, context) {\\n    _classCallCheck(this, VolumeBar);\\n\\n    var _this = _possibleConstructorReturn(this, (VolumeBar.__proto__ || Object.getPrototypeOf(VolumeBar)).call(this, props, context));\\n\\n    _this.state = {\\n      percentage: '0%'\\n    };\\n\\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\\n    _this.handlePercentageChange = _this.handlePercentageChange.bind(_this);\\n    _this.checkMuted = _this.checkMuted.bind(_this);\\n    _this.getPercent = _this.getPercent.bind(_this);\\n    _this.stepForward = _this.stepForward.bind(_this);\\n    _this.stepBack = _this.stepBack.bind(_this);\\n    _this.handleFocus = _this.handleFocus.bind(_this);\\n    _this.handleBlur = _this.handleBlur.bind(_this);\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(VolumeBar, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {}\\n  }, {\\n    key: 'getPercent',\\n    value: function getPercent() {\\n      var player = this.props.player;\\n\\n      if (player.muted) {\\n        return 0;\\n      }\\n      return player.volume;\\n    }\\n  }, {\\n    key: 'checkMuted',\\n    value: function checkMuted() {\\n      var _props = this.props,\\n          player = _props.player,\\n          actions = _props.actions;\\n\\n      if (player.muted) {\\n        actions.mute(false);\\n      }\\n    }\\n  }, {\\n    key: 'handleMouseMove',\\n    value: function handleMouseMove(event) {\\n      var actions = this.props.actions;\\n\\n      this.checkMuted();\\n      var distance = this.slider.calculateDistance(event);\\n      actions.changeVolume(distance);\\n    }\\n  }, {\\n    key: 'stepForward',\\n    value: function stepForward() {\\n      var _props2 = this.props,\\n          player = _props2.player,\\n          actions = _props2.actions;\\n\\n      this.checkMuted();\\n      actions.changeVolume(player.volume + 0.1);\\n    }\\n  }, {\\n    key: 'stepBack',\\n    value: function stepBack() {\\n      var _props3 = this.props,\\n          player = _props3.player,\\n          actions = _props3.actions;\\n\\n      this.checkMuted();\\n      actions.changeVolume(player.volume - 0.1);\\n    }\\n  }, {\\n    key: 'handleFocus',\\n    value: function handleFocus(e) {\\n      if (this.props.onFocus) {\\n        this.props.onFocus(e);\\n      }\\n    }\\n  }, {\\n    key: 'handleBlur',\\n    value: function handleBlur(e) {\\n      if (this.props.onBlur) {\\n        this.props.onBlur(e);\\n      }\\n    }\\n  }, {\\n    key: 'handlePercentageChange',\\n    value: function handlePercentageChange(percentage) {\\n      if (percentage !== this.state.percentage) {\\n        this.setState({\\n          percentage: percentage\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'handleClick',\\n    value: function handleClick(event) {\\n      event.stopPropagation();\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _props4 = this.props,\\n          player = _props4.player,\\n          className = _props4.className;\\n\\n      var volume = (player.volume * 100).toFixed(2);\\n      return _react2.default.createElement(_Slider2.default, _extends({\\n        ref: function ref(c) {\\n          _this2.slider = c;\\n        },\\n        label: 'volume level',\\n        valuenow: volume,\\n        valuetext: volume + '%',\\n        onMouseMove: this.handleMouseMove,\\n        onFocus: this.handleFocus,\\n        onBlur: this.handleBlur,\\n        onClick: this.handleClick,\\n        sliderActive: this.handleFocus,\\n        sliderInactive: this.handleBlur,\\n        getPercent: this.getPercent,\\n        onPercentageChange: this.handlePercentageChange,\\n        stepForward: this.stepForward,\\n        stepBack: this.stepBack\\n      }, this.props, {\\n        className: (0, _classnames2.default)(className, 'video-react-volume-bar video-react-slider-bar')\\n      }), _react2.default.createElement(_VolumeLevel2.default, this.props));\\n    }\\n  }]);\\n\\n  return VolumeBar;\\n}(_react.Component);\\n\\nVolumeBar.propTypes = propTypes;\\nVolumeBar.displayName = 'VolumeBar';\\n\\nexports.default = VolumeBar;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///745\\n\")},746:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\"Cannot call a class as a function\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\");\\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \"function\" && superClass !== null) {\\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  player: _propTypes2.default.object,\\n  children: _propTypes2.default.any\\n};\\n\\nvar Popup = function (_Component) {\\n  _inherits(Popup, _Component);\\n\\n  function Popup(props, context) {\\n    _classCallCheck(this, Popup);\\n\\n    var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props, context));\\n\\n    _this.handleClick = _this.handleClick.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(Popup, [{\\n    key: \\'handleClick\\',\\n    value: function handleClick(event) {\\n      event.preventDefault();\\n      // event.stopPropagation();\\n    }\\n  }, {\\n    key: \\'render\\',\\n    value: function render() {\\n      var children = this.props.children;\\n\\n      return _react2.default.createElement(\\'div\\', {\\n        className: \\'video-react-menu\\',\\n        onClick: this.handleClick\\n      }, _react2.default.createElement(\\'div\\', { className: \\'video-react-menu-content\\' }, children));\\n    }\\n  }]);\\n\\n  return Popup;\\n}(_react.Component);\\n\\nexports.default = Popup;\\n\\nPopup.propTypes = propTypes;\\nPopup.displayName = \\'Popup\\';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///746\\n')},747:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nexports.default = PopupButton;\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _ClickableComponent = __webpack_require__(714);\\n\\nvar _ClickableComponent2 = _interopRequireDefault(_ClickableComponent);\\n\\nvar _Popup = __webpack_require__(746);\\n\\nvar _Popup2 = _interopRequireDefault(_Popup);\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nvar propTypes = {\\n  inline: _propTypes2.default.bool,\\n  onClick: _propTypes2.default.func.isRequired,\\n  onFocus: _propTypes2.default.func,\\n  onBlur: _propTypes2.default.func,\\n  className: _propTypes2.default.string\\n};\\n\\nvar defaultProps = {\\n  inline: true\\n};\\n\\nfunction PopupButton(props) {\\n  var inline = props.inline,\\n      className = props.className;\\n\\n  var ps = _extends({}, props);\\n  delete ps.children;\\n  delete ps.inline;\\n  delete ps.className;\\n  return _react2.default.createElement(_ClickableComponent2.default, _extends({\\n    className: (0, _classnames2.default)(className, {\\n      'video-react-menu-button-inline': !!inline,\\n      'video-react-menu-button-popup': !inline\\n    }, 'video-react-control video-react-button video-react-menu-button')\\n  }, ps), _react2.default.createElement(_Popup2.default, props));\\n}\\n\\nPopupButton.propTypes = propTypes;\\nPopupButton.defaultProps = defaultProps;\\nPopupButton.displayName = 'PopupButton';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL2NvbXBvbmVudHMvcG9wdXAvUG9wdXBCdXR0b24uanM/NDA5YiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlZmF1bHQiLCJQb3B1cEJ1dHRvbiIsIl9wcm9wVHlwZXMiLCJyZXF1aXJlIiwiX3Byb3BUeXBlczIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0IiwiX3JlYWN0MiIsIl9jbGFzc25hbWVzIiwiX2NsYXNzbmFtZXMyIiwiX0NsaWNrYWJsZUNvbXBvbmVudCIsIl9DbGlja2FibGVDb21wb25lbnQyIiwiX1BvcHVwIiwiX1BvcHVwMiIsIm9iaiIsIl9fZXNNb2R1bGUiLCJwcm9wVHlwZXMiLCJpbmxpbmUiLCJib29sIiwib25DbGljayIsImZ1bmMiLCJpc1JlcXVpcmVkIiwib25Gb2N1cyIsIm9uQmx1ciIsImNsYXNzTmFtZSIsInN0cmluZyIsImRlZmF1bHRQcm9wcyIsInByb3BzIiwicHMiLCJjaGlsZHJlbiIsImNyZWF0ZUVsZW1lbnQiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLFdBQVdKLE9BQU9LLE1BQVAsSUFBaUIsVUFBVUMsTUFBVixFQUFrQjtBQUFFLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJQyxVQUFVQyxNQUE5QixFQUFzQ0YsR0FBdEMsRUFBMkM7QUFBRSxRQUFJRyxTQUFTRixVQUFVRCxDQUFWLENBQWIsQ0FBMkIsS0FBSyxJQUFJSSxHQUFULElBQWdCRCxNQUFoQixFQUF3QjtBQUFFLFVBQUlWLE9BQU9ZLFNBQVAsQ0FBaUJDLGNBQWpCLENBQWdDQyxJQUFoQyxDQUFxQ0osTUFBckMsRUFBNkNDLEdBQTdDLENBQUosRUFBdUQ7QUFBRUwsZUFBT0ssR0FBUCxJQUFjRCxPQUFPQyxHQUFQLENBQWQ7QUFBNEI7QUFBRTtBQUFFLEdBQUMsT0FBT0wsTUFBUDtBQUFnQixDQUFoUTs7QUFFQUosUUFBUWEsT0FBUixHQUFrQkMsV0FBbEI7O0FBRUEsSUFBSUMsYUFBYSxtQkFBQUMsQ0FBUSxDQUFSLENBQWpCOztBQUVBLElBQUlDLGNBQWNDLHVCQUF1QkgsVUFBdkIsQ0FBbEI7O0FBRUEsSUFBSUksU0FBUyxtQkFBQUgsQ0FBUSxDQUFSLENBQWI7O0FBRUEsSUFBSUksVUFBVUYsdUJBQXVCQyxNQUF2QixDQUFkOztBQUVBLElBQUlFLGNBQWMsbUJBQUFMLENBQVEsQ0FBUixDQUFsQjs7QUFFQSxJQUFJTSxlQUFlSix1QkFBdUJHLFdBQXZCLENBQW5COztBQUVBLElBQUlFLHNCQUFzQixtQkFBQVAsQ0FBUSxHQUFSLENBQTFCOztBQUVBLElBQUlRLHVCQUF1Qk4sdUJBQXVCSyxtQkFBdkIsQ0FBM0I7O0FBRUEsSUFBSUUsU0FBUyxtQkFBQVQsQ0FBUSxHQUFSLENBQWI7O0FBRUEsSUFBSVUsVUFBVVIsdUJBQXVCTyxNQUF2QixDQUFkOztBQUVBLFNBQVNQLHNCQUFULENBQWdDUyxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLE9BQU9BLElBQUlDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCLEVBQUVkLFNBQVNjLEdBQVgsRUFBckM7QUFBd0Q7O0FBRS9GLElBQUlFLFlBQVk7QUFDZEMsVUFBUWIsWUFBWUosT0FBWixDQUFvQmtCLElBRGQ7QUFFZEMsV0FBU2YsWUFBWUosT0FBWixDQUFvQm9CLElBQXBCLENBQXlCQyxVQUZwQjtBQUdkQyxXQUFTbEIsWUFBWUosT0FBWixDQUFvQm9CLElBSGY7QUFJZEcsVUFBUW5CLFlBQVlKLE9BQVosQ0FBb0JvQixJQUpkO0FBS2RJLGFBQVdwQixZQUFZSixPQUFaLENBQW9CeUI7QUFMakIsQ0FBaEI7O0FBUUEsSUFBSUMsZUFBZTtBQUNqQlQsVUFBUTtBQURTLENBQW5COztBQUlBLFNBQVNoQixXQUFULENBQXFCMEIsS0FBckIsRUFBNEI7QUFDMUIsTUFBSVYsU0FBU1UsTUFBTVYsTUFBbkI7QUFBQSxNQUNJTyxZQUFZRyxNQUFNSCxTQUR0Qjs7QUFHQSxNQUFJSSxLQUFLdkMsU0FBUyxFQUFULEVBQWFzQyxLQUFiLENBQVQ7QUFDQSxTQUFPQyxHQUFHQyxRQUFWO0FBQ0EsU0FBT0QsR0FBR1gsTUFBVjtBQUNBLFNBQU9XLEdBQUdKLFNBQVY7QUFDQSxTQUFPakIsUUFBUVAsT0FBUixDQUFnQjhCLGFBQWhCLENBQ0xuQixxQkFBcUJYLE9BRGhCLEVBRUxYLFNBQVM7QUFDUG1DLGVBQVcsQ0FBQyxHQUFHZixhQUFhVCxPQUFqQixFQUEwQndCLFNBQTFCLEVBQXFDO0FBQzlDLHdDQUFrQyxDQUFDLENBQUNQLE1BRFU7QUFFOUMsdUNBQWlDLENBQUNBO0FBRlksS0FBckMsRUFHUixnRUFIUTtBQURKLEdBQVQsRUFLR1csRUFMSCxDQUZLLEVBUUxyQixRQUFRUCxPQUFSLENBQWdCOEIsYUFBaEIsQ0FBOEJqQixRQUFRYixPQUF0QyxFQUErQzJCLEtBQS9DLENBUkssQ0FBUDtBQVVEOztBQUVEMUIsWUFBWWUsU0FBWixHQUF3QkEsU0FBeEI7QUFDQWYsWUFBWXlCLFlBQVosR0FBMkJBLFlBQTNCO0FBQ0F6QixZQUFZOEIsV0FBWixHQUEwQixhQUExQiIsImZpbGUiOiI3NDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFBvcHVwQnV0dG9uO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX2NsYXNzbmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbnZhciBfY2xhc3NuYW1lczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc25hbWVzKTtcblxudmFyIF9DbGlja2FibGVDb21wb25lbnQgPSByZXF1aXJlKCcuLi9DbGlja2FibGVDb21wb25lbnQnKTtcblxudmFyIF9DbGlja2FibGVDb21wb25lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfQ2xpY2thYmxlQ29tcG9uZW50KTtcblxudmFyIF9Qb3B1cCA9IHJlcXVpcmUoJy4vUG9wdXAnKTtcblxudmFyIF9Qb3B1cDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Qb3B1cCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wVHlwZXMgPSB7XG4gIGlubGluZTogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBvbkNsaWNrOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25Gb2N1czogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBvbkJsdXI6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgY2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufTtcblxudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgaW5saW5lOiB0cnVlXG59O1xuXG5mdW5jdGlvbiBQb3B1cEJ1dHRvbihwcm9wcykge1xuICB2YXIgaW5saW5lID0gcHJvcHMuaW5saW5lLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lO1xuXG4gIHZhciBwcyA9IF9leHRlbmRzKHt9LCBwcm9wcyk7XG4gIGRlbGV0ZSBwcy5jaGlsZHJlbjtcbiAgZGVsZXRlIHBzLmlubGluZTtcbiAgZGVsZXRlIHBzLmNsYXNzTmFtZTtcbiAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgIF9DbGlja2FibGVDb21wb25lbnQyLmRlZmF1bHQsXG4gICAgX2V4dGVuZHMoe1xuICAgICAgY2xhc3NOYW1lOiAoMCwgX2NsYXNzbmFtZXMyLmRlZmF1bHQpKGNsYXNzTmFtZSwge1xuICAgICAgICAndmlkZW8tcmVhY3QtbWVudS1idXR0b24taW5saW5lJzogISFpbmxpbmUsXG4gICAgICAgICd2aWRlby1yZWFjdC1tZW51LWJ1dHRvbi1wb3B1cCc6ICFpbmxpbmVcbiAgICAgIH0sICd2aWRlby1yZWFjdC1jb250cm9sIHZpZGVvLXJlYWN0LWJ1dHRvbiB2aWRlby1yZWFjdC1tZW51LWJ1dHRvbicpXG4gICAgfSwgcHMpLFxuICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Qb3B1cDIuZGVmYXVsdCwgcHJvcHMpXG4gICk7XG59XG5cblBvcHVwQnV0dG9uLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblBvcHVwQnV0dG9uLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblBvcHVwQnV0dG9uLmRpc3BsYXlOYW1lID0gJ1BvcHVwQnV0dG9uJzsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///747\\n\")},748:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nexports.operation = operation;\\n\\nvar _player = __webpack_require__(709);\\n\\nvar initialState = {\\n  count: 0,\\n  operation: {\\n    action: '',\\n    source: ''\\n  }\\n};\\n\\nfunction operation() {\\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\\n  var action = arguments[1];\\n\\n  switch (action.type) {\\n    case _player.OPERATE:\\n      return _extends({}, state, {\\n        count: state.count + 1,\\n        operation: _extends({}, state.operation, action.operation)\\n      });\\n    default:\\n      return state;\\n  }\\n}\\n\\nexports.default = operation;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL3JlZHVjZXJzL29wZXJhdGlvbi5qcz9kZTcyIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwib3BlcmF0aW9uIiwiX3BsYXllciIsInJlcXVpcmUiLCJpbml0aWFsU3RhdGUiLCJjb3VudCIsImFjdGlvbiIsInN0YXRlIiwidW5kZWZpbmVkIiwidHlwZSIsIk9QRVJBVEUiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBT0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLFNBQU87QUFEb0MsQ0FBN0M7O0FBSUEsSUFBSUMsV0FBV0osT0FBT0ssTUFBUCxJQUFpQixVQUFVQyxNQUFWLEVBQWtCO0FBQUUsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlDLFVBQVVDLE1BQTlCLEVBQXNDRixHQUF0QyxFQUEyQztBQUFFLFFBQUlHLFNBQVNGLFVBQVVELENBQVYsQ0FBYixDQUEyQixLQUFLLElBQUlJLEdBQVQsSUFBZ0JELE1BQWhCLEVBQXdCO0FBQUUsVUFBSVYsT0FBT1ksU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDSixNQUFyQyxFQUE2Q0MsR0FBN0MsQ0FBSixFQUF1RDtBQUFFTCxlQUFPSyxHQUFQLElBQWNELE9BQU9DLEdBQVAsQ0FBZDtBQUE0QjtBQUFFO0FBQUUsR0FBQyxPQUFPTCxNQUFQO0FBQWdCLENBQWhROztBQUVBSixRQUFRYSxTQUFSLEdBQW9CQSxTQUFwQjs7QUFFQSxJQUFJQyxVQUFVLG1CQUFBQyxDQUFRLEdBQVIsQ0FBZDs7QUFFQSxJQUFJQyxlQUFlO0FBQ2pCQyxTQUFPLENBRFU7QUFFakJKLGFBQVc7QUFDVEssWUFBUSxFQURDO0FBRVRWLFlBQVE7QUFGQztBQUZNLENBQW5COztBQVFBLFNBQVNLLFNBQVQsR0FBcUI7QUFDbkIsTUFBSU0sUUFBUWIsVUFBVUMsTUFBVixHQUFtQixDQUFuQixJQUF3QkQsVUFBVSxDQUFWLE1BQWlCYyxTQUF6QyxHQUFxRGQsVUFBVSxDQUFWLENBQXJELEdBQW9FVSxZQUFoRjtBQUNBLE1BQUlFLFNBQVNaLFVBQVUsQ0FBVixDQUFiOztBQUVBLFVBQVFZLE9BQU9HLElBQWY7QUFDRSxTQUFLUCxRQUFRUSxPQUFiO0FBQ0UsYUFBT3BCLFNBQVMsRUFBVCxFQUFhaUIsS0FBYixFQUFvQjtBQUN6QkYsZUFBT0UsTUFBTUYsS0FBTixHQUFjLENBREk7QUFFekJKLG1CQUFXWCxTQUFTLEVBQVQsRUFBYWlCLE1BQU1OLFNBQW5CLEVBQThCSyxPQUFPTCxTQUFyQztBQUZjLE9BQXBCLENBQVA7QUFJRjtBQUNFLGFBQU9NLEtBQVA7QUFQSjtBQVNEOztBQUVEbkIsUUFBUXVCLE9BQVIsR0FBa0JWLFNBQWxCIiwiZmlsZSI6Ijc0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZXhwb3J0cy5vcGVyYXRpb24gPSBvcGVyYXRpb247XG5cbnZhciBfcGxheWVyID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9wbGF5ZXInKTtcblxudmFyIGluaXRpYWxTdGF0ZSA9IHtcbiAgY291bnQ6IDAsXG4gIG9wZXJhdGlvbjoge1xuICAgIGFjdGlvbjogJycsXG4gICAgc291cmNlOiAnJ1xuICB9XG59O1xuXG5mdW5jdGlvbiBvcGVyYXRpb24oKSB7XG4gIHZhciBzdGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogaW5pdGlhbFN0YXRlO1xuICB2YXIgYWN0aW9uID0gYXJndW1lbnRzWzFdO1xuXG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIF9wbGF5ZXIuT1BFUkFURTpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgY291bnQ6IHN0YXRlLmNvdW50ICsgMSxcbiAgICAgICAgb3BlcmF0aW9uOiBfZXh0ZW5kcyh7fSwgc3RhdGUub3BlcmF0aW9uLCBhY3Rpb24ub3BlcmF0aW9uKVxuICAgICAgfSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufVxuXG5leHBvcnRzLmRlZmF1bHQgPSBvcGVyYXRpb247Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///748\\n\")},749:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nexports.player = player;\\n\\nvar _video = __webpack_require__(713);\\n\\nvar _player = __webpack_require__(709);\\n\\nvar initialState = {\\n  currentSrc: null,\\n  duration: 0,\\n  currentTime: 0,\\n  seekingTime: 0,\\n  buffered: null,\\n  waiting: false,\\n  seeking: false,\\n  paused: true,\\n  autoPaused: false,\\n  ended: false,\\n  playbackRate: 1,\\n  muted: false,\\n  volume: 1,\\n  readyState: 0,\\n  networkState: 0,\\n  videoWidth: 0,\\n  videoHeight: 0,\\n  hasStarted: false,\\n  userActivity: true,\\n  isActive: false,\\n  isFullscreen: false\\n};\\n\\nfunction player() {\\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\\n  var action = arguments[1];\\n\\n  switch (action.type) {\\n    case _player.USER_ACTIVATE:\\n      return _extends({}, state, {\\n        userActivity: action.activity\\n      });\\n    case _player.PLAYER_ACTIVATE:\\n      return _extends({}, state, {\\n        isActive: action.activity\\n      });\\n    case _player.FULLSCREEN_CHANGE:\\n      return _extends({}, state, {\\n        isFullscreen: !!action.isFullscreen\\n      });\\n    case _video.SEEKING_TIME:\\n      return _extends({}, state, {\\n        seekingTime: action.time\\n      });\\n    case _video.END_SEEKING:\\n      return _extends({}, state, {\\n        seekingTime: 0\\n      });\\n    case _video.LOAD_START:\\n      return _extends({}, state, action.videoProps, {\\n        hasStarted: false,\\n        ended: false\\n      });\\n    case _video.CAN_PLAY:\\n      return _extends({}, state, action.videoProps, {\\n        waiting: false\\n      });\\n    case _video.WAITING:\\n      return _extends({}, state, action.videoProps, {\\n        waiting: true\\n      });\\n    case _video.CAN_PLAY_THROUGH:\\n    case _video.PLAYING:\\n      return _extends({}, state, action.videoProps, {\\n        waiting: false\\n      });\\n    case _video.PLAY:\\n      return _extends({}, state, action.videoProps, {\\n        ended: false,\\n        paused: false,\\n        autoPaused: false,\\n        waiting: false,\\n        hasStarted: true\\n      });\\n    case _video.PAUSE:\\n      return _extends({}, state, action.videoProps, {\\n        paused: true\\n      });\\n    case _video.END:\\n      return _extends({}, state, action.videoProps, {\\n        ended: true\\n      });\\n    case _video.SEEKING:\\n      return _extends({}, state, action.videoProps, {\\n        seeking: true\\n      });\\n    case _video.SEEKED:\\n      return _extends({}, state, action.videoProps, {\\n        seeking: false\\n      });\\n    case _video.ERROR:\\n      return _extends({}, state, action.videoProps, {\\n        error: 'UNKNOWN ERROR',\\n        ended: true\\n      });\\n    case _video.DURATION_CHANGE:\\n    case _video.TIME_UPDATE:\\n    case _video.VOLUME_CHANGE:\\n    case _video.PROGRESS_CHANGE:\\n    case _video.RATE_CHANGE:\\n    case _video.SUSPEND:\\n    case _video.ABORT:\\n    case _video.EMPTIED:\\n    case _video.STALLED:\\n    case _video.LOADED_META_DATA:\\n    case _video.LOADED_DATA:\\n    case _video.RESIZE:\\n      var newState = _extends({}, state, action.videoProps);\\n      if (action.videoProps.paused === false) {\\n        newState.hasStarted = true;\\n        newState.waiting = false;\\n      }\\n      return newState;\\n    default:\\n      return state;\\n  }\\n}\\n\\nexports.default = player;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///749\\n\")},750:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n\\tvalue: true\\n});\\nexports.default = symbolObservablePonyfill;\\nfunction symbolObservablePonyfill(root) {\\n\\tvar result;\\n\\tvar _Symbol = root.Symbol;\\n\\n\\tif (typeof _Symbol === 'function') {\\n\\t\\tif (_Symbol.observable) {\\n\\t\\t\\tresult = _Symbol.observable;\\n\\t\\t} else {\\n\\t\\t\\tresult = _Symbol('observable');\\n\\t\\t\\t_Symbol.observable = result;\\n\\t\\t}\\n\\t} else {\\n\\t\\tresult = '@@observable';\\n\\t}\\n\\n\\treturn result;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL3BvbnlmaWxsLmpzP2QzMTEiXSwibmFtZXMiOlsic3ltYm9sT2JzZXJ2YWJsZVBvbnlmaWxsIiwicm9vdCIsInJlc3VsdCIsIlN5bWJvbCIsIm9ic2VydmFibGUiXSwibWFwcGluZ3MiOiI7Ozs7O2tCQUF3QkEsd0I7QUFBVCxTQUFTQSx3QkFBVCxDQUFrQ0MsSUFBbEMsRUFBd0M7QUFDdEQsS0FBSUMsTUFBSjtBQUNBLEtBQUlDLFVBQVNGLEtBQUtFLE1BQWxCOztBQUVBLEtBQUksT0FBT0EsT0FBUCxLQUFrQixVQUF0QixFQUFrQztBQUNqQyxNQUFJQSxRQUFPQyxVQUFYLEVBQXVCO0FBQ3RCRixZQUFTQyxRQUFPQyxVQUFoQjtBQUNBLEdBRkQsTUFFTztBQUNORixZQUFTQyxRQUFPLFlBQVAsQ0FBVDtBQUNBQSxXQUFPQyxVQUFQLEdBQW9CRixNQUFwQjtBQUNBO0FBQ0QsRUFQRCxNQU9PO0FBQ05BLFdBQVMsY0FBVDtBQUNBOztBQUVELFFBQU9BLE1BQVA7QUFDQSIsImZpbGUiOiI3NTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwocm9vdCkge1xuXHR2YXIgcmVzdWx0O1xuXHR2YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cblx0aWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicpIHtcblx0XHRpZiAoU3ltYm9sLm9ic2VydmFibGUpIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbC5vYnNlcnZhYmxlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2woJ29ic2VydmFibGUnKTtcblx0XHRcdFN5bWJvbC5vYnNlcnZhYmxlID0gcmVzdWx0O1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRyZXN1bHQgPSAnQEBvYnNlcnZhYmxlJztcblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///750\\n\")},751:function(module,exports,__webpack_require__){\"use strict\";eval(\"/* WEBPACK VAR INJECTION */(function(global, module) {\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _ponyfill = __webpack_require__(750);\\n\\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar root; /* global window */\\n\\n\\nif (typeof self !== 'undefined') {\\n  root = self;\\n} else if (typeof window !== 'undefined') {\\n  root = window;\\n} else if (typeof global !== 'undefined') {\\n  root = global;\\n} else if (true) {\\n  root = module;\\n} else {}\\n\\nvar result = (0, _ponyfill2.default)(root);\\nexports.default = result;\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(124), __webpack_require__(278)(module)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL2luZGV4LmpzPzBkYjkiXSwibmFtZXMiOlsicm9vdCIsInNlbGYiLCJ3aW5kb3ciLCJnbG9iYWwiLCJtb2R1bGUiLCJyZXN1bHQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBOzs7Ozs7QUFFQSxJQUFJQSxJQUFKLEMsQ0FIQTs7O0FBS0EsSUFBSSxPQUFPQyxJQUFQLEtBQWdCLFdBQXBCLEVBQWlDO0FBQy9CRCxTQUFPQyxJQUFQO0FBQ0QsQ0FGRCxNQUVPLElBQUksT0FBT0MsTUFBUCxLQUFrQixXQUF0QixFQUFtQztBQUN4Q0YsU0FBT0UsTUFBUDtBQUNELENBRk0sTUFFQSxJQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7QUFDeENILFNBQU9HLE1BQVA7QUFDRCxDQUZNLE1BRUEsSUFBSSxJQUFKLEVBQW1DO0FBQ3hDSCxTQUFPSSxNQUFQO0FBQ0QsQ0FGTSxNQUVBLEVBRU47O0FBRUQsSUFBSUMsU0FBUyx3QkFBU0wsSUFBVCxDQUFiO2tCQUNlSyxNIiwiZmlsZSI6Ijc1MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCB3aW5kb3cgKi9cbmltcG9ydCBwb255ZmlsbCBmcm9tICcuL3BvbnlmaWxsLmpzJztcblxudmFyIHJvb3Q7XG5cbmlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHNlbGY7XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSB3aW5kb3c7XG59IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBnbG9iYWw7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBtb2R1bGU7XG59IGVsc2Uge1xuICByb290ID0gRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbn1cblxudmFyIHJlc3VsdCA9IHBvbnlmaWxsKHJvb3QpO1xuZXhwb3J0IGRlZmF1bHQgcmVzdWx0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///751\\n\")},752:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.__DO_NOT_USE__ActionTypes = exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\\n\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _symbolObservable = __webpack_require__(751);\\n\\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * These are private action types reserved by Redux.\\n * For any unknown actions, you must return the current state.\\n * If the current state is undefined, you must return the initial state.\\n * Do not reference these action types directly in your code.\\n */\\nvar ActionTypes = {\\n  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),\\n  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')\\n};\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n  return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\\n} : function (obj) {\\n  return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\\n};\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\n/**\\n * @param {any} obj The object to inspect.\\n * @returns {boolean} True if the argument appears to be a plain object.\\n */\\nfunction isPlainObject(obj) {\\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;\\n\\n  var proto = obj;\\n  while (Object.getPrototypeOf(proto) !== null) {\\n    proto = Object.getPrototypeOf(proto);\\n  }\\n\\n  return Object.getPrototypeOf(obj) === proto;\\n}\\n\\n/**\\n * Creates a Redux store that holds the state tree.\\n * The only way to change the data in the store is to call `dispatch()` on it.\\n *\\n * There should only be a single store in your app. To specify how different\\n * parts of the state tree respond to actions, you may combine several reducers\\n * into a single reducer function by using `combineReducers`.\\n *\\n * @param {Function} reducer A function that returns the next state tree, given\\n * the current state tree and the action to handle.\\n *\\n * @param {any} [preloadedState] The initial state. You may optionally specify it\\n * to hydrate the state from the server in universal apps, or to restore a\\n * previously serialized user session.\\n * If you use `combineReducers` to produce the root reducer function, this must be\\n * an object with the same shape as `combineReducers` keys.\\n *\\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\\n * to enhance the store with third-party capabilities such as middleware,\\n * time travel, persistence, etc. The only store enhancer that ships with Redux\\n * is `applyMiddleware()`.\\n *\\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\\n * and subscribe to changes.\\n */\\nfunction createStore(reducer, preloadedState, enhancer) {\\n  var _ref2;\\n\\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\\n    enhancer = preloadedState;\\n    preloadedState = undefined;\\n  }\\n\\n  if (typeof enhancer !== 'undefined') {\\n    if (typeof enhancer !== 'function') {\\n      throw new Error('Expected the enhancer to be a function.');\\n    }\\n\\n    return enhancer(createStore)(reducer, preloadedState);\\n  }\\n\\n  if (typeof reducer !== 'function') {\\n    throw new Error('Expected the reducer to be a function.');\\n  }\\n\\n  var currentReducer = reducer;\\n  var currentState = preloadedState;\\n  var currentListeners = [];\\n  var nextListeners = currentListeners;\\n  var isDispatching = false;\\n\\n  function ensureCanMutateNextListeners() {\\n    if (nextListeners === currentListeners) {\\n      nextListeners = currentListeners.slice();\\n    }\\n  }\\n\\n  /**\\n   * Reads the state tree managed by the store.\\n   *\\n   * @returns {any} The current state tree of your application.\\n   */\\n  function getState() {\\n    if (isDispatching) {\\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\\n    }\\n\\n    return currentState;\\n  }\\n\\n  /**\\n   * Adds a change listener. It will be called any time an action is dispatched,\\n   * and some part of the state tree may potentially have changed. You may then\\n   * call `getState()` to read the current state tree inside the callback.\\n   *\\n   * You may call `dispatch()` from a change listener, with the following\\n   * caveats:\\n   *\\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\\n   * will not have any effect on the `dispatch()` that is currently in progress.\\n   * However, the next `dispatch()` call, whether nested or not, will use a more\\n   * recent snapshot of the subscription list.\\n   *\\n   * 2. The listener should not expect to see all state changes, as the state\\n   * might have been updated multiple times during a nested `dispatch()` before\\n   * the listener is called. It is, however, guaranteed that all subscribers\\n   * registered before the `dispatch()` started will be called with the latest\\n   * state by the time it exits.\\n   *\\n   * @param {Function} listener A callback to be invoked on every dispatch.\\n   * @returns {Function} A function to remove this change listener.\\n   */\\n  function subscribe(listener) {\\n    if (typeof listener !== 'function') {\\n      throw new Error('Expected the listener to be a function.');\\n    }\\n\\n    if (isDispatching) {\\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\\n    }\\n\\n    var isSubscribed = true;\\n\\n    ensureCanMutateNextListeners();\\n    nextListeners.push(listener);\\n\\n    return function unsubscribe() {\\n      if (!isSubscribed) {\\n        return;\\n      }\\n\\n      if (isDispatching) {\\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\\n      }\\n\\n      isSubscribed = false;\\n\\n      ensureCanMutateNextListeners();\\n      var index = nextListeners.indexOf(listener);\\n      nextListeners.splice(index, 1);\\n    };\\n  }\\n\\n  /**\\n   * Dispatches an action. It is the only way to trigger a state change.\\n   *\\n   * The `reducer` function, used to create the store, will be called with the\\n   * current state tree and the given `action`. Its return value will\\n   * be considered the **next** state of the tree, and the change listeners\\n   * will be notified.\\n   *\\n   * The base implementation only supports plain object actions. If you want to\\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\\n   * wrap your store creating function into the corresponding middleware. For\\n   * example, see the documentation for the `redux-thunk` package. Even the\\n   * middleware will eventually dispatch plain object actions using this method.\\n   *\\n   * @param {Object} action A plain object representing “what changed”. It is\\n   * a good idea to keep actions serializable so you can record and replay user\\n   * sessions, or use the time travelling `redux-devtools`. An action must have\\n   * a `type` property which may not be `undefined`. It is a good idea to use\\n   * string constants for action types.\\n   *\\n   * @returns {Object} For convenience, the same action object you dispatched.\\n   *\\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\\n   * return something else (for example, a Promise you can await).\\n   */\\n  function dispatch(action) {\\n    if (!isPlainObject(action)) {\\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\\n    }\\n\\n    if (typeof action.type === 'undefined') {\\n      throw new Error('Actions may not have an undefined \\\"type\\\" property. ' + 'Have you misspelled a constant?');\\n    }\\n\\n    if (isDispatching) {\\n      throw new Error('Reducers may not dispatch actions.');\\n    }\\n\\n    try {\\n      isDispatching = true;\\n      currentState = currentReducer(currentState, action);\\n    } finally {\\n      isDispatching = false;\\n    }\\n\\n    var listeners = currentListeners = nextListeners;\\n    for (var i = 0; i < listeners.length; i++) {\\n      var listener = listeners[i];\\n      listener();\\n    }\\n\\n    return action;\\n  }\\n\\n  /**\\n   * Replaces the reducer currently used by the store to calculate the state.\\n   *\\n   * You might need this if your app implements code splitting and you want to\\n   * load some of the reducers dynamically. You might also need this if you\\n   * implement a hot reloading mechanism for Redux.\\n   *\\n   * @param {Function} nextReducer The reducer for the store to use instead.\\n   * @returns {void}\\n   */\\n  function replaceReducer(nextReducer) {\\n    if (typeof nextReducer !== 'function') {\\n      throw new Error('Expected the nextReducer to be a function.');\\n    }\\n\\n    currentReducer = nextReducer;\\n    dispatch({ type: ActionTypes.REPLACE });\\n  }\\n\\n  /**\\n   * Interoperability point for observable/reactive libraries.\\n   * @returns {observable} A minimal observable of state changes.\\n   * For more information, see the observable proposal:\\n   * https://github.com/tc39/proposal-observable\\n   */\\n  function observable() {\\n    var _ref;\\n\\n    var outerSubscribe = subscribe;\\n    return _ref = {\\n      /**\\n       * The minimal observable subscription method.\\n       * @param {Object} observer Any object that can be used as an observer.\\n       * The observer object should have a `next` method.\\n       * @returns {subscription} An object with an `unsubscribe` method that can\\n       * be used to unsubscribe the observable from the store, and prevent further\\n       * emission of values from the observable.\\n       */\\n      subscribe: function subscribe(observer) {\\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {\\n          throw new TypeError('Expected the observer to be an object.');\\n        }\\n\\n        function observeState() {\\n          if (observer.next) {\\n            observer.next(getState());\\n          }\\n        }\\n\\n        observeState();\\n        var unsubscribe = outerSubscribe(observeState);\\n        return { unsubscribe: unsubscribe };\\n      }\\n    }, _ref[_symbolObservable2.default] = function () {\\n      return this;\\n    }, _ref;\\n  }\\n\\n  // When a store is created, an \\\"INIT\\\" action is dispatched so that every\\n  // reducer returns their initial state. This effectively populates\\n  // the initial state tree.\\n  dispatch({ type: ActionTypes.INIT });\\n\\n  return _ref2 = {\\n    dispatch: dispatch,\\n    subscribe: subscribe,\\n    getState: getState,\\n    replaceReducer: replaceReducer\\n  }, _ref2[_symbolObservable2.default] = observable, _ref2;\\n}\\n\\n/**\\n * Prints a warning in the console if it exists.\\n *\\n * @param {String} message The warning message.\\n * @returns {void}\\n */\\nfunction warning(message) {\\n  /* eslint-disable no-console */\\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\\n    console.error(message);\\n  }\\n  /* eslint-enable no-console */\\n  try {\\n    // This error was thrown as a convenience so that if you enable\\n    // \\\"break on all exceptions\\\" in your console,\\n    // it would pause the execution at this line.\\n    throw new Error(message);\\n  } catch (e) {} // eslint-disable-line no-empty\\n}\\n\\nfunction getUndefinedStateErrorMessage(key, action) {\\n  var actionType = action && action.type;\\n  var actionDescription = actionType && 'action \\\"' + String(actionType) + '\\\"' || 'an action';\\n\\n  return 'Given ' + actionDescription + ', reducer \\\"' + key + '\\\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\\n}\\n\\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\\n  var reducerKeys = Object.keys(reducers);\\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\\n\\n  if (reducerKeys.length === 0) {\\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\\n  }\\n\\n  if (!isPlainObject(inputState)) {\\n    return 'The ' + argumentName + ' has unexpected type of \\\"' + {}.toString.call(inputState).match(/\\\\s([a-z|A-Z]+)/)[1] + '\\\". Expected argument to be an object with the following ' + ('keys: \\\"' + reducerKeys.join('\\\", \\\"') + '\\\"');\\n  }\\n\\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\\n  });\\n\\n  unexpectedKeys.forEach(function (key) {\\n    unexpectedKeyCache[key] = true;\\n  });\\n\\n  if (action && action.type === ActionTypes.REPLACE) return;\\n\\n  if (unexpectedKeys.length > 0) {\\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\\\"' + unexpectedKeys.join('\\\", \\\"') + '\\\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\\\"' + reducerKeys.join('\\\", \\\"') + '\\\". Unexpected keys will be ignored.');\\n  }\\n}\\n\\nfunction assertReducerShape(reducers) {\\n  Object.keys(reducers).forEach(function (key) {\\n    var reducer = reducers[key];\\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\\n\\n    if (typeof initialState === 'undefined') {\\n      throw new Error('Reducer \\\"' + key + '\\\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\\n    }\\n\\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\\n      throw new Error('Reducer \\\"' + key + '\\\" returned undefined when probed with a random type. ' + ('Don\\\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \\\"redux/*\\\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\\n    }\\n  });\\n}\\n\\n/**\\n * Turns an object whose values are different reducer functions, into a single\\n * reducer function. It will call every child reducer, and gather their results\\n * into a single state object, whose keys correspond to the keys of the passed\\n * reducer functions.\\n *\\n * @param {Object} reducers An object whose values correspond to different\\n * reducer functions that need to be combined into one. One handy way to obtain\\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\\n * undefined for any action. Instead, they should return their initial state\\n * if the state passed to them was undefined, and the current state for any\\n * unrecognized action.\\n *\\n * @returns {Function} A reducer function that invokes every reducer inside the\\n * passed object, and builds a state object with the same shape.\\n */\\nfunction combineReducers(reducers) {\\n  var reducerKeys = Object.keys(reducers);\\n  var finalReducers = {};\\n  for (var i = 0; i < reducerKeys.length; i++) {\\n    var key = reducerKeys[i];\\n\\n    if (false) {}\\n\\n    if (typeof reducers[key] === 'function') {\\n      finalReducers[key] = reducers[key];\\n    }\\n  }\\n  var finalReducerKeys = Object.keys(finalReducers);\\n\\n  var unexpectedKeyCache = void 0;\\n  if (false) {}\\n\\n  var shapeAssertionError = void 0;\\n  try {\\n    assertReducerShape(finalReducers);\\n  } catch (e) {\\n    shapeAssertionError = e;\\n  }\\n\\n  return function combination() {\\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    var action = arguments[1];\\n\\n    if (shapeAssertionError) {\\n      throw shapeAssertionError;\\n    }\\n\\n    if (false) { var warningMessage; }\\n\\n    var hasChanged = false;\\n    var nextState = {};\\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\\n      var _key = finalReducerKeys[_i];\\n      var reducer = finalReducers[_key];\\n      var previousStateForKey = state[_key];\\n      var nextStateForKey = reducer(previousStateForKey, action);\\n      if (typeof nextStateForKey === 'undefined') {\\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\\n        throw new Error(errorMessage);\\n      }\\n      nextState[_key] = nextStateForKey;\\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\\n    }\\n    return hasChanged ? nextState : state;\\n  };\\n}\\n\\nfunction bindActionCreator(actionCreator, dispatch) {\\n  return function () {\\n    return dispatch(actionCreator.apply(this, arguments));\\n  };\\n}\\n\\n/**\\n * Turns an object whose values are action creators, into an object with the\\n * same keys, but with every function wrapped into a `dispatch` call so they\\n * may be invoked directly. This is just a convenience method, as you can call\\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\\n *\\n * For convenience, you can also pass a single function as the first argument,\\n * and get a function in return.\\n *\\n * @param {Function|Object} actionCreators An object whose values are action\\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\\n * syntax. You may also pass a single function.\\n *\\n * @param {Function} dispatch The `dispatch` function available on your Redux\\n * store.\\n *\\n * @returns {Function|Object} The object mimicking the original object, but with\\n * every action creator wrapped into the `dispatch` call. If you passed a\\n * function as `actionCreators`, the return value will also be a single\\n * function.\\n */\\nfunction bindActionCreators(actionCreators, dispatch) {\\n  if (typeof actionCreators === 'function') {\\n    return bindActionCreator(actionCreators, dispatch);\\n  }\\n\\n  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?');\\n  }\\n\\n  var keys = Object.keys(actionCreators);\\n  var boundActionCreators = {};\\n  for (var i = 0; i < keys.length; i++) {\\n    var key = keys[i];\\n    var actionCreator = actionCreators[key];\\n    if (typeof actionCreator === 'function') {\\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\\n    }\\n  }\\n  return boundActionCreators;\\n}\\n\\n/**\\n * Composes single-argument functions from right to left. The rightmost\\n * function can take multiple arguments as it provides the signature for\\n * the resulting composite function.\\n *\\n * @param {...Function} funcs The functions to compose.\\n * @returns {Function} A function obtained by composing the argument functions\\n * from right to left. For example, compose(f, g, h) is identical to doing\\n * (...args) => f(g(h(...args))).\\n */\\n\\nfunction compose() {\\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\\n    funcs[_key] = arguments[_key];\\n  }\\n\\n  if (funcs.length === 0) {\\n    return function (arg) {\\n      return arg;\\n    };\\n  }\\n\\n  if (funcs.length === 1) {\\n    return funcs[0];\\n  }\\n\\n  return funcs.reduce(function (a, b) {\\n    return function () {\\n      return a(b.apply(undefined, arguments));\\n    };\\n  });\\n}\\n\\n/**\\n * Creates a store enhancer that applies middleware to the dispatch method\\n * of the Redux store. This is handy for a variety of tasks, such as expressing\\n * asynchronous actions in a concise manner, or logging every action payload.\\n *\\n * See `redux-thunk` package as an example of the Redux middleware.\\n *\\n * Because middleware is potentially asynchronous, this should be the first\\n * store enhancer in the composition chain.\\n *\\n * Note that each middleware will be given the `dispatch` and `getState` functions\\n * as named arguments.\\n *\\n * @param {...Function} middlewares The middleware chain to be applied.\\n * @returns {Function} A store enhancer applying the middleware.\\n */\\nfunction applyMiddleware() {\\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\\n    middlewares[_key] = arguments[_key];\\n  }\\n\\n  return function (createStore) {\\n    return function () {\\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n        args[_key2] = arguments[_key2];\\n      }\\n\\n      var store = createStore.apply(undefined, args);\\n      var _dispatch = function dispatch() {\\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\\n      };\\n\\n      var middlewareAPI = {\\n        getState: store.getState,\\n        dispatch: function dispatch() {\\n          return _dispatch.apply(undefined, arguments);\\n        }\\n      };\\n      var chain = middlewares.map(function (middleware) {\\n        return middleware(middlewareAPI);\\n      });\\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\\n\\n      return _extends({}, store, {\\n        dispatch: _dispatch\\n      });\\n    };\\n  };\\n}\\n\\n/*\\n * This is a dummy function to check if the function name has been altered by minification.\\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\\n */\\nfunction isCrushed() {}\\n\\nif (false) {}\\n\\nexports.createStore = createStore;\\nexports.combineReducers = combineReducers;\\nexports.bindActionCreators = bindActionCreators;\\nexports.applyMiddleware = applyMiddleware;\\nexports.compose = compose;\\nexports.__DO_NOT_USE__ActionTypes = ActionTypes;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///752\\n\")},753:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _redux = __webpack_require__(752);\\n\\nvar _reducers = __webpack_require__(738);\\n\\nvar _reducers2 = _interopRequireDefault(_reducers);\\n\\nvar _player = __webpack_require__(709);\\n\\nvar playerActions = _interopRequireWildcard(_player);\\n\\nvar _video = __webpack_require__(713);\\n\\nvar videoActions = _interopRequireWildcard(_video);\\n\\nfunction _interopRequireWildcard(obj) {\\n  if (obj && obj.__esModule) {\\n    return obj;\\n  } else {\\n    var newObj = {};if (obj != null) {\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\\n      }\\n    }newObj.default = obj;return newObj;\\n  }\\n}\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nvar Manager = function () {\\n  function Manager(store) {\\n    _classCallCheck(this, Manager);\\n\\n    this.store = store || (0, _redux.createStore)(_reducers2.default);\\n\\n    this.video = null;\\n    this.rootElement = null;\\n  }\\n\\n  _createClass(Manager, [{\\n    key: 'getActions',\\n    value: function getActions() {\\n      var manager = this;\\n      var dispatch = this.store.dispatch;\\n\\n      var actions = _extends({}, playerActions, videoActions);\\n\\n      function bindActionCreator(actionCreator) {\\n        return function bindAction() {\\n          // eslint-disable-next-line prefer-rest-params\\n          var action = actionCreator.apply(manager, arguments);\\n          if (typeof action !== 'undefined') {\\n            dispatch(action);\\n          }\\n        };\\n      }\\n\\n      return Object.keys(actions).filter(function (key) {\\n        return typeof actions[key] === 'function';\\n      }).reduce(function (boundActions, key) {\\n        boundActions[key] = bindActionCreator(actions[key]);\\n        return boundActions;\\n      }, {});\\n    }\\n  }, {\\n    key: 'getState',\\n    value: function getState() {\\n      return this.store.getState();\\n    }\\n\\n    // subscribe state change\\n\\n  }, {\\n    key: 'subscribeToStateChange',\\n    value: function subscribeToStateChange(listener, getState) {\\n      if (!getState) {\\n        getState = this.getState.bind(this);\\n      }\\n\\n      var prevState = getState();\\n\\n      var handleChange = function handleChange() {\\n        var state = getState();\\n        if (state === prevState) {\\n          return;\\n        }\\n        var prevStateCopy = prevState;\\n        prevState = state;\\n        listener(state, prevStateCopy);\\n      };\\n\\n      return this.store.subscribe(handleChange);\\n    }\\n\\n    // subscribe to operation state change\\n\\n  }, {\\n    key: 'subscribeToOperationStateChange',\\n    value: function subscribeToOperationStateChange(listener) {\\n      var _this = this;\\n\\n      return this.subscribeToStateChange(listener, function () {\\n        return _this.getState().operation;\\n      });\\n    }\\n\\n    // subscribe to player state change\\n\\n  }, {\\n    key: 'subscribeToPlayerStateChange',\\n    value: function subscribeToPlayerStateChange(listener) {\\n      var _this2 = this;\\n\\n      return this.subscribeToStateChange(listener, function () {\\n        return _this2.getState().player;\\n      });\\n    }\\n  }]);\\n\\n  return Manager;\\n}();\\n\\nexports.default = Manager;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmlkZW8tcmVhY3QvbGliL01hbmFnZXIuanM/ODgwNyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9yZWR1eCIsInJlcXVpcmUiLCJfcmVkdWNlcnMiLCJfcmVkdWNlcnMyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9wbGF5ZXIiLCJwbGF5ZXJBY3Rpb25zIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfdmlkZW8iLCJ2aWRlb0FjdGlvbnMiLCJvYmoiLCJfX2VzTW9kdWxlIiwibmV3T2JqIiwiZGVmYXVsdCIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiVHlwZUVycm9yIiwiTWFuYWdlciIsInN0b3JlIiwiY3JlYXRlU3RvcmUiLCJ2aWRlbyIsInJvb3RFbGVtZW50IiwiZ2V0QWN0aW9ucyIsIm1hbmFnZXIiLCJkaXNwYXRjaCIsImFjdGlvbnMiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJiaW5kQWN0aW9uIiwiYWN0aW9uIiwiYXBwbHkiLCJrZXlzIiwiZmlsdGVyIiwicmVkdWNlIiwiYm91bmRBY3Rpb25zIiwiZ2V0U3RhdGUiLCJzdWJzY3JpYmVUb1N0YXRlQ2hhbmdlIiwibGlzdGVuZXIiLCJiaW5kIiwicHJldlN0YXRlIiwiaGFuZGxlQ2hhbmdlIiwic3RhdGUiLCJwcmV2U3RhdGVDb3B5Iiwic3Vic2NyaWJlIiwic3Vic2NyaWJlVG9PcGVyYXRpb25TdGF0ZUNoYW5nZSIsIl90aGlzIiwib3BlcmF0aW9uIiwic3Vic2NyaWJlVG9QbGF5ZXJTdGF0ZUNoYW5nZSIsIl90aGlzMiIsInBsYXllciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxTQUFPO0FBRG9DLENBQTdDOztBQUlBLElBQUlDLFdBQVdKLE9BQU9LLE1BQVAsSUFBaUIsVUFBVUMsTUFBVixFQUFrQjtBQUFFLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJQyxVQUFVQyxNQUE5QixFQUFzQ0YsR0FBdEMsRUFBMkM7QUFBRSxRQUFJRyxTQUFTRixVQUFVRCxDQUFWLENBQWIsQ0FBMkIsS0FBSyxJQUFJSSxHQUFULElBQWdCRCxNQUFoQixFQUF3QjtBQUFFLFVBQUlWLE9BQU9ZLFNBQVAsQ0FBaUJDLGNBQWpCLENBQWdDQyxJQUFoQyxDQUFxQ0osTUFBckMsRUFBNkNDLEdBQTdDLENBQUosRUFBdUQ7QUFBRUwsZUFBT0ssR0FBUCxJQUFjRCxPQUFPQyxHQUFQLENBQWQ7QUFBNEI7QUFBRTtBQUFFLEdBQUMsT0FBT0wsTUFBUDtBQUFnQixDQUFoUTs7QUFFQSxJQUFJUyxlQUFlLFlBQVk7QUFBRSxXQUFTQyxnQkFBVCxDQUEwQlYsTUFBMUIsRUFBa0NXLEtBQWxDLEVBQXlDO0FBQUUsU0FBSyxJQUFJVixJQUFJLENBQWIsRUFBZ0JBLElBQUlVLE1BQU1SLE1BQTFCLEVBQWtDRixHQUFsQyxFQUF1QztBQUFFLFVBQUlXLGFBQWFELE1BQU1WLENBQU4sQ0FBakIsQ0FBMkJXLFdBQVdDLFVBQVgsR0FBd0JELFdBQVdDLFVBQVgsSUFBeUIsS0FBakQsQ0FBd0RELFdBQVdFLFlBQVgsR0FBMEIsSUFBMUIsQ0FBZ0MsSUFBSSxXQUFXRixVQUFmLEVBQTJCQSxXQUFXRyxRQUFYLEdBQXNCLElBQXRCLENBQTRCckIsT0FBT0Ms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Q0R0RCxTQUFLLGlDQURKO0FBRURSLFdBQU8sU0FBU2tFLCtCQUFULENBQXlDUCxRQUF6QyxFQUFtRDtBQUN4RCxVQUFJUSxRQUFRLElBQVo7O0FBRUEsYUFBTyxLQUFLVCxzQkFBTCxDQUE0QkMsUUFBNUIsRUFBc0MsWUFBWTtBQUN2RCxlQUFPUSxNQUFNVixRQUFOLEdBQWlCVyxTQUF4QjtBQUNELE9BRk0sQ0FBUDtBQUdEOztBQUVEOztBQVZDLEdBekRtQixFQXFFbkI7QUFDRDVELFNBQUssOEJBREo7QUFFRFIsV0FBTyxTQUFTcUUsNEJBQVQsQ0FBc0NWLFFBQXRDLEVBQWdEO0FBQ3JELFVBQUlXLFNBQVMsSUFBYjs7QUFFQSxhQUFPLEtBQUtaLHNCQUFMLENBQTRCQyxRQUE1QixFQUFzQyxZQUFZO0FBQ3ZELGVBQU9XLE9BQU9iLFFBQVAsR0FBa0JjLE1BQXpCO0FBQ0QsT0FGTSxDQUFQO0FBR0Q7QUFSQSxHQXJFbUIsQ0FBdEI7O0FBZ0ZBLFNBQU9oQyxPQUFQO0FBQ0QsQ0EzRmEsRUFBZDs7QUE2RkF4QyxRQUFRb0MsT0FBUixHQUFrQkksT0FBbEIiLCJmaWxlIjoiNzUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlZHV4ID0gcmVxdWlyZSgncmVkdXgnKTtcblxudmFyIF9yZWR1Y2VycyA9IHJlcXVpcmUoJy4vcmVkdWNlcnMnKTtcblxudmFyIF9yZWR1Y2VyczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWR1Y2Vycyk7XG5cbnZhciBfcGxheWVyID0gcmVxdWlyZSgnLi9hY3Rpb25zL3BsYXllcicpO1xuXG52YXIgcGxheWVyQWN0aW9ucyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9wbGF5ZXIpO1xuXG52YXIgX3ZpZGVvID0gcmVxdWlyZSgnLi9hY3Rpb25zL3ZpZGVvJyk7XG5cbnZhciB2aWRlb0FjdGlvbnMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfdmlkZW8pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IHJldHVybiBuZXdPYmo7IH0gfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgTWFuYWdlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTWFuYWdlcihzdG9yZSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNYW5hZ2VyKTtcblxuICAgIHRoaXMuc3RvcmUgPSBzdG9yZSB8fCAoMCwgX3JlZHV4LmNyZWF0ZVN0b3JlKShfcmVkdWNlcnMyLmRlZmF1bHQpO1xuXG4gICAgdGhpcy52aWRlbyA9IG51bGw7XG4gICAgdGhpcy5yb290RWxlbWVudCA9IG51bGw7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTWFuYWdlciwgW3tcbiAgICBrZXk6ICdnZXRBY3Rpb25zJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QWN0aW9ucygpIHtcbiAgICAgIHZhciBtYW5hZ2VyID0gdGhpcztcbiAgICAgIHZhciBkaXNwYXRjaCA9IHRoaXMuc3RvcmUuZGlzcGF0Y2g7XG5cbiAgICAgIHZhciBhY3Rpb25zID0gX2V4dGVuZHMoe30sIHBsYXllckFjdGlvbnMsIHZpZGVvQWN0aW9ucyk7XG5cbiAgICAgIGZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGJpbmRBY3Rpb24oKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgICAgIHZhciBhY3Rpb24gPSBhY3Rpb25DcmVhdG9yLmFwcGx5KG1hbmFnZXIsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBkaXNwYXRjaChhY3Rpb24pO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGFjdGlvbnMpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgYWN0aW9uc1trZXldID09PSAnZnVuY3Rpb24nO1xuICAgICAgfSkucmVkdWNlKGZ1bmN0aW9uIChib3VuZEFjdGlvbnMsIGtleSkge1xuICAgICAgICBib3VuZEFjdGlvbnNba2V5XSA9IGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbnNba2V5XSk7XG4gICAgICAgIHJldHVybiBib3VuZEFjdGlvbnM7XG4gICAgICB9LCB7fSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0U3RhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnN0b3JlLmdldFN0YXRlKCk7XG4gICAgfVxuXG4gICAgLy8gc3Vic2NyaWJlIHN0YXRlIGNoYW5nZVxuXG4gIH0sIHtcbiAgICBrZXk6ICdzdWJzY3JpYmVUb1N0YXRlQ2hhbmdlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3Vic2NyaWJlVG9TdGF0ZUNoYW5nZShsaXN0ZW5lciwgZ2V0U3RhdGUpIHtcbiAgICAgIGlmICghZ2V0U3RhdGUpIHtcbiAgICAgICAgZ2V0U3RhdGUgPSB0aGlzLmdldFN0YXRlLmJpbmQodGhpcyk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2U3RhdGUgPSBnZXRTdGF0ZSgpO1xuXG4gICAgICB2YXIgaGFuZGxlQ2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKCkge1xuICAgICAgICB2YXIgc3RhdGUgPSBnZXRTdGF0ZSgpO1xuICAgICAgICBpZiAoc3RhdGUgPT09IHByZXZTdGF0ZSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJldlN0YXRlQ29weSA9IHByZXZTdGF0ZTtcbiAgICAgICAgcHJldlN0YXRlID0gc3RhdGU7XG4gICAgICAgIGxpc3RlbmVyKHN0YXRlLCBwcmV2U3RhdGVDb3B5KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzLnN0b3JlLnN1YnNjcmliZShoYW5kbGVDaGFuZ2UpO1xuICAgIH1cblxuICAgIC8vIHN1YnNjcmliZSB0byBvcGVyYXRpb24gc3RhdGUgY2hhbmdlXG5cbiAgfSwge1xuICAgIGtleTogJ3N1YnNjcmliZVRvT3BlcmF0aW9uU3RhdGVDaGFuZ2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdWJzY3JpYmVUb09wZXJhdGlvblN0YXRlQ2hhbmdlKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gdGhpcy5zdWJzY3JpYmVUb1N0YXRlQ2hhbmdlKGxpc3RlbmVyLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5nZXRTdGF0ZSgpLm9wZXJhdGlvbjtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIHN1YnNjcmliZSB0byBwbGF5ZXIgc3RhdGUgY2hhbmdlXG5cbiAgfSwge1xuICAgIGtleTogJ3N1YnNjcmliZVRvUGxheWVyU3RhdGVDaGFuZ2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzdWJzY3JpYmVUb1BsYXllclN0YXRlQ2hhbmdlKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMuc3Vic2NyaWJlVG9TdGF0ZUNoYW5nZShsaXN0ZW5lciwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMyLmdldFN0YXRlKCkucGxheWVyO1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE1hbmFnZXI7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IE1hbmFnZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///753\\n\")},754:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }return target;\\n};\\n\\nvar _createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\\\"value\\\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\\n  };\\n}();\\n\\nvar _propTypes = __webpack_require__(5);\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _react = __webpack_require__(1);\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _classnames = __webpack_require__(8);\\n\\nvar _classnames2 = _interopRequireDefault(_classnames);\\n\\nvar _Manager = __webpack_require__(753);\\n\\nvar _Manager2 = _interopRequireDefault(_Manager);\\n\\nvar _BigPlayButton = __webpack_require__(736);\\n\\nvar _BigPlayButton2 = _interopRequireDefault(_BigPlayButton);\\n\\nvar _LoadingSpinner = __webpack_require__(735);\\n\\nvar _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);\\n\\nvar _PosterImage = __webpack_require__(734);\\n\\nvar _PosterImage2 = _interopRequireDefault(_PosterImage);\\n\\nvar _Video = __webpack_require__(733);\\n\\nvar _Video2 = _interopRequireDefault(_Video);\\n\\nvar _Bezel = __webpack_require__(732);\\n\\nvar _Bezel2 = _interopRequireDefault(_Bezel);\\n\\nvar _Shortcut = __webpack_require__(731);\\n\\nvar _Shortcut2 = _interopRequireDefault(_Shortcut);\\n\\nvar _ControlBar = __webpack_require__(730);\\n\\nvar _ControlBar2 = _interopRequireDefault(_ControlBar);\\n\\nvar _browser = __webpack_require__(740);\\n\\nvar browser = _interopRequireWildcard(_browser);\\n\\nvar _utils = __webpack_require__(708);\\n\\nvar _fullscreen = __webpack_require__(737);\\n\\nvar _fullscreen2 = _interopRequireDefault(_fullscreen);\\n\\nfunction _interopRequireWildcard(obj) {\\n  if (obj && obj.__esModule) {\\n    return obj;\\n  } else {\\n    var newObj = {};if (obj != null) {\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\\n      }\\n    }newObj.default = obj;return newObj;\\n  }\\n}\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nfunction _defineProperty(obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\\n  } else {\\n    obj[key] = value;\\n  }return obj;\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (!self) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }return call && ((typeof call === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(call)) === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + (typeof superClass === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(superClass)));\\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n}\\n\\nvar propTypes = {\\n  children: _propTypes2.default.any,\\n\\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\\n  fluid: _propTypes2.default.bool,\\n  muted: _propTypes2.default.bool,\\n  playsInline: _propTypes2.default.bool,\\n  aspectRatio: _propTypes2.default.string,\\n  className: _propTypes2.default.string,\\n  videoId: _propTypes2.default.string,\\n\\n  startTime: _propTypes2.default.number,\\n  loop: _propTypes2.default.bool,\\n  autoPlay: _propTypes2.default.bool,\\n  src: _propTypes2.default.string,\\n  poster: _propTypes2.default.string,\\n  preload: _propTypes2.default.oneOf(['auto', 'metadata', 'none']),\\n\\n  onLoadStart: _propTypes2.default.func,\\n  onWaiting: _propTypes2.default.func,\\n  onCanPlay: _propTypes2.default.func,\\n  onCanPlayThrough: _propTypes2.default.func,\\n  onPlaying: _propTypes2.default.func,\\n  onEnded: _propTypes2.default.func,\\n  onSeeking: _propTypes2.default.func,\\n  onSeeked: _propTypes2.default.func,\\n  onPlay: _propTypes2.default.func,\\n  onPause: _propTypes2.default.func,\\n  onProgress: _propTypes2.default.func,\\n  onDurationChange: _propTypes2.default.func,\\n  onError: _propTypes2.default.func,\\n  onSuspend: _propTypes2.default.func,\\n  onAbort: _propTypes2.default.func,\\n  onEmptied: _propTypes2.default.func,\\n  onStalled: _propTypes2.default.func,\\n  onLoadedMetadata: _propTypes2.default.func,\\n  onLoadedData: _propTypes2.default.func,\\n  onTimeUpdate: _propTypes2.default.func,\\n  onRateChange: _propTypes2.default.func,\\n  onVolumeChange: _propTypes2.default.func,\\n\\n  store: _propTypes2.default.object\\n};\\n\\nvar defaultProps = {\\n  fluid: true,\\n  muted: false,\\n  playsInline: false,\\n  aspectRatio: 'auto'\\n};\\n\\nvar Player = function (_Component) {\\n  _inherits(Player, _Component);\\n\\n  function Player(props) {\\n    _classCallCheck(this, Player);\\n\\n    var _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this, props));\\n\\n    _this.controlsHideTimer = null;\\n\\n    _this.video = null; // the Video component\\n    _this.manager = new _Manager2.default(props.store);\\n    _this.actions = _this.manager.getActions();\\n    _this.manager.subscribeToPlayerStateChange(_this.handleStateChange.bind(_this));\\n\\n    _this.getStyle = _this.getStyle.bind(_this);\\n    _this.handleResize = _this.handleResize.bind(_this);\\n    _this.getChildren = _this.getChildren.bind(_this);\\n    _this.handleMouseMove = (0, _utils.throttle)(_this.handleMouseMove.bind(_this), 250);\\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\\n    _this.startControlsTimer = _this.startControlsTimer.bind(_this);\\n    _this.handleFullScreenChange = _this.handleFullScreenChange.bind(_this);\\n    _this.handleKeyDown = _this.handleKeyDown.bind(_this);\\n    _this.handleFocus = _this.handleFocus.bind(_this);\\n    _this.handleBlur = _this.handleBlur.bind(_this);\\n    return _this;\\n  }\\n\\n  _createClass(Player, [{\\n    key: 'componentDidMount',\\n    value: function componentDidMount() {\\n      this.handleResize();\\n      window.addEventListener('resize', this.handleResize);\\n\\n      _fullscreen2.default.addEventListener(this.handleFullScreenChange);\\n    }\\n  }, {\\n    key: 'componentWillUnmount',\\n    value: function componentWillUnmount() {\\n      // Remove event listener\\n      window.removeEventListener('resize', this.handleResize);\\n      _fullscreen2.default.removeEventListener(this.handleFullScreenChange);\\n      if (this.controlsHideTimer) {\\n        window.clearTimeout(this.controlsHideTimer);\\n      }\\n    }\\n  }, {\\n    key: 'getDefaultChildren',\\n    value: function getDefaultChildren(props, fullProps) {\\n      var _this2 = this;\\n\\n      return [_react2.default.createElement(_Video2.default, _extends({\\n        ref: function ref(c) {\\n          _this2.video = c;\\n          _this2.manager.video = _this2.video;\\n        },\\n        key: 'video',\\n        order: 0.0\\n      }, fullProps)), _react2.default.createElement(_PosterImage2.default, _extends({\\n        key: 'poster-image',\\n        order: 1.0\\n      }, props)), _react2.default.createElement(_LoadingSpinner2.default, _extends({\\n        key: 'loading-spinner',\\n        order: 2.0\\n      }, props)), _react2.default.createElement(_Bezel2.default, _extends({\\n        key: 'bezel',\\n        order: 3.0\\n      }, props)), _react2.default.createElement(_BigPlayButton2.default, _extends({\\n        key: 'big-play-button',\\n        order: 4.0\\n      }, props)), _react2.default.createElement(_ControlBar2.default, _extends({\\n        key: 'control-bar',\\n        order: 5.0\\n      }, props)), _react2.default.createElement(_Shortcut2.default, _extends({\\n        key: 'shortcut',\\n        order: 99.0\\n      }, props))];\\n    }\\n  }, {\\n    key: 'getChildren',\\n    value: function getChildren(props) {\\n      var propsWithoutChildren = _extends({}, props, {\\n        children: null\\n      });\\n      var children = _react2.default.Children.toArray(this.props.children).filter(function (e) {\\n        return !(0, _utils.isVideoChild)(e);\\n      });\\n      var defaultChildren = this.getDefaultChildren(propsWithoutChildren, props);\\n      return (0, _utils.mergeAndSortChildren)(defaultChildren, children, propsWithoutChildren);\\n    }\\n  }, {\\n    key: 'setWidthOrHeight',\\n    value: function setWidthOrHeight(style, name, value) {\\n      var styleVal = void 0;\\n      if (typeof value === 'string') {\\n        if (value === 'auto') {\\n          styleVal = 'auto';\\n        } else if (value.match(/\\\\d+%/)) {\\n          styleVal = value;\\n        }\\n      } else if (typeof value === 'number') {\\n        styleVal = value + 'px';\\n      }\\n      Object.assign(style, _defineProperty({}, name, styleVal));\\n    }\\n  }, {\\n    key: 'getStyle',\\n    value: function getStyle() {\\n      var fluid = this.props.fluid;\\n\\n      var _manager$getState = this.manager.getState(),\\n          player = _manager$getState.player;\\n\\n      var style = {};\\n      var width = void 0;\\n      var height = void 0;\\n      var aspectRatio = void 0;\\n\\n      // The aspect ratio is either used directly or to calculate width and height.\\n      if (this.props.aspectRatio !== undefined && this.props.aspectRatio !== 'auto') {\\n        // Use any aspectRatio that's been specifically set\\n        aspectRatio = this.props.aspectRatio;\\n      } else if (player.videoWidth) {\\n        // Otherwise try to get the aspect ratio from the video metadata\\n        aspectRatio = player.videoWidth + ':' + player.videoHeight;\\n      } else {\\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\\n        aspectRatio = '16:9';\\n      }\\n\\n      // Get the ratio as a decimal we can use to calculate dimensions\\n      var ratioParts = aspectRatio.split(':');\\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\\n\\n      if (this.props.width !== undefined) {\\n        // Use any width that's been specifically set\\n        width = this.props.width;\\n      } else if (this.props.height !== undefined) {\\n        // Or calulate the width from the aspect ratio if a height has been set\\n        width = this.props.height / ratioMultiplier;\\n      } else {\\n        // Or use the video's metadata, or use the video el's default of 300\\n        width = player.videoWidth || 400;\\n      }\\n\\n      if (this.props.height !== undefined) {\\n        // Use any height that's been specifically set\\n        height = this.props.height;\\n      } else {\\n        // Otherwise calculate the height from the ratio and the width\\n        height = width * ratioMultiplier;\\n      }\\n\\n      if (fluid) {\\n        style.paddingTop = ratioMultiplier * 100 + '%';\\n      } else {\\n        // If Width contains \\\"auto\\\", set \\\"auto\\\" in style\\n        this.setWidthOrHeight(style, 'width', width);\\n        this.setWidthOrHeight(style, 'height', height);\\n      }\\n\\n      return style;\\n    }\\n\\n    // get redux state\\n    // { player, operation }\\n\\n  }, {\\n    key: 'getState',\\n    value: function getState() {\\n      return this.manager.getState();\\n    }\\n\\n    // get playback rate\\n\\n  }, {\\n    key: 'play',\\n\\n    // play the video\\n    value: function play() {\\n      this.video.play();\\n    }\\n\\n    // pause the video\\n\\n  }, {\\n    key: 'pause',\\n    value: function pause() {\\n      this.video.pause();\\n    }\\n\\n    // Change the video source and re-load the video:\\n\\n  }, {\\n    key: 'load',\\n    value: function load() {\\n      this.video.load();\\n    }\\n\\n    // Add a new text track to the video\\n\\n  }, {\\n    key: 'addTextTrack',\\n    value: function addTextTrack() {\\n      var _video;\\n\\n      (_video = this.video).addTextTrack.apply(_video, arguments);\\n    }\\n\\n    // Check if your browser can play different types of video:\\n\\n  }, {\\n    key: 'canPlayType',\\n    value: function canPlayType() {\\n      var _video2;\\n\\n      (_video2 = this.video).canPlayType.apply(_video2, arguments);\\n    }\\n\\n    // seek video by time\\n\\n  }, {\\n    key: 'seek',\\n    value: function seek(time) {\\n      this.video.seek(time);\\n    }\\n\\n    // jump forward x seconds\\n\\n  }, {\\n    key: 'forward',\\n    value: function forward(seconds) {\\n      this.video.forward(seconds);\\n    }\\n\\n    // jump back x seconds\\n\\n  }, {\\n    key: 'replay',\\n    value: function replay(seconds) {\\n      this.video.replay(seconds);\\n    }\\n\\n    // enter or exist full screen\\n\\n  }, {\\n    key: 'toggleFullscreen',\\n    value: function toggleFullscreen() {\\n      this.video.toggleFullscreen();\\n    }\\n\\n    // subscribe to player state change\\n\\n  }, {\\n    key: 'subscribeToStateChange',\\n    value: function subscribeToStateChange(listener) {\\n      return this.manager.subscribeToPlayerStateChange(listener);\\n    }\\n\\n    // player resize\\n\\n  }, {\\n    key: 'handleResize',\\n    value: function handleResize() {}\\n  }, {\\n    key: 'handleFullScreenChange',\\n    value: function handleFullScreenChange() {\\n      this.actions.handleFullscreenChange(_fullscreen2.default.isFullscreen);\\n    }\\n  }, {\\n    key: 'handleMouseDown',\\n    value: function handleMouseDown() {\\n      this.startControlsTimer();\\n    }\\n  }, {\\n    key: 'handleMouseMove',\\n    value: function handleMouseMove() {\\n      this.startControlsTimer();\\n    }\\n  }, {\\n    key: 'handleKeyDown',\\n    value: function handleKeyDown() {\\n      this.startControlsTimer();\\n    }\\n  }, {\\n    key: 'startControlsTimer',\\n    value: function startControlsTimer() {\\n      var _this3 = this;\\n\\n      this.actions.userActivate(true);\\n      clearTimeout(this.controlsHideTimer);\\n      this.controlsHideTimer = setTimeout(function () {\\n        _this3.actions.userActivate(false);\\n      }, 3000);\\n    }\\n  }, {\\n    key: 'handleStateChange',\\n    value: function handleStateChange(state, prevState) {\\n      if (state.isFullscreen !== prevState.isFullscreen) {\\n        this.handleResize();\\n      }\\n      this.forceUpdate(); // re-render\\n    }\\n  }, {\\n    key: 'handleFocus',\\n    value: function handleFocus() {\\n      this.actions.activate(true);\\n    }\\n  }, {\\n    key: 'handleBlur',\\n    value: function handleBlur() {\\n      this.actions.activate(false);\\n    }\\n  }, {\\n    key: 'render',\\n    value: function render() {\\n      var _this4 = this;\\n\\n      var fluid = this.props.fluid;\\n\\n      var _manager$getState2 = this.manager.getState(),\\n          player = _manager$getState2.player;\\n\\n      var paused = player.paused,\\n          hasStarted = player.hasStarted,\\n          waiting = player.waiting,\\n          seeking = player.seeking,\\n          isFullscreen = player.isFullscreen,\\n          userActivity = player.userActivity;\\n\\n      var props = _extends({}, this.props, {\\n        player: player,\\n        actions: this.actions,\\n        manager: this.manager,\\n        store: this.manager.store,\\n        video: this.video ? this.video.video : null\\n      });\\n      var children = this.getChildren(props);\\n\\n      return _react2.default.createElement('div', {\\n        className: (0, _classnames2.default)({\\n          'video-react-controls-enabled': true,\\n          'video-react-has-started': hasStarted,\\n          'video-react-paused': paused,\\n          'video-react-playing': !paused,\\n          'video-react-waiting': waiting,\\n          'video-react-seeking': seeking,\\n          'video-react-fluid': fluid,\\n          'video-react-fullscreen': isFullscreen,\\n          'video-react-user-inactive': !userActivity,\\n          'video-react-user-active': userActivity,\\n          'video-react-workinghover': !browser.IS_IOS\\n        }, 'video-react', this.props.className),\\n        style: this.getStyle(),\\n        ref: function ref(c) {\\n          _this4.manager.rootElement = c;\\n        },\\n        role: 'region',\\n        onTouchStart: this.handleMouseDown,\\n        onMouseDown: this.handleMouseDown,\\n        onMouseMove: this.handleMouseMove,\\n        onKeyDown: this.handleKeyDown,\\n        onFocus: this.handleFocus,\\n        onBlur: this.handleBlur,\\n        tabIndex: '-1'\\n      }, children);\\n    }\\n  }, {\\n    key: 'playbackRate',\\n    get: function get() {\\n      return this.video.playbackRate;\\n    }\\n\\n    // set playback rate\\n    // speed of video\\n\\n    , set: function set(rate) {\\n      this.video.playbackRate = rate;\\n    }\\n  }, {\\n    key: 'muted',\\n    get: function get() {\\n      return this.video.muted;\\n    },\\n    set: function set(val) {\\n      this.video.muted = val;\\n    }\\n  }, {\\n    key: 'volume',\\n    get: function get() {\\n      return this.video.volume;\\n    },\\n    set: function set(val) {\\n      this.video.volume = val;\\n    }\\n\\n    // video width\\n\\n  }, {\\n    key: 'videoWidth',\\n    get: function get() {\\n      return this.video.videoWidth;\\n    }\\n\\n    // video height\\n\\n  }, {\\n    key: 'videoHeight',\\n    get: function get() {\\n      return this.video.videoHeight;\\n    }\\n  }]);\\n\\n  return Player;\\n}(_react.Component);\\n\\nexports.default = Player;\\n\\nPlayer.contextTypes = { store: _propTypes2.default.object };\\nPlayer.propTypes = propTypes;\\nPlayer.defaultProps = defaultProps;\\nPlayer.displayName = 'Player';//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///754\\n\")},755:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nObject.defineProperty(exports, \"__esModule\", {\\n  value: true\\n});\\nexports.operationReducer = exports.playerReducer = exports.videoActions = exports.playerActions = exports.PlaybackRate = exports.PlaybackRateMenuButton = exports.VolumeMenuButton = exports.TimeDivider = exports.DurationDisplay = exports.CurrentTimeDisplay = exports.RemainingTimeDisplay = exports.MouseTimeDisplay = exports.LoadProgressBar = exports.PlayProgressBar = exports.Slider = exports.SeekBar = exports.ProgressControl = exports.FullscreenToggle = exports.ReplayControl = exports.ForwardControl = exports.PlayToggle = exports.ControlBar = exports.Shortcut = exports.Bezel = exports.PosterImage = exports.LoadingSpinner = exports.BigPlayButton = exports.Video = exports.Player = undefined;\\n\\nvar _Player = __webpack_require__(754);\\n\\nvar _Player2 = _interopRequireDefault(_Player);\\n\\nvar _Video = __webpack_require__(733);\\n\\nvar _Video2 = _interopRequireDefault(_Video);\\n\\nvar _BigPlayButton = __webpack_require__(736);\\n\\nvar _BigPlayButton2 = _interopRequireDefault(_BigPlayButton);\\n\\nvar _LoadingSpinner = __webpack_require__(735);\\n\\nvar _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);\\n\\nvar _PosterImage = __webpack_require__(734);\\n\\nvar _PosterImage2 = _interopRequireDefault(_PosterImage);\\n\\nvar _Slider = __webpack_require__(711);\\n\\nvar _Slider2 = _interopRequireDefault(_Slider);\\n\\nvar _Bezel = __webpack_require__(732);\\n\\nvar _Bezel2 = _interopRequireDefault(_Bezel);\\n\\nvar _Shortcut = __webpack_require__(731);\\n\\nvar _Shortcut2 = _interopRequireDefault(_Shortcut);\\n\\nvar _ControlBar = __webpack_require__(730);\\n\\nvar _ControlBar2 = _interopRequireDefault(_ControlBar);\\n\\nvar _PlayToggle = __webpack_require__(724);\\n\\nvar _PlayToggle2 = _interopRequireDefault(_PlayToggle);\\n\\nvar _ForwardControl = __webpack_require__(723);\\n\\nvar _ForwardControl2 = _interopRequireDefault(_ForwardControl);\\n\\nvar _ReplayControl = __webpack_require__(721);\\n\\nvar _ReplayControl2 = _interopRequireDefault(_ReplayControl);\\n\\nvar _FullscreenToggle = __webpack_require__(720);\\n\\nvar _FullscreenToggle2 = _interopRequireDefault(_FullscreenToggle);\\n\\nvar _ProgressControl = __webpack_require__(729);\\n\\nvar _ProgressControl2 = _interopRequireDefault(_ProgressControl);\\n\\nvar _SeekBar = __webpack_require__(728);\\n\\nvar _SeekBar2 = _interopRequireDefault(_SeekBar);\\n\\nvar _PlayProgressBar = __webpack_require__(727);\\n\\nvar _PlayProgressBar2 = _interopRequireDefault(_PlayProgressBar);\\n\\nvar _LoadProgressBar = __webpack_require__(726);\\n\\nvar _LoadProgressBar2 = _interopRequireDefault(_LoadProgressBar);\\n\\nvar _MouseTimeDisplay = __webpack_require__(725);\\n\\nvar _MouseTimeDisplay2 = _interopRequireDefault(_MouseTimeDisplay);\\n\\nvar _VolumeMenuButton = __webpack_require__(715);\\n\\nvar _VolumeMenuButton2 = _interopRequireDefault(_VolumeMenuButton);\\n\\nvar _PlaybackRateMenuButton = __webpack_require__(710);\\n\\nvar _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);\\n\\nvar _PlaybackRate = __webpack_require__(739);\\n\\nvar _PlaybackRate2 = _interopRequireDefault(_PlaybackRate);\\n\\nvar _RemainingTimeDisplay = __webpack_require__(719);\\n\\nvar _RemainingTimeDisplay2 = _interopRequireDefault(_RemainingTimeDisplay);\\n\\nvar _CurrentTimeDisplay = __webpack_require__(718);\\n\\nvar _CurrentTimeDisplay2 = _interopRequireDefault(_CurrentTimeDisplay);\\n\\nvar _DurationDisplay = __webpack_require__(717);\\n\\nvar _DurationDisplay2 = _interopRequireDefault(_DurationDisplay);\\n\\nvar _TimeDivider = __webpack_require__(716);\\n\\nvar _TimeDivider2 = _interopRequireDefault(_TimeDivider);\\n\\nvar _player = __webpack_require__(709);\\n\\nvar playerActions = _interopRequireWildcard(_player);\\n\\nvar _video = __webpack_require__(713);\\n\\nvar videoActions = _interopRequireWildcard(_video);\\n\\nvar _reducers = __webpack_require__(738);\\n\\nfunction _interopRequireWildcard(obj) {\\n  if (obj && obj.__esModule) {\\n    return obj;\\n  } else {\\n    var newObj = {};if (obj != null) {\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\\n      }\\n    }newObj.default = obj;return newObj;\\n  }\\n}\\n\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : { default: obj };\\n}\\n\\nexports.Player = _Player2.default;\\nexports.Video = _Video2.default;\\nexports.BigPlayButton = _BigPlayButton2.default;\\nexports.LoadingSpinner = _LoadingSpinner2.default;\\nexports.PosterImage = _PosterImage2.default;\\nexports.Bezel = _Bezel2.default;\\nexports.Shortcut = _Shortcut2.default;\\nexports.ControlBar = _ControlBar2.default;\\nexports.PlayToggle = _PlayToggle2.default;\\nexports.ForwardControl = _ForwardControl2.default;\\nexports.ReplayControl = _ReplayControl2.default;\\nexports.FullscreenToggle = _FullscreenToggle2.default;\\nexports.ProgressControl = _ProgressControl2.default;\\nexports.SeekBar = _SeekBar2.default;\\nexports.Slider = _Slider2.default;\\nexports.PlayProgressBar = _PlayProgressBar2.default;\\nexports.LoadProgressBar = _LoadProgressBar2.default;\\nexports.MouseTimeDisplay = _MouseTimeDisplay2.default;\\nexports.RemainingTimeDisplay = _RemainingTimeDisplay2.default;\\nexports.CurrentTimeDisplay = _CurrentTimeDisplay2.default;\\nexports.DurationDisplay = _DurationDisplay2.default;\\nexports.TimeDivider = _TimeDivider2.default;\\nexports.VolumeMenuButton = _VolumeMenuButton2.default;\\nexports.PlaybackRateMenuButton = _PlaybackRateMenuButton2.default;\\nexports.PlaybackRate = _PlaybackRate2.default;\\nexports.playerActions = playerActions;\\nexports.videoActions = videoActions;\\nexports.playerReducer = _reducers.playerReducer;\\nexports.operationReducer = _reducers.operationReducer;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///755\\n')}});","extractedComments":[]}